[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffe in a clean mug <<Instruction>>\nCOMMANDER: the mug is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: We need to make two slices of toast. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of lettuce on a plate please <<Instruction>>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\n\nCOMMANDER response:",
        "answer": "Greetings/Salutations",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: h <<Greetings/Salutations>>\nDRIVER: i <<Greetings/Salutations>>\nCOMMANDER: we need to prepare coffee <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER: making a sandwich <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: what  shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: HI <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: make a salad <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any Tables.\nCOMMANDER: please place the watch on the table <<Instruction>>\nCOMMANDER: the watch is on the sofa chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Please make a slice of toast <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi, What is the task in hand <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nCOMMANDER: First there are two mugs of coffee to be made, but one is dirty and has to be rinsed with water first <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: find the knife on the island <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: what can I help with? <<RequestForInstruction>>\nCOMMANDER: I need mugs putting in the sink <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What do we do today? <<RequestForInstruction>>\nCOMMANDER: make 2 pieces of potato <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: hii <<Greetings/Salutations>>\nCOMMANDER: we shall boil potato in water <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi what are my directions <<Greetings/Salutations,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Please slice lettuce <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what do i do today? <<RequestForInstruction>>\nCOMMANDER: Hello. Please clean the plate on the book shelf. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: can you water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: today we need to find the potato <<Instruction>>\nDRIVER: what shall i do today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Spatula in any Sink.\nCOMMANDER: can you put the spatula in the sink <<Instruction>>\nCOMMANDER: the spatula is currently in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Spatula>\nDRIVER: <move>\nDRIVER: I'm going to clear the sink <<Acknowledge>>\nCOMMANDER: you may need to empty out the sink first <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Prepare coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: i need you to serve 3 slices of tomato on a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: hi, what can i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: remote controls need to be put onto a single chair <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: HI! <<Greetings/Salutations>>\nDRIVER: What  can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: I want you to cook three slices of potato for me <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, please serve 2 slices of tomato onto a clean plate. <<Greetings/Salutations,Instruction>>\nCOMMANDER: There is a knife ontop of the small table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: tomato <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please boil me a potato <<Instruction>>\nCOMMANDER: There should be one in the bin <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Furniture.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: hiii <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: prepare a coffe in clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: First slice the bread <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what shall we do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make coffee in a clean mug please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi..lmake coffee in a clean mug.... <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please can you cook 2 slices of potato and serve them on a clean plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: We need to clean the plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Candle on any Tables.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: place pilows on chair <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nCOMMANDER: bring some water in a container <<Instruction>>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: Could you make me a salad <<Instruction>>\nDRIVER: what would you like in your salad <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: cook 1 slice of potato <<Instruction>>\nDRIVER: <open Microwave>\nDRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: potato is near the sink <<InformationOnObjectDetails>>\nDRIVER: <pickup Apple>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: make 2 cups coffee plz <<Instruction>>\nDRIVER: where is the cup <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: one at coffee pot <<InformationOnObjectDetails>>\nCOMMANDER: one next to it <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: can you make a plate od toast? one slice <<Instruction>>\nDRIVER: <move>\nDRIVER: sure, where can i find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: can you please make coffee? <<Instruction>>\nCOMMANDER: a mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: of course <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: today lets make a slice of toast <<Instruction>>\nDRIVER: how may i be of service <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: Hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: wash the dirty mug from the fridge <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Fridge>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato in a Bowl.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please slice a tomato <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER: The plant needs to be watered <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The plant is on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find letttuce and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: ingredients please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Hi! <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Sofa.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: good day <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What tasks should I do today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: please make some toast <<Instruction>>\nCOMMANDER: bread is in the corner cabinet near tht toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all BaseballBat on any Bed.\nCOMMANDER: pick baseball bat near the door <<Instruction>>\nCOMMANDER: put it on a bed <<Instruction>>\nCOMMANDER: pick bat near main door <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <pickup BaseballBat>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: clean the mug and make coffee <<Instruction>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: nvm <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all newspapers on a table or chair <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: what work can i do for you? <<RequestForInstruction>>\nCOMMANDER: cook a slice of potato <<Instruction>>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a slice of tomato <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: please put all forks in the sink <<Instruction>>\nDRIVER: Where are the forks <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: please clean the plate in the fridge <<Instruction>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi there! Could you cook five slices of potato for me and put them on a clean plate? <<Greetings/Salutations,Instruction>>\nDRIVER: sure! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nDRIVER: <move>\nDRIVER: What can I help you with? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hello. what can i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there i a coffee machine by the window <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: Where is a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Today we will clean all of the cups. <<Instruction>>\nDRIVER: what should i do next <<RequestForInstruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where are the cups <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a cup on the counter. It is close to the mail. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: What do I need to do today? <<RequestForInstruction>>\nCOMMANDER: boiling a potatoe <<Instruction>>\nCOMMANDER: potatoe next to the fridge <<InformationOnObjectDetails>>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: by the tea maker <<InformationOnObjectDetails>>\nDRIVER: <pickup Potato>\nDRIVER: I have picked the potato <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean all p;lates <<Instruction>>\nCOMMANDER: one plate is on the left of the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice of lettuce which is in the fridge <<Instruction,InformationOnObjectDetails>>\nCOMMANDER: knife is in the cabinet below coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork on any DiningTable.\nCOMMANDER: I need help <<Instruction>>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Please put the forks on the dining table <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a salad.\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i'd like a salad <<Instruction>>\nDRIVER: sure thing, what ingredients? <<Acknowledge,RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER: preferrably with lettuce and tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the lettuce and tomoto should be cut with a knife <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what is my task today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: Hi, what's my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: pls cook the potato on the shelf <<Instruction>>\nDRIVER: <move>\nDRIVER: how many slices? <<RequestOtherInfo>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: cook 2 slice potato <<Instruction>>\nCOMMANDER: potato is infront of toaster <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help you today? <<RequestForInstruction>>\nCOMMANDER: can you please make me a salad on a clean plate with tomato and cooked potato? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup DishSponge>\nDRIVER: <putdown Shelf>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a slice of tomato <<Instruction>>\nCOMMANDER: tomato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean all the plate please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure, where are the plates? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello today we are placing all remote controls on one table <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi..lmake coffee in a clean mug.... <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: we need to prepare cofee first please <<Instruction>>\nCOMMANDER: in a mug <<Instruction>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER: by the stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hello. We need to slice some bread to make toast <<Greetings/Salutations,Instruction>>\nCOMMANDER: The bread is to the left of the fridge on the counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick pot in the fridge <<Instruction>>\nCOMMANDER: clean with water <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: sure, i see a container with water <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: slice the lettuce <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Okay we are going to make a cup of coffee <<Instruction>>\nDRIVER: Great, where do I start? Picking up the mug? <<Acknowledge,Confirm>>\nCOMMANDER: First pick up the mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hi first we need the lettuce on the kitchen table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: We will need to slice it with the knife there <<Instruction>>\nDRIVER: whaty should I do to the lettuce <<RequestOtherInfo>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sanwich <<Instruction>>\nDRIVER: hi, what shall i do today. <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER: Hi, today I'd like to gather all my alarm clocks on my bed please <<Greetings/Salutations,Instruction>>\nDRIVER: of course <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: hi, task plz <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: hello, task please? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <putdown SideTable>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Tomato is on the rack <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: please clean all the cloths <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg on any DiningTable.\nDRIVER: what can i help with today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello, can you put the tissue boxes on the side tables <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup TissueBox>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: water the plant <<Instruction>>\nCOMMANDER: bring some water in a container from the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What's the first task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Apple>\nDRIVER: Where's tomato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: I am ready to help <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hi, can you make coffee? <<Instruction>>\nDRIVER: hello how can I help? <<RequestForInstruction>>\nCOMMANDER: a mug is in the right cupboard under the sink <<InformationOnObjectDetails>>\nDRIVER: sure thank you <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all BaseballBat on any Bed.\nCOMMANDER: pick baseball bat near the door <<Instruction>>\nCOMMANDER: put it on a bed <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Plate in any Cabinet.\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please put the plate next to the microwave in a cabinet <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: bread in fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: Hi how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please slice a lettuce <<Instruction>>\nDRIVER: Sure where can I find a knife and the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a lettuce in the middle island <<InformationOnObjectDetails>>\nCOMMANDER: You should be able to find a knife in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: put 2 watches onto single sofa <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: one is at the centre <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "NotifyFailure"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should i do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Please make 2 slices of toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Kindly wait a minute <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Sink.\n\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: how can i serve you today/ <<RequestForInstruction>>\nCOMMANDER: Please put the remote controls on the coffee table <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nDRIVER: Hi, what  are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi i need 2 saltshakers put onto the dining table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Book on any Bed.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: today you need to put all the books on bed <<Instruction>>\nDRIVER: where are the books <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: left to bed <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What should i do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle on LightSwitch>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: lettuce is inside the fridge make 2 slices <<InformationOnObjectDetails,Instruction>>\nDRIVER: where can i find a knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: lets make breakfast <<Instruction>>\nCOMMANDER: first <<Instruction>>\nCOMMANDER: we need a clean mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nCOMMANDER: The bread is in the cabinet below the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: hello what is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fruit on any DiningTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread on any DiningTable.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will put all bread on the dining table. <<Instruction>>\nCOMMANDER: Go to the sink <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: make two slices of toast <<Instruction>>\nDRIVER: where are bread and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: bread is in the fridge <<InformationOnObjectDetails>>\nDRIVER: knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: Hello, task please <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cookwares.\nDRIVER: what can i help you with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Potato in any Cabinet.\nCOMMANDER: Hi, can you put potato into cabinet? <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Sofa.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: we need to collect watches <<Instruction>>\nDRIVER: <move>\nCOMMANDER: and place them on the sofa please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Tablewares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER: clean all tablewares.......thats your job today <<Instruction>>\nDRIVER: can you direct me to first one <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: our goal today is to water the plant <<Instruction>>\nDRIVER: what should i do? <<RequestForInstruction>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: if you go to the sink do you see a cup or a bowl or anything <<Instruction>>\nDRIVER: <move>\nCOMMANDER: ooh behind the statue <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: task plz <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup PaperTowelRoll>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <pour Pot>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today you will make  a salad <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: go and wash the dishes in the sink <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, how are you? <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: What should I do today> <<RequestForInstruction>>\nCOMMANDER: find a cloth <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What do we do today? <<RequestForInstruction>>\nCOMMANDER: make 2 pieces of potato <<Instruction>>\nCOMMANDER: potato is in the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pen on any Desk.\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi We need to place all pens on the desk <<Greetings/Salutations,Instruction>>\nDRIVER: OK. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Pen>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Clean all the clothes <<Instruction>>\nDRIVER: <move>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: task <<InformationOther>>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: all remote controls on the arm chair <<Instruction>>\nDRIVER: Do I need to move the remote? <<RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: I need my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: Okay, I found a cup that I can use <<Acknowledge,Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: Hi, what's my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: pls cook the potato on the shelf <<Instruction>>\nDRIVER: <move>\nDRIVER: how many slices? <<RequestOtherInfo>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: ?? <<RequestOtherInfo>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello, what shall I   be doing today? <<RequestForInstruction>>\nCOMMANDER: Please cook 2 slices of potato and serve on a plate. <<Instruction>>\nDRIVER: Ok. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Bowls.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please get the bowl from the stool and rinse it <<InformationOnObjectDetails,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task today? <<RequestForInstruction>>\nCOMMANDER: hey make a sandwich please <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: whats the first step? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: Can you please make a sandwich <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: make 2 slices of toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: and also add 2 slices of tomato <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cup on any DiningTable.\nDRIVER: hello. how may i hlep? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you place all the cups onto the dining room table <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a cup in a fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: <move>\nCOMMANDER: Hi. Please cook one slice of potato. <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffe in a clean mug <<Instruction>>\nCOMMANDER: the mug is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: coffee is done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi there! What's my task for today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: making coffee <<Instruction>>\nDRIVER: Excellent. I'm on it. <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nCOMMANDER: lets cut some lettuce first <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER: makea plate of toast please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: whats my task <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 2 remotes <<Instruction>>\nCOMMANDER: put in a single table <<Instruction>>\nCOMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all CreditCard on any Bed.\nDRIVER: Hello what is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: put creditcards on bed <<Instruction>>\nDRIVER: thank you <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: one is in the trash <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of lettuce on a plate please <<Instruction>>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: checking cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: potto is the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: potato is the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: HI! <<Greetings/Salutations>>\nCOMMANDER: Please cook 1 slice of potato. <<Instruction>>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Potato is on the back table behind the lettuce and bread <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: lets make brefakfst <<Instruction>>\nDRIVER: <move>\nCOMMANDER: make coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER: in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what work can i help with today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please! <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, task please <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: k <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: lettuce on the counter <<InformationOnObjectDetails>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello cook a slice of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: where is potato plz <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please cut the lettuce in the middle with a knife <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: We must rinse the dirty bowl <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: the bowl is on a stool at the counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER: The bowl is on the other side of the counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: I need my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: Okay, I found a cup that I can use <<Acknowledge,Acknowledge>>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: go get a potatoe <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: Lets start with slicing the bread <<Instruction>>\nCOMMANDER: we need to make a toast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: serve tomatoes in a boel <<Instruction>>\nCOMMANDER: bowl <<Instruction>>\nCOMMANDER: slice tomatoes first <<Instruction>>\nDRIVER: Okay, where can I find the tomatoes? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: tomato on the chair <<InformationOnObjectDetails>>\nDRIVER: Thank you <<Acknowledge>>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Make a sandwich.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: ANUGGDG0JJ4PK <<MiscOther>>\nCOMMANDER: Make 2 sandwich toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: I mean 2 slice of toast <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: can you water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: put 2 remotes onto a single chair <<Instruction>>\nCOMMANDER: one is on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto brown table next to tv <<Instruction>>\nCOMMANDER: one is on the sofa <<InformationOnObjectDetails>>\nDRIVER: Sure. Remote locations, please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: Thank you. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Boil a potato <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: whats the first task? <<RequestForInstruction>>\nDRIVER: <toggle off Faucet>\nCOMMANDER: clean all the cups, the cup is dirty. Rinse with water. <<Instruction,InformationOther,Instruction>>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nDRIVER: What task can I do? <<RequestForInstruction>>\nCOMMANDER: Today you will put all newspapers on one chair <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: hi, today we will be making a sandwich. please slice bread and make 2 pieces of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: bread <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: place <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: you need to make a salad <<Instruction>>\nCOMMANDER: first make a slice of tomato using a knife. <<Instruction>>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: wash the plate that is in the fridge <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: first task <<RequestForInstruction>>\nCOMMANDER: prepare coffe in clean mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where's the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <pickup Cup>\nDRIVER: found a cup of water in sink <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hi! <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice the tomato <<Instruction>>\nCOMMANDER: tomato and knife are on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: slice bread with a knife please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: bread is in the cupboard under the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: place 2 remotes onto single chair sofa <<Instruction>>\nDRIVER: remote place <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nCOMMANDER: container is left of toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: what should i do <<RequestForInstruction>>\nDRIVER: <pickup Cloth>\nCOMMANDER: please rinse cloth <<Instruction>>\nCOMMANDER: try not to pick up toilet paper, it is a glitch <<OtherInterfaceComment>>\nDRIVER: <toggle off Faucet>\nCOMMANDER: use sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nCOMMANDER: bring some water in container <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: please make cofee in a clean mug, <<Instruction>>\nCOMMANDER: the mug is by the microwave <<InformationOnObjectDetails>>\nDRIVER: will do, thank you <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: how can I help you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like a sandwich <<Instruction>>\nDRIVER: whats in it? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nDRIVER: ok what should I do next? <<Acknowledge,RequestForInstruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: just need my plant watered please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: i see a container with water on the stove <<Acknowledge>>\nDRIVER: <pickup Pot>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Please slice the potato located beside the stove. <<Instruction>>\nCOMMANDER: there is a knife in the black trash can <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: we need to water the plant please <<Instruction>>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: get the green cup from the counter <<Instruction>>\nCOMMANDER: by the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: use that to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: Put two remote controls on one table <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown Dresser>\nDRIVER: any more <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: is there a cup? <<Confirm>>\nDRIVER: <move>\nCOMMANDER: check to the elft of stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: I need help <<Instruction>>\nDRIVER: Hi, how can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I want you to make me coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: Where could I find a cup? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: There should be one in the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve on a Plate.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please cook for slices of potato for me <<Instruction>>\nCOMMANDER: four <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: this is a test <<OtherInterfaceComment>>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: yes hello! <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Egg in one Cabinet.\nCOMMANDER: Please put all eggs in one cabinet <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nDRIVER: ok what should I do next? <<Acknowledge,RequestForInstruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: Hi how can I help you? <<RequestForInstruction>>\nCOMMANDER: i'd like a salad today <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: First, slice the bread <<Instruction>>\nCOMMANDER: Bread is on one of the chairs beside the countertop <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Bowl>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Potato in any Cabinet.\nDRIVER: hi how can i assist you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you put all the potatoes in a cabinet please <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: one potato is on the table next to the fridge <<InformationOnObjectDetails>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello! I am here! <<Greetings/Salutations>>\nCOMMANDER: hey <<Greetings/Salutations>>\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: prepare a breakfast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: we need a potato please <<Instruction>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there is one in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: Found it <<Acknowledge>>\nCOMMANDER: please cook on stove <<Instruction>>\nDRIVER: Do I boil it or slice it? <<AlternateQuestions>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi! <<Greetings/Salutations>>\nDRIVER: What help do you need today? <<RequestForInstruction>>\nCOMMANDER: clean mug please and make coffee <<Instruction>>\nDRIVER: Sure. Where is mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: on the coffee maker <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fruit in any Fridge.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Can you make me a coffee please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The mug is in the drawer to the right of the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Drawer>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hey <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Please look under the sink and retrieve a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What can I do first? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: Hi how are you? <<Greetings/Salutations>>\nDRIVER: Which task first? <<RequestForInstruction>>\nCOMMANDER: Okay, you have to clean all the drinkwares <<Acknowledge,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: which dish first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please boil a potato? <<Instruction>>\nCOMMANDER: There is one to the left of the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any ArmChair.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork on any DiningTable.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: There are 2 remotes <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nDRIVER: hello how are you today <<Greetings/Salutations>>\nDRIVER: What's my first task for today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put the cloth on top of commode into a bathtub <<Instruction>>\nCOMMANDER: red cloth <<InformationOther>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nDRIVER: <move>\nDRIVER: <putdown Bathtub>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put newspaper on the single furniture <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: we need to slice bread first please <<Instruction>>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: lets grab a knife <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Put two newspapers on a single side table <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Drinkware on any DiningTable.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will place all drinkware on the dining table <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Go to the sink <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: potato on the wall rack <<InformationOnObjectDetails>>\nDRIVER: where is the potato and also knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hii <<Greetings/Salutations>>\nCOMMANDER: make a sandwich <<Instruction>>\nDRIVER: hi \\ <<Greetings/Salutations>>\nDRIVER: what  ingredients do I need <<RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what ca i do today <<RequestForInstruction>>\nCOMMANDER: hi we will be making a sandwich. please slice the bread <<Greetings/Salutations,Instruction>>\nDRIVER: where is the bread please <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: the bread is in the right cupboard above the refrigerator <<InformationOnObjectDetails>>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hi there! <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Slice lettuce <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Furniture.\nDRIVER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: hi, please grab the small objects and put them on one piece of furniture <<Greetings/Salutations,Instruction>>\nDRIVER: Okay. <<Acknowledge>>\nDRIVER: Where can I find the small objects, please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: remote under tv <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: whats next <<RequestForInstruction>>\nCOMMANDER: Clean the cup by the sink. It is dirty. <<InformationOnObjectDetails,InformationOther>>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Make a salad.\nCOMMANDER: HI <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato please <<Instruction>>\nCOMMANDER: sorry for the delay <<OtherInterfaceComment>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: hi, please put all pillows on any arm chair <<Greetings/Salutations,Instruction>>\nCOMMANDER: there are three pillows <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi,what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Add coffee to a mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Mug is in the coffee maker already <<InformationOnObjectDetails>>\nDRIVER: should i rinse the mug or not? <<AlternateQuestions>>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: dont <<Deny>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: Tomato is inside the microwave <<InformationOnObjectDetails>>\nDRIVER: <slice Tomato>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: ,my task <<RequestForInstruction>>\nCOMMANDER: Today you will make a sandwich <<Instruction>>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can i help you in the kitchen today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Clean all the Mugs <<Instruction>>\nCOMMANDER: on the counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: next to you <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: turn around' <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: lets slice a tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Please slice a piece of lettuce and place it on a plate <<Instruction>>\nCOMMANDER: the lettuce should be next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: and there is a knife on the white side table <<InformationOnObjectDetails>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: lets clean all the bowls <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What tasks should I do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: You ned to serve 2 slices of tomato onto a clean plate. <<Instruction>>\nDRIVER: Where is the kinfe? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: The knife is on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SmallHandheldObjects on any Chairs.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: How can I help you? <<RequestForInstruction>>\nCOMMANDER: find small handheld objects <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: Where should I look first? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: could you please prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any Furniture.\nDRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: helllo <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please put the lettuce in a single cabinet <<Instruction>>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: One is on the island <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: Hello! What should I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: we'll need to get two remotes and put on the armchair <<Instruction>>\nDRIVER: Ok. Where are the remotes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What do I do? <<RequestForInstruction>>\nCOMMANDER: find  a dirty mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please put all remotes on one sofa <<Instruction>>\nDRIVER: sure, where can i find the remotes? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on any SideTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please cut the lettuce in the middle with a knife <<Instruction>>\nCOMMANDER: the knife should be next to it <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: is that all? <<Confirm>>\nCOMMANDER: there is a tomato in the fridge that will also need to be sliced <<InformationOnObjectDetails,Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: task please <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: We have a lot to do! Hello! <<Instruction,Greetings/Salutations>>\nCOMMANDER: We need to wash a mug and fill it with coffee <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: Can you find and place the dish sponges into the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there should be one in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fruit on any DiningTable.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: please turn on the burner where the potato is <<Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any CoffeeTable.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Are you ready for your task? <<Confirm>>\nCOMMANDER: Please put the watch on the coffee table. <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: whats the first task? <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: rinse the dirty mug with water <<Instruction>>\nDRIVER: what mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: put ll newspaper on one dresser <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nCOMMANDER: on top of cabinet at the corner, there is a newspaper <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any Sofa.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Hi could you please place all the watches on a sofa for me <<Greetings/Salutations,Instruction>>\nCOMMANDER: the first is on the coffee table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: another is in the bin in the corner of the room <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Cabinet.\nCOMMANDER: Can you place a mug in the cabinet <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how can I help today? <<RequestForInstruction>>\nCOMMANDER: i'd like the plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nDRIVER: found a cup to fill with water <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Plate in any Cabinet.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: Hi ) <<Greetings/Salutations>>\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: lets make some toast <<Instruction>>\nCOMMANDER: first we need to slice some bread with a knife <<Instruction>>\nDRIVER: Sounds good <<Acknowledge>>\nDRIVER: Bread and knife location , please. <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: put all newspapers onto a single sofa <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do for you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare cofffee in a clean mug <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hey can you make me a coffee please? <<Greetings/Salutations,Instruction>>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: okay on it <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where is the cup? <<RequestForInstruction>>\nCOMMANDER: thank you! <<Acknowledge>>\nCOMMANDER: in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: ?task <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare coffee in the clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Sofa.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. We are finding pillows and putting them on a sofa. <<Greetings/Salutations,Instruction>>\nCOMMANDER: there is one on a table in the corner <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER: We need one slice of toast. <<Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Egg on any DiningTable.\nDRIVER: Hello, what is my directions? <<RequestForInstruction>>\nCOMMANDER: i need you to put all of my eggs onto the dining table <<Instruction>>\nCOMMANDER: there should be some in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Make 2 slice  of tomato <<Instruction>>\nCOMMANDER: tomato is next to the toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: im looking for a knife <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: whats first <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: the plant needs to be watered <<Instruction>>\nDRIVER: <move>\nCOMMANDER: go near to sink <<Instruction>>\nDRIVER: <move>\nDRIVER: this plant? <<AlternateQuestions>>\nCOMMANDER: take the container <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi..what is my task today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Spatula in one Cabinet.\nDRIVER: how can i help you? <<RequestForInstruction>>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Cook 1 slice of Potato and serve on a Plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER: knife is in fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: plates on the table <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello, what is my task ? <<Greetings/Salutations>>\nCOMMANDER: lets make a salad <<Instruction>>\nCOMMANDER: slice the lettuce please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pencil on any Bed.\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: go the desk <<Instruction>>\nDRIVER: <pickup Pencil>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER: clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: mug behind the coffeemaker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to make a salad with one slice of lettuce <<Instruction>>\nCOMMANDER: 2 slices of tomato <<Instruction>>\nCOMMANDER: and one slice cooked potato <<Instruction>>\nDRIVER: of course <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi please boil poato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup DishSponge>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: what shall i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Cook 1 slice of potato <<Instruction>>\nDRIVER: where is potato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hi how can i help you today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please could you clean the drinkware <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: Let's make some toast <<Instruction>>\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: can you see this emssage? <<MiscOther>>\nDRIVER: yes <<Affirm>>\nDRIVER: what should I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What do I do? <<RequestForInstruction>>\nCOMMANDER: find  a dirty mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: wash it? <<Confirm>>\nCOMMANDER: that one <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: then rinse it <<Instruction>>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hello, <<Greetings/Salutations>>\nDRIVER: what do i do <<RequestForInstruction>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: Pleas make a single slice tomato sandwich <<Instruction>>\nDRIVER: ok what do i use <<RequestForInstruction>>\nCOMMANDER: knife on table, bread in fridge, tomato in garbage. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<InformationOther>>\nDRIVER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: Where can I find the mug, please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: please cook two slices of potato and serve on a clean plate <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: the potato is in the trash can <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: nice <<Acknowledge>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. First we need to get the coffee mug from the fridge and make coffee. <<Greetings/Salutations,Instruction>>\nDRIVER: Ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make salad today <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the first step? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: the plant needs to be watered <<Instruction>>\nDRIVER: what should i do for today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: use any cup  to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup WateringCan>\nDRIVER: <move>\nDRIVER: <putdown SideTable>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any Furniture.\nDRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: could you do me a favour and put both my alarm clocks on my bed please <<Instruction>>\nDRIVER: I'll get straight to it <<Acknowledge>>\nCOMMANDER: theres one on the green chair in front of you <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: the other is on the shelf in the other room <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Bed>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a slice of bread toast <<Instruction>>\nCOMMANDER: bread is inside the fridge <<InformationOnObjectDetails>>\nCOMMANDER: knife is on the centre island <<InformationOnObjectDetails>>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We need to rinse the drinkware with water. <<Instruction>>\nDRIVER: cup, mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there is something in the cabinet in the top right corner of the room <<InformationOnObjectDetails>>\nDRIVER: above something ? <<RequestOtherInfo>>\nDRIVER: there is alot of cabinets <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: Hi. Today we're making a salad. <<Greetings/Salutations,Instruction>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: There is lettuce in the drawer to the left of the stove. <<InformationOnObjectDetails>>\nDRIVER: lets do it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hello, first slice the bread <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please make a plate of toast. Only one slice is needed. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Spoon>\nDRIVER: <putdown Sink>\nDRIVER: knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello. please serve one slice tomato in a bowl <<Greetings/Salutations,Instruction>>\nDRIVER: Ok. Where is the tomato? <<Acknowledge>>\nCOMMANDER: can i help you find anything? <<MiscOther>>\nCOMMANDER: one moment <<MiscOther>>\nDRIVER: I see the tomato. <<Acknowledge>>\nDRIVER: What about a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like a slice of tomato in a bowl <<Instruction>>\nCOMMANDER: you will have to clean the bowl <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what is the task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi, what are my directions <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hey, could you make me a coffee please? <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. We are going to serve a slice of cooked potato on a plate. <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <open Fridge>\nCOMMANDER: make one slice of toast please <<Instruction>>\nDRIVER: <close Fridge>\nCOMMANDER: bread is on the black side table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on any Tables.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi! <<Greetings/Salutations>>\nDRIVER: What help do you need today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What I can I do for you? <<RequestForInstruction>>\nCOMMANDER: Hi. Please cook a slice of potato and serve on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Furniture.\nDRIVER: hello how may i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: put the cook on furniture <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: lets make a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first lets slice some bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all TissueBox on any Tables.\nCOMMANDER: hello what should i do today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hello, you are the commander. Tell me what to do today <<Greetings/Salutations,MiscOther,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: we shall put all the tissuebox on any tables <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: Where are the tissueboxes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a potato and cook 2 slices and serve them to me on a plate please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a potato in the mirowave <<InformationOnObjectDetails>>\nDRIVER: where can I find a knife? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any Sofa.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. We are finding pillows and putting them on a sofa. <<Greetings/Salutations,Instruction>>\nCOMMANDER: there is one on a table in the corner <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup SoapBottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: boil a potato please <<Instruction>>\nDRIVER: sure where can I find one? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: on the small table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: got it <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: 2 slice of tomato <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nCOMMANDER: bring some water in container <<Instruction>>\nDRIVER: <move>\nCOMMANDER: from sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Sink.\nDRIVER: how may i assist you <<RequestForInstruction>>\nCOMMANDER: Hi, so we're putting all the forks in the sink <<Greetings/Salutations,Instruction>>\nCOMMANDER: there are 4 forks total <<InformationOther>>\nDRIVER: ok i get right on that <<Acknowledge,Acknowledge>>\nDRIVER: could you tell me where i can find the first fork? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the first is located in the cabinet above the toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: Hello, could you please cook 5 slices of potato? <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug.mug us dirty so rinse with clean water <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in one Cabinet.\nDRIVER: <move>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Put  a mug into a cabinet <<Instruction>>\nDRIVER: Great. Where do I find the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <close Microwave>\nCOMMANDER: There is one on the cabinet above the coffee machine <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Tablewares.\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 5 slice(s) of Tomato in a Bowl.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi,what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello. What is my first task, please? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hello sorry about that <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hi, can you make coffee? <<Instruction>>\nDRIVER: hello how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: <toggle off Faucet>\nCOMMANDER: boil a potato <<Instruction>>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spoon in any Drawer.\nCOMMANDER: please place all the spoons in a drawer <<Instruction>>\nCOMMANDER: there is one in the bin <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task??? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER: check cabinet above the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: slice the bread ontop of the table <<Instruction>>\nDRIVER: <move>\nDRIVER: Where can I   find a knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Spoon in any Sink.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: could you please collect all the spoons and put them into the sink <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: cook 1 slice of potato <<Instruction>>\nDRIVER: <open Microwave>\nDRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: potato is near the sink <<InformationOnObjectDetails>>\nDRIVER: <pickup Apple>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nCOMMANDER: We are going to be cleaning the clothes. <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: how many? <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello there! <<Greetings/Salutations>>\nDRIVER: what shall i do ? <<RequestForInstruction>>\nCOMMANDER: today we're going to boil a potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: toast two slices of bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto brown table next to tv <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can I have some coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: do you see a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi there can you put my 2 arlam clocks on my bed please <<Greetings/Salutations,Instruction>>\nDRIVER: yes I will <<Affirm,Acknowledge>>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Let's start by cleaning a plate. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hello task plz <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: make salad please <<Instruction>>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <pickup Knife>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the black bin next to the fridge <<InformationOnObjectDetails>>\nCOMMANDER: knife is on the stool <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Laptop on any Bed.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all laptops on any bed. <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bowl in any Sink.\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bowl in the sink <<Instruction>>\nCOMMANDER: its between the stove and the door <<InformationOnObjectDetails>>\nDRIVER: I will do this now <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Bowls.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: clean all bowls <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Today could you make me a sandwich <<Instruction>>\nCOMMANDER: First could you slice two slices of bread which is next to the sink and toast them <<Instruction>>\nCOMMANDER: there is a knife also by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any ArmChair.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: there is a watch on the sofa. please place it on an armchair. There is another watch that needs to be put onto the same armchair <<InformationOnObjectDetails,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nDRIVER: <putdown ArmChair>\nDRIVER: <pickup Watch>\nDRIVER: <putdown ArmChair>\nDRIVER: is that all <<Confirm>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Sink.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please place two mugs in the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nDRIVER: hello, what should I do today? <<RequestForInstruction>>\nCOMMANDER: place 2 newspapers onto single chair <<Instruction>>\nDRIVER: where are the newspapers? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: behind tv <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: another one on dining table <<InformationOnObjectDetails>>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: please cook potato and then slice it <<Instruction>>\nDRIVER: <pickup SaltShaker>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: what  shall I do today? <<RequestForInstruction>>\nCOMMANDER: please put all the newspapers onto the table <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Apple in any Cabinet.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you place all the apples in any of the cabinets for me please <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Could you please cook 3 slices of potato and serve them on a plate for me? <<Instruction>>\nCOMMANDER: there is a potato on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: and a plate <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: What can I do for you? <<RequestForInstruction>>\nCOMMANDER: slice a tomatoe please <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi what shall I do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: let's make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first you need to find the knife <<Instruction>>\nDRIVER: <move>\nCOMMANDER: I think there's a knife on the chair by the table <<InformationOnObjectDetails>>\nDRIVER: <pickup Bowl>\nDRIVER: <putdown DiningTable>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Candle on one CoffeeTable.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hello, you need to make a sandwich. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Bowls.\nDRIVER: my job <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Clean two bowls <<Instruction>>\nDRIVER: where they at <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: what should i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: cook a slice of potato you need to slice it with a knife <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: Please clean all the cloths <<Instruction>>\nCOMMANDER: there is one next to the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I help with? <<RequestForInstruction>>\nCOMMANDER: Hi! You need to water the plant, please. <<Greetings/Salutations,Instruction>>\nCOMMANDER: Please bring some water in a container from the sink and pour it into the plant. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: Please place the remote on a single side table. <<Instruction>>\nDRIVER: where is the remote please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can I get for you? <<RequestForInstruction>>\nCOMMANDER: i'd like a coffee please <<Instruction>>\nDRIVER: <move>\nDRIVER: could you direct me to the mug please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in front of toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Good day! Today we are going to clean all the cups. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: There should be a cup located in the microwave. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi, I would like you to prepare breakfast <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: toast 2 bread slices <<Instruction>>\nCOMMANDER: slice 2 lettuce <<Instruction>>\nDRIVER: ingredients location please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hii <<Greetings/Salutations>>\nCOMMANDER: wash dirty mugs in the wash basin <<Instruction>>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: Hi...What is our first task ) <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hello? <<Greetings/Salutations>>\nCOMMANDER: let's try and put the remotes in the boxes <<Instruction>>\nDRIVER: k <<Acknowledge>>\nCOMMANDER: each remote goes in a different box <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: please make a tomato sandwich on a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bread on any DiningTable.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will put all bread on the dining table. <<Instruction>>\nCOMMANDER: Go to the sink <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Spatula in any Sink.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: you need to make a salad <<Instruction>>\nCOMMANDER: first make a slice of tomato using a knife. <<Instruction>>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: near the sink. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: Tomato is inside the microwave <<InformationOnObjectDetails>>\nDRIVER: <slice Tomato>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. We are going to serve a slice of cooked potato on a plate. <<Greetings/Salutations,Instruction>>\nCOMMANDER: There is a potato in the sink <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any Sofa.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Cook 2 slice(s) of Potato and serve on a Plate. <<Instruction>>\nCOMMANDER: the potato is on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread on any DiningTable.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We need to put three bread on the dining table. <<Instruction>>\nCOMMANDER: One is in the fridge. <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SoapBar on any CounterTop.\nDRIVER: how can i help you <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: We need to make a cup of coffee <<Instruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: The mug is inside the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in one Drawer.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello, please place 2 spatulas and place them in to the same drawer. <<Instruction>>\nCOMMANDER: There is one in the cabinet under the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: We need to make a salad. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you make a plate of toast for me <<Instruction>>\nDRIVER: <move>\nCOMMANDER: There is some bread next to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: to the left <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread1 toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: Hi how are you? <<Greetings/Salutations>>\nDRIVER: Which task first? <<RequestForInstruction>>\nCOMMANDER: Okay, you have to clean all the drinkwares <<Acknowledge,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: which dish first? <<RequestForInstruction>>\nCOMMANDER: It just says to rinse drinkwares with water <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Sofa.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve in a Bowl.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: take out the potato from the fridge <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "RequestForObjectLocationAndOtherDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork in any Sink.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Tables.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: put all Watch on one Tables <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: bring some water and pour it into the plants <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <pickup Cup>\nDRIVER: found a cup of water in sink <<Acknowledge>>\nCOMMANDER: great <<FeedbackPositive>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: make coffee <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: first task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: please slice the tomato on the table <<Instruction>>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER: knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all DishSponge in any Sink.\nDRIVER: hello. How can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please place all the dish sponges in the sink <<Instruction>>\nCOMMANDER: there is one on the counter near the bread and tomato <<InformationOnObjectDetails>>\nCOMMANDER: and a second on the stool by the counter <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please make a plate of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: what should i do today <<RequestForInstruction>>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast. <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where is bread <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: where can i find knife <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nDRIVER: hi how can i help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put all the lettuce on a dining table <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: what work can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: slice it using a knife <<Instruction>>\nDRIVER: Can you help me find knife? <<RequestForInstruction>>\nCOMMANDER: knife is in the dustbin <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Could you cook a slice of potato and serve on a plate? <<Greetings/Salutations,Instruction>>\nDRIVER: No problem. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one SideTable.\nDRIVER: Hi what should I do today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hey <<Greetings/Salutations>>\nCOMMANDER: today we need to put all watches  on side table <<Instruction>>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Boil the Potato by cooking it in water. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the plant on the countertop <<InformationOnObjectDetails>>\nDRIVER: <pickup Statue>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi, <<Greetings/Salutations>>\nDRIVER: task please <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: First, slice the bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: The bread is sliced <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's today's task <<RequestForInstruction>>\nCOMMANDER: put all remote controls on single chair <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: whats first <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: the plant needs to be watered <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I supposed to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: Please place the newspapers in the same box. Begin with the one on the chair sightly under the box. <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the chair? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: please turn on the burner where the potato is <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hi!  The directions say make a salad, but it starts out with slicing the lettuce using a knife <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. We need to put coffee in a coffee mug <<Greetings/Salutations,Instruction>>\nCOMMANDER: Mug is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nDRIVER: <pickup Mug>\nDRIVER: <close Microwave>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: I need you to clean all the plates. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please make a salad <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Can you fill a mug with coffee for me <<Instruction>>\nCOMMANDER: There is a clean one on the white table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello! How can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Slice a tomato <<Instruction>>\nDRIVER: Could you tell me where to find the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: checking.. <<InformationOther>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: Hi what should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Place the newspaper into the single dresser <<Instruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: Please clean plate on island and stool <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: take bread <<Instruction>>\nCOMMANDER: in th stand <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: need to get knife by lettuce <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: What do I need to do today? <<RequestForInstruction>>\nCOMMANDER: boiling a potatoe <<Instruction>>\nCOMMANDER: potatoe next to the fridge <<InformationOnObjectDetails>>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi there. You will  need to rinse the dirty cloth with water. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: What should we do today <<RequestForInstruction>>\nCOMMANDER: place the newspapers onto a single table <<Instruction>>\nCOMMANDER: there is one on the couch <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nDRIVER: Sorry, its taking long to load commands guess its a glitch <<NotifyFailure,OtherInterfaceComment>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: i see a pot with water in it.  can i use that? <<Acknowledge,Confirm>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's make coffee <<Instruction>>\nDRIVER: Sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER: Mug seems to be in the right cabinet next to the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: <move>\nDRIVER: Please direct me commander <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: I need directions <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg on any DiningTable.\nDRIVER: what can i help with today? <<RequestForInstruction>>\nCOMMANDER: Hi, today I'd like to gather all my eggs and place them onto the dining room table please <<Greetings/Salutations,Instruction>>\nDRIVER: f course <<Acknowledge>>\nCOMMANDER: the first egg ccan be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: thank you ill start there <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please get the knife in the sink <<Instruction>>\nCOMMANDER: and slice the lettuce that can be found above the toaster <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the knife is close to the edge of the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: We will need to slice the potato on the 2nd shelf behind you <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Or rather to your left <<Instruction>>\nDRIVER: <pickup Potato>\nCOMMANDER: Sorry about that <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all ScrubBrush on any CounterTop.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please take the scrub brush next to the toilet and place it on the counter top <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ScrubBrush>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: Hello. We ned to clean the mug sitting at the sink <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: left <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to make a sandwich today <<Instruction>>\nDRIVER: What should I do first <<RequestForInstruction>>\nCOMMANDER: first lets slice bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: can you slice and serve a tomoato for me please? <<Instruction>>\nDRIVER: yes, how many slices would you like? <<Affirm,RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nDRIVER: <putdown CounterTop>\nCOMMANDER: just the one please <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER: i would like you to prepare a salad for me <<Instruction>>\nCOMMANDER: could you include tomato and cook a slice of potato for it <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: there are 2 plates that needs to be clean <<Instruction>>\nCOMMANDER: one is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: one in the top unit by the sink <<InformationOnObjectDetails>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in one Box.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown CoffeeTable>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown CoffeeTable>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: rinse the cloth close to the sink <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: turn around <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you cook 5 slices of potato <<Instruction>>\nCOMMANDER: the potato is on the shefl <<InformationOnObjectDetails>>\nCOMMANDER: shelf* <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put the remote control that is on the table on a chair <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown ArmChair>\nDRIVER: Is there a specific chair? <<RequestOtherInfo>>\nCOMMANDER: do the same with the remote inside the box next to the black side table <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put 3 alarm clocks on the bed please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: they are in the wardobe left of the bed <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: hi how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: just need the plant watered <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: get the remote on the tv stand and place it on the center furniture <<Instruction>>\nCOMMANDER: where the laptop is <<Instruction>>\nDRIVER: ok <<Affirm>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nDeny\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Acknowledge",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: clean mug is in the wash basin <<Instruction>>\nCOMMANDER: prepare coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: i need you to serve 3 slices of tomato on a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the knife <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, <<Greetings/Salutations>>\nDRIVER: what is my ask <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a sandwhich <<Instruction>>\nDRIVER: sure, what would you like on it? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER: just lettuce <<InformationOther>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi, what can i do for u? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make amug of coffee please <<Instruction>>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like one slice of tomato on a plate <<Instruction>>\nCOMMANDER: plate should be clean already <<InformationOther>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER: tomato is in the cabinet above the toaster <<InformationOnObjectDetails>>\nDRIVER: thanks <<Acknowledge>>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nCOMMANDER: lettuce tomato and potato <<Instruction>>\nCOMMANDER: the knife is on the stool <<InformationOnObjectDetails>>\nCOMMANDER: by the tomato <<InformationOnObjectDetails>>\nCOMMANDER: please get the knife and tomato <<Instruction>>\nCOMMANDER: and bring them to the kitchen island <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is task? <<RequestForInstruction>>\nCOMMANDER: put the newspaper on one funiture <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: Can you please place any forks in the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there should be one fork on the counter, in the corner <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Spatula>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nCOMMANDER: container is left of toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork in any Sink.\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER: So we need to put all the forks in the sinks <<Instruction>>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: Hi! What can I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: today we clean all the dishware <<Instruction>>\nDRIVER: No problem. Where are they located? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in left bottom cabinet under the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello, what can I help you with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: boil potato in water <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi, how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need coffee served in a clean mug please <<Instruction>>\nDRIVER: sure, where can i find a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: what should i do <<RequestForInstruction>>\nDRIVER: <pickup Cloth>\nCOMMANDER: please rinse cloth <<Instruction>>\nCOMMANDER: try not to pick up toilet paper, it is a glitch <<OtherInterfaceComment>>\nDRIVER: <toggle off Faucet>\nCOMMANDER: use sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, you need to rinse the mug with water <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello how are youtoday <<Greetings/Salutations>>\nCOMMANDER: Shall we begin <<Greetings/Salutations>>\nDRIVER: fine let go <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please cook 2 slices of potato and serve them on a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread1 toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Prepare coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER: mug is on the chair near edge table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: you can fill this also <<Instruction>>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nNotifyFailure\n\nExample :\nGoal: Put all Watch on any SideTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Today we are going to prepare breakfast. <<Instruction>>\nCOMMANDER: First prepare coffee in a clean mug. <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER: making a sandwich <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: ok, toasting bread now <<Acknowledge,Acknowledge>>\nCOMMANDER: bread and lettuce <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any ArmChair.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: first put the remote control on the armchair <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: make breakfast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: could you please prepare a coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi what is my task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please make a slice of toast <<Instruction>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: hello, what do you need today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like 2 slices of cooked potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: today we will make a salad. Would you like to start with the lettuce, tomato or potato? <<Instruction>>\nDRIVER: knife please <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: 2 slice of tomato <<Instruction>>\nCOMMANDER: knife is beside toaster <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice lettuce <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: hii <<Greetings/Salutations>>\nCOMMANDER: we shall clean the mugs <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: jello <<Greetings/Salutations>>\nDRIVER: what's my task? <<RequestForInstruction>>\nDRIVER: <open Fridge>\nCOMMANDER: Take a container, put some water in it from the sink and water the plant by the window <<Instruction>>\nDRIVER: <close Fridge>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: Hi, what is my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please put my 2 alarm clocks onto my bed <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the first one is on my desk chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall I do today/? <<RequestForInstruction>>\nCOMMANDER: place remote on single chair <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: middle cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what are doing today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi, we will be making a salad <<Greetings/Salutations,Instruction>>\nCOMMANDER: please slice lettuce and tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: we need a potato please <<Instruction>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: What should I do today <<RequestForInstruction>>\nCOMMANDER: today we will be washing plates. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: check the cupboard to the right of the dishwasher <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: like the cupboard near the white appliance. there's an egg and kettle on the counter over there too <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i'd like a slice of toast <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: first task <<RequestForInstruction>>\nCOMMANDER: prepare coffe in clean mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where's the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "RequestForInstruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on any Tables.\nDRIVER: Hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: Let's put all remotes on the tables <<Instruction>>\nCOMMANDER: There is one on the chair <<InformationOnObjectDetails>>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown CoffeeTable>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello,you need to make a sandwich <<Greetings/Salutations,Instruction>>\nCOMMANDER: yOU NEED TO TOAST 2 PCS OF BREAD <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Bread>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello, prepare coffee in a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: Mug is on the round table <<InformationOnObjectDetails>>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: go and wash the dishes in the sink <<Instruction>>\nCOMMANDER: easy task <<InformationOther>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any Sofa.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Put a pillow on any sofa <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "RequestForObjectLocationAndOtherDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello, please make a cup of coffee <<Greetings/Salutations,Instruction>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: mug to left of stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: could you boil a potato please? <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: please make some toast <<Instruction>>\nCOMMANDER: bread is in the corner cabinet near tht toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Boil the Potato by cooking it in water. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: get dish from microwave <<InformationOnObjectDetails>>\nDRIVER: hi how are you today <<Greetings/Salutations>>\nCOMMANDER: good <<InformationOther>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: boil potato by cooking it in water <<Instruction>>\nCOMMANDER: potato is on the dinning table <<InformationOnObjectDetails>>\nCOMMANDER: pot is on the stove <<InformationOnObjectDetails>>\nCOMMANDER: first fill the pot with water <<Instruction>>\nCOMMANDER: remove the tomato from it <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: Make a salad <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: Hi, today I'd like to gather all my spatula's in a single cabinet <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: The first can be found in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: Hello, what shall I   be ing today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: *doing <<RequestForInstruction>>\nCOMMANDER: Please clean the dirty pot. <<Instruction>>\nDRIVER: Which one shall I   clean? <<RequestForInstruction>>\nDRIVER: The one from the table or the stove? <<AlternateQuestions>>\nDRIVER: <move>\nCOMMANDER: It is on the counter beside the coffee pot <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cookwares.\nDRIVER: what can i help you with? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread in any Cabinet.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I want a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER: toasted with one slice of lettuce <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nRequestForInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: mug is near coffee maker <<InformationOnObjectDetails>>\nCOMMANDER: fill it with water <<Instruction>>\nCOMMANDER: then water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: We need to put a cloth in the bathtub. <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Sink.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Apple in any Cabinet.\nCOMMANDER: Hi, today I want all the apples gathered in a cabinet please <<Greetings/Salutations,Instruction>>\nDRIVER: of course, ill start working on that now <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Apple>\nDRIVER: <move>\nCOMMANDER: There is an apple located in the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, we must locate the bug <<Greetings/Salutations,Instruction>>\nCOMMANDER: mug* <<Instruction>>\nDRIVER: <move>\nCOMMANDER: It is sitting on the barstool <<InformationOnObjectDetails>>\nDRIVER: done <<Acknowledge>>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Pickup a knife and slice a tomato <<Instruction>>\nDRIVER: Could you find knife for me? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: I can see tomato <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: HI, what are we doing? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi, you need to cook a slice of potato. <<Greetings/Salutations,Instruction>>\nCOMMANDER: potato needs to be sliced using a knife <<Instruction>>\nCOMMANDER: grab a knife. <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <pickup Knife>\nDRIVER: <close Microwave>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: yo! <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bottle>\nDRIVER: oh there's water behind me <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi, what should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "The plate is in the cabinet above the sink. <<InformationOnObjectDetails>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork on any DiningTable.\nDRIVER: Hi, what is my direction? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i need you to put my 2 forks onto the dining table <<Instruction>>\nCOMMANDER: there is one next to the sink <<InformationOnObjectDetails>>\nCOMMANDER: and one is next to the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Fork>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <move>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hi please microwave a potato <<Greetings/Salutations,Instruction>>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: also in microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you make me a coffee <<Instruction>>\nCOMMANDER: There should be a clean mug in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Watch on one SideTable.\nDRIVER: Hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <pickup CreditCard>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi! What can I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: wash the cloth near the sink pls <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cups.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Desk.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello. Please grab the book on the armchair and place it on the desk. <<Greetings/Salutations,Instruction>>\nCOMMANDER: The arm chair is behind you to the right <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Book>\nCOMMANDER: Place it on the desk to your left <<Instruction>>\nDRIVER: <putdown Desk>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi please boil poato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup DishSponge>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bottle>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: what's the task? <<Instruction>>\nCOMMANDER: we shall clean all the mugs <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Drinkware in one Cabinet.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: Can you put all the drinkware in the cabinet <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: <toggle off Faucet>\nCOMMANDER: boil a potato <<Instruction>>\nDRIVER: <pickup Plate>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: place in pot on stove <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: tomato is inside the fridge <<InformationOnObjectDetails>>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi there! Could you cook five slices of potato for me and put them on a clean plate? <<Greetings/Salutations,Instruction>>\nDRIVER: sure! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what shall i do <<RequestForInstruction>>\nCOMMANDER: put the remote controls on the single arm chair <<Instruction>>\nCOMMANDER: 3 remotes <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: hji <<Greetings/Salutations>>\nCOMMANDER: hi we have to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: task plz <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: knife is by sink to right <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork on any DiningTable.\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you put 2 forks on the dining table for me please <<Instruction>>\nDRIVER: of course <<Acknowledge>>\nCOMMANDER: thres a fork in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: rinse the dirty mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast <<Instruction>>\nDRIVER: slice bread you mean <<RequestOtherInfo>>\nCOMMANDER: 1st a slice of toast <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: HI <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello..What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: clean all pans <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first pan by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pan>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: we to collect remote controls <<Instruction>>\nDRIVER: <move>\nCOMMANDER: andn put them on 1 chair <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is 1 in the safe <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: Prepare coffee in a mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER: Mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pour Sink>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like a salad <<Instruction>>\nDRIVER: whats in it? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Plate in any Cabinet.\n\nCOMMANDER response:\nConfirm\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: I need you to boil a potato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: put all the watch in one box <<Instruction>>\nDRIVER: how many? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: The plate is on the counter <<Acknowledge>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Bowls.\nDRIVER: Hell <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in any Box.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: Hi. Today we are putting remote controls in a box <<Greetings/Salutations,Instruction>>\nCOMMANDER: The box is on the couch <<InformationOnObjectDetails>>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: On my way. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER: I'm sorry it in the upper cabinet by the toaster. <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER: above the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: one to the left <<InformationOnObjectDetails>>\nDRIVER: That object is too far away to interact with. <<NotifyFailure>>\nDRIVER: <move>\nCOMMANDER: You may have to close the other cabinet first. <<Instruction>>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Mug>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: awesome. <<FeedbackPositive>>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: Okay.  What shall I help with next? <<RequestForInstruction>>\nCOMMANDER: Good. Now, you will need to make a sandwhich. <<Instruction>>\nCOMMANDER: FIrst you will need to slice the bread. <<Instruction>>\nDRIVER: Certainly.  Where might I find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It looks like the bread is in the fridge, <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: Directions to a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you. <<InformationOther>>\nCOMMANDER: I think it is on the table by the window. <<InformationOnObjectDetails>>\nDRIVER: ok.  Checking <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: Bread is sliced. <<Acknowledge>>\nDRIVER: Next step? <<RequestForInstruction>>\nCOMMANDER: Now, you will need to toast the bread, please. <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: <toggle on Toaster>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: Bread is toasted. <<Acknowledge>>\nDRIVER: How may assist now? <<RequestForInstruction>>\nCOMMANDER: Thank you. Now, you need to slice the lettuce. <<FeedbackPositive,Instruction>>\nDRIVER: Okay.  Where might the lettuce be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can find the lettuce on the table next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: Lettuce is sliced. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, you need to slice the tomato, please. <<Instruction>>\nDRIVER: <slice Tomato>\nDRIVER: Tomato is sliced as well.  What would you like next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Okay, thank you. <<FeedbackPositive>>\nCOMMANDER: Now, all sandwich items need to be on a plate, please. <<Instruction>>\nDRIVER: Sure.  Where might a plate be? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <putdown DiningTable>\nCOMMANDER: The plate is right there on that table. <<InformationOnObjectDetails>>\nDRIVER: Oh.  I see.  Thank you. <<Acknowledge>>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: You will have to take the salt shaker off the plate fist. <<Instruction>>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Lettuce>\nCOMMANDER: ss *first. lol. <<Instruction>>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: The tomato appears to be rejecting the plate. =) <<NotifyFailure>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER: Okay. <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: Try putting the toast first. Then the lettuce and tomato. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER: The tomato slice may be too big. <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nDRIVER: <pickup ButterKnife>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: The items are sorta on the plate. <<Acknowledge>>\nCOMMANDER: Okay. Thank you. <<FeedbackPositive>>\nCOMMANDER: Now, the plate needs to be put on a countertop, please <<Instruction>>\nDRIVER: OK <<Acknowledge>>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: The plate is on the counter <<Acknowledge>>\nCOMMANDER: Thank you. All done in here. Good job. <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    }
]