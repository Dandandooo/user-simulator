[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: could you please prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: ingredients please <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need breakfast prepared. Coffee in a clean mug and a salad <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Cook potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Use the microwave <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\n\nCOMMANDER response:",
        "answer": "RequestForInstruction",
        "response": "RequestForInstruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: I would like some coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: sure, where is the coffee mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what work can i help with today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Sofa.\nCOMMANDER: please can you put the pillow in the sofa <<Instruction>>\nDRIVER: where is the pillow? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please could you water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello how are youtoday <<Greetings/Salutations>>\nCOMMANDER: Shall we begin <<Greetings/Salutations>>\nDRIVER: fine let go <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: You need to prepare coffee in a clean mug <<Instruction>>\nCOMMANDER: Fill the mug with coffee. <<Instruction>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Boil a potato <<Instruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: look in the cabinet above the toaster <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's for today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: rinse the dirty mug with water <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "RequestForInstruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hi. Please fill a mug with coffee.  There is one in the sink. <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any ArmChair.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: I need you to put all my alarm clocks on the bed <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi what do i do today/ <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's slice the tomato to the left of the stove. <<Greetings/Salutations,Instruction>>\nCOMMANDER: The knife is in the sink. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nDRIVER: <move>\nDRIVER: done <<Acknowledge>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: i'd like coffee in a clean mug <<Instruction>>\nDRIVER: sure where is your mug? <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: What should we do today <<RequestForInstruction>>\nCOMMANDER: place the newspapers onto a single table <<Instruction>>\nCOMMANDER: there is one on the couch <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nDRIVER: Sorry, its taking long to load commands guess its a glitch <<NotifyFailure,OtherInterfaceComment>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets clean all the cloths <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Clean the mug and prepare coffee <<Instruction>>\nCOMMANDER: mug is inside the fridge. <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you please place all the tissue boxes on one side table <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: We need to fill coffee in mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: mug is on the chair near center table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: hi, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please serve one slice of lettuce on a plate <<Instruction>>\nDRIVER: <pickup Plate>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: we need to find the tomato <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER: there it is <<InformationOnObjectDetails>>\nCOMMANDER: we need a knife <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello! What is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: today we need to make a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first lets slice some bread <<Instruction>>\nDRIVER: Ok. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: the bread is in the green bin <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Ladle in any Sink.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Put 2 ladles in the sink. One is in the cabinet above microwave. <<Instruction,InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one CoffeeTable.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: put 5 smallhandheld objects on one coffee table <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: Hi, what are my directions? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: Put the tissueBox into a single side table <<Instruction>>\nDRIVER: where is the tissue box? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup TissueBox>\nCOMMANDER: i dont know <<InformationOther>>\nDRIVER: where is the side table? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one CoffeeTable.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: Let <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Tables.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: The remote controls need to be put onto a table. <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the remote? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: cook 2 slice potato <<Instruction>>\nCOMMANDER: potato is infront of toaster <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: clean all mugs <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: slice potao <<Instruction>>\nCOMMANDER: potato on the chair <<InformationOnObjectDetails>>\nDRIVER: <pickup Potato>\nCOMMANDER: knife in the drawer under the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: we need 3 slices cooked <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi! <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: today we'll be making a salad. <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Please place the newspapers on the same arm chair <<Instruction>>\nDRIVER: <move>\nCOMMANDER: otherwise known as recliner <<Instruction>>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER: makea plate of toast please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: The game is affoot! <<MiscOther>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: Commander? <<RequestForInstruction>>\nDRIVER: What is my task <<RequestForInstruction>>\nCOMMANDER: Please slice the tomato on the table. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The knife is on the table as well. <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Plate in any Cabinet.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Today could you place all of the cloths in the bath tub <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You should be able to find a cloth inbetween the two sinks <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: Hello! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: Thank you. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: its on the white table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Egg in one Cabinet.\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER: can you put teh egg in a cabinet please <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: Today could you place all the remote controls onto any of the chairs <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is one on the tv stand <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: and another on the coffee table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: clean all cloths <<Instruction>>\nDRIVER: what is the task today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: one by the toilet <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: where are the clothes please <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nMiscOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER: The plant needs to be watered <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The plant is on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: robot wants to serve you <<RequestForInstruction>>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: you need to make a salad <<Instruction>>\nCOMMANDER: first make a slice of tomato using a knife. <<Instruction>>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: just need you to clean a dirty mug <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hello please boil a potato <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: \u2610 Make a slice of toast.\n\n  \u204d [The bread needs to be sliced using a knife.]\n  \u204d [The bread needs to be toasted.]\n\u2611\ufe0f Clean a Plate. <<Instruction>>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Sorry its not showing me the knife <<OtherInterfaceComment>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: wash the dirty pan next to the stove <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Pan>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what are we doing today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Clean all the clothes <<Instruction>>\nDRIVER: <move>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: im not sure <<InformationOther>>\nCOMMANDER: i think this is a glitch <<OtherInterfaceComment>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what are we doing today <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nCOMMANDER: We need to clean a plate that is dirty. <<Instruction>>\nDRIVER: <move>\nDRIVER: ok where is that dirty plate <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a 1 slice tomato <<Instruction>>\nCOMMANDER: put it on clean plate <<Instruction>>\nCOMMANDER: tomato is on the chair <<InformationOnObjectDetails>>\nCOMMANDER: knife <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: We need to clean the pot <<Instruction>>\nDRIVER: <move>\nCOMMANDER: pot is at the your left edge cross section <<InformationOnObjectDetails>>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hey can you make a coffee for me please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: thank you <<FeedbackPositive>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one SideTable.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: get dish from microwave <<InformationOnObjectDetails>>\nDRIVER: hi how are you today <<Greetings/Salutations>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Boil Potato.\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like you to boil a potato please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello. Our first task is to prepare coffee <<Greetings/Salutations,Instruction>>\nDRIVER: whats first <<RequestForInstruction>>\nDRIVER: cool where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi, how may I help you today? <<RequestForInstruction>>\nCOMMANDER: can you rinse out the cloth next left of the bath please <<Instruction>>\nDRIVER: I'll get straight to it! <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nDRIVER: <move>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need you to water the plant for me <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: sure <<Acknowledge>>\nDRIVER: where can i find a container to water it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: clean all dishware <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: how many? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: i'd like coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what next <<RequestForInstruction>>\nCOMMANDER: hi there <<Greetings/Salutations>>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: where is the toast and plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: Please clean the mug in the right cabinet above the stove <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Silverware in any Sink.\nCOMMANDER: Today could you put all the silverware in a sink <<Instruction>>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: There is some silverware on the chair <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: what can I do today <<RequestForInstruction>>\nCOMMANDER: put all watch in one box <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nDRIVER: <putdown Box>\nDRIVER: <move>\nDRIVER: where are the others <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOtherInterfaceComment\n\nExample :\nGoal: Make a salad.\nDRIVER: hji <<Greetings/Salutations>>\nCOMMANDER: hi we have to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: task plz <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: knife is by sink to right <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: Hi what are my directions <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: Hi. Please prepare coffee for me in a clean mug. <<Greetings/Salutations,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork in any Cabinet.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER: put fork ine  into a cabinet <<Instruction>>\nDRIVER: What's that? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: fork is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: how ocan i help you? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: your task is to water the plant <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: ill do that for you right now <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hello. what can i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: We need to clean the dirty plates <<Instruction>>\nDRIVER: ok. <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Hello How are you <<Greetings/Salutations>>\nDRIVER: Hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Shall we begin <<Confirm>>\nDRIVER: yeah <<Acknowledge>>\nCOMMANDER: put a cloth in any bathtub <<Instruction>>\nCOMMANDER: 2 of each <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fruit on any DiningTable.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: Hello, could you place all the fruit onto the dining table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER: There is some fruit on the chair by the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: another on the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you cook 5 slices of potato <<Instruction>>\nCOMMANDER: the potato is on the shefl <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day!  We are preparing breakfast.  We first need to wash a dirty mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER: The mug is located under the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: how can i help you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce in a Bowl.\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi. Please water the plant. <<Greetings/Salutations,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: I will do that right now for you <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Mug in one Cabinet.\nDRIVER: <move>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Put  a mug into a cabinet <<Instruction>>\nDRIVER: Great. Where do I find the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <close Microwave>\nCOMMANDER: There is one on the cabinet above the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi..what is my task today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: \u00b4hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all SaltShaker in one Cabinet.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: Hello. All of the salt shakers need to be places into one cabinet <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup SaltShaker>\nDRIVER: <move>\nCOMMANDER: the first one is next to the stove <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: k <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: Hello! What should I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: we'll need to get two remotes and put on the armchair <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: find the mug on the table behind the wok <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to make a salad with one slice of lettuce <<Instruction>>\nCOMMANDER: 2 slices of tomato <<Instruction>>\nCOMMANDER: and one slice cooked potato <<Instruction>>\nDRIVER: of course <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get some water in a container from the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: where is  mug <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi we are making a salad <<Greetings/Salutations,Instruction>>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: pls slice the tomato by the toaster <<Instruction>>\nCOMMANDER: knife is near the sink <<InformationOnObjectDetails>>\nDRIVER: <pickup Spoon>\nDRIVER: <putdown Stool>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What is the task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: we need to boil a potato please <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: find a newspaper <<Instruction>>\nDRIVER: <move>\nCOMMANDER: on the sofa <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bottle in one Cabinet.\nCOMMANDER: Put all Bottle in one Cabinet. <<Instruction>>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do I need to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: clean a bowl <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task today? <<RequestForInstruction>>\nCOMMANDER: hey make a sandwich please <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: whats the first step? <<RequestForInstruction>>\nCOMMANDER: get bread from next to the sink and slice it <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: please slice the potato in the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: place 2 remotes onto single chair sofa <<Instruction>>\nDRIVER: remote place <<Instruction>>\nDRIVER: <move>\nCOMMANDER: one is on the white shelfnext to tv <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: on the brown table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: put the newspaper on the sofa <<Instruction>>\nCOMMANDER: there is 3 <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: What do I do? <<RequestForInstruction>>\nCOMMANDER: put all watch in one box <<Instruction>>\nDRIVER: <move>\nDRIVER: Where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. Are you ready to begin? <<Greetings/Salutations,Confirm>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: We will need to clean a cloth <<Instruction>>\nCOMMANDER: It is located in the corner across from the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all CreditCard on any Bed.\nDRIVER: Hello. hat can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: what* <<RequestForInstruction>>\nCOMMANDER: Hi! Please put 3 credit cards on the bed. <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what you want from me? <<RequestForInstruction>>\nCOMMANDER: make me a sandwich. <<Instruction>>\nDRIVER: yes sir <<Acknowledge>>\nDRIVER: what kind of sandwich would you like? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: slice tomatoes <<Instruction>>\nCOMMANDER: tomato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: knife next to the toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Tomato>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make some toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Lettuce in any Fridge.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi please cook a potato in the microwave <<Greetings/Salutations,Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nDRIVER: wher eis the potto <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: potato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Wjat shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Egg in one Cabinet.\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER: can you put teh egg in a cabinet please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: We need to make a salad. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: fist we have to slice the lettuce <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: clean all mugs <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what should I do ? <<RequestForInstruction>>\nCOMMANDER: Clean all the plates. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: There is one in the cabinet under the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Place two remote controls on one dresser. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown Dresser>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown Dresser>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: lets find the newspaper and put on one piece of furniture <<Instruction>>\nDRIVER: where is the mewspaper <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: there is one on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello, what shall I   be doing today? <<RequestForInstruction>>\nCOMMANDER: Please cook 2 slices of potato and serve on a plate. <<Instruction>>\nDRIVER: Ok. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: The potato is behind the sink. <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: There is a knife in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick pot in the fridge <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello please boil potato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Fork on any DiningTable.\nDRIVER: Hi, what is my direction? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i need you to put my 2 forks onto the dining table <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: Can you help me find mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is in black bin i <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: Hi what are my directions <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: You have to put all lettuce on any dinning table <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi what can i get you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hello I need a salad made with two slices of tomato and a slice of cooked potato <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: bread is on top of the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: grab a knife <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Bed.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do for you today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello! <<Greetings/Salutations>>\nCOMMANDER: please clean the mug on the stove and make coffee <<Instruction>>\nDRIVER: Thank you. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Clean all the drinkware <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup PepperShaker>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: whats my tasktoday <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's for today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: rinse the dirty mug with water <<Instruction>>\nDRIVER: <move>\nCOMMANDER: and make fresh coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Apple>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: lettuce is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: hi, today we will be making a sandwich. please slice bread and make 2 pieces of toast. <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi lets make coffee <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Can you boil a otato for me <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: what shall i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: prepare coffee <<Instruction>>\nCOMMANDER: mug is in the oven <<InformationOnObjectDetails>>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make salad today <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the first step? <<RequestForInstruction>>\nCOMMANDER: slice atomato using knife <<Instruction>>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: First, slice the lettuce <<Instruction>>\nDRIVER: where is the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Lettuce is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hi. Water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: what is my task tody <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: there is a knife in the sink <<InformationOnObjectDetails>>\nDRIVER: where can i find bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the bread is right by the sink as well <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce in a Bowl.\nDRIVER: <move>\nCOMMANDER: can you please slice a lettuce and place 3 pieces of it into a clean bowl <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Plate in one Cabinet.\nDRIVER: Hi how can I Help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you put away 2 plates intoa  cupboard for me please <<Instruction>>\nDRIVER: Sure thing <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: rinse a mug <<Instruction>>\nDRIVER: <move>\nDRIVER: mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the mug next to the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: thats a cup not a mug <<InformationOther>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: how can i help? <<RequestForInstruction>>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: we need to mmake a sandwich please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is bread <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: below the coffee maker <<InformationOnObjectDetails>>\nDRIVER: please give in detail <<RequestForInstruction>>\nDRIVER: how many slices? <<RequestOtherInfo>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to first slice a tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: tomato is by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nCOMMANDER: next slice the potato <<Instruction>>\nDRIVER: <slice Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd liek a cup of coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: sure where is the mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: potato to boil <<Instruction>>\nDRIVER: <move>\nCOMMANDER: 3 potatos <<Instruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello...What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hello what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: get the plate in the fridge and clean it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today you will make  a salad <<Instruction>>\nCOMMANDER: First make a slice of lettuce <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello! What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: task is to prepare breakfast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: boil potato in water <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: can you cook two potato slices and serve them in a bowl for me <<Instruction>>\nDRIVER: sure, where can i find the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nDRIVER: hi what shall i do today <<RequestForInstruction>>\nCOMMANDER: Hi how are you? <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any Furniture.\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi, how may I help you today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nDRIVER: what do I do first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: water my plant <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Apple in one Cabinet.\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: you need to put all apples in one cabinet <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find apples? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: one is on the dinning table <<InformationOnObjectDetails>>\nCOMMANDER: both are on same table <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER: Hi, slice bread <<Greetings/Salutations,Instruction>>\nCOMMANDER: bread on counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hello! <<Greetings/Salutations>>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: The task is to boil the potato by cooking it in water. <<Instruction>>\nDRIVER: Okay. Where is the potato please <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can i help? <<RequestForInstruction>>\nCOMMANDER: I need you to make coffee for me <<Instruction>>\nDRIVER: sure thing <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi what do you need today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: today we need to clean the room <<Instruction>>\nDRIVER: where should I start? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: we need all the newpapers put <<Instruction>>\nCOMMANDER: onto 1 table <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should i do? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER: mugs in the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Lettuce on a Plate.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: Hello...What is my first task ) <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Today could you place all of the cloths in the bath tub <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You should be able to find a cloth inbetween the two sinks <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task??? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need you to water the plant for me <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall I do today/? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello. We need to boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: task? <<RequestForInstruction>>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: Potato is in the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Tables.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what are our goals for today <<RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nCOMMANDER: please place remote controls on any table <<Instruction>>\nDRIVER: can you tell me where they are? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: boil the potato in water <<Instruction>>\nDRIVER: Thank you <<FeedbackPositive>>\nDRIVER: Does the potato need to be sliced? <<Confirm>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: nope <<Deny>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Bed.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: Would you like your task? <<Confirm>>\nDRIVER: yeees <<Affirm>>\nCOMMANDER: Please put the book on to the bed. <<Instruction>>\nDRIVER: where is the book <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Book is on the table. <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nDRIVER: what can i do? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nCOMMANDER: place the newspaper onto single arm sofa <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: just need you to water my plant <<Instruction>>\nDRIVER: <move>\nDRIVER: sure,  i see the plant <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any Sofa.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. We are finding pillows and putting them on a sofa. <<Greetings/Salutations,Instruction>>\nCOMMANDER: there is one on a table in the corner <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <slice Apple>\nCOMMANDER: Today you will make a plate of one slice of toast. <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need you to clean all the plates please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where can i find the plates <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup Plate>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all Fork in any Sink.\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please put 2 fork into the sink for me <<Instruction>>\nDRIVER: <move>\nCOMMANDER: i left one of them in the bin next to the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Fork>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <move>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in the dustbin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: pillows need to be put onto a armchair <<Instruction>>\nDRIVER: what should i do today <<RequestForInstruction>>\nDRIVER: where is the pillow <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can i help you today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, you need to rinse the mug with water <<Instruction>>\nDRIVER: Hello, please direct me <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Find the mug and rinse it with water <<Instruction>>\nCOMMANDER: I'm looking for it too <<MiscOther>>\nDRIVER: could it be in a cabinet? <<Confirm>>\nCOMMANDER: Ooh maybe <<Affirm>>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hi. Please make a plate of toast. <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day!  We are preparing breakfast.  We first need to wash a dirty mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER: The mug is located under the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Furniture.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: We are going to make a sandwich. <<Instruction>>\nCOMMANDER: First toast 2 slices of bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello whats my task <<RequestForInstruction>>\nCOMMANDER: Prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Mug is dirty <<InformationOther>>\nDRIVER: <move>\nCOMMANDER: Mug is in the fridge <<InformationOnObjectDetails>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: lets make salad <<Instruction>>\nCOMMANDER: grab  a knife and slice tomato <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We need to rinse the drinkware with water. <<Instruction>>\nDRIVER: cup, mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER: clean the pot using water <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hi what can i do? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like breakfast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first i need coffee <<Instruction>>\nDRIVER: okay where is a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I help with? <<RequestForInstruction>>\nCOMMANDER: Hi! You need to water the plant, please. <<Greetings/Salutations,Instruction>>\nCOMMANDER: Please bring some water in a container from the sink and pour it into the plant. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You could use that green cup on the counter. <<InformationOther>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a salad.\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: Hi what would you like me to do today <<RequestForInstruction>>\nCOMMANDER: TODAY WE NEED TO MAKE A SALAD <<Instruction>>\nDRIVER: Okay I will make a salad <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER: grab a knife and slice the lettuce <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: clean the mug <<Instruction>>\nDRIVER: hello what can I do? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: where is the dirty mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nDRIVER: hello how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what do i do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Please slice lettuce <<Instruction>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nCOMMANDER: lets make 2 coffees first <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: how ocan i help you? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: your task is to water the plant <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: ill do that for you right now <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello, can you make a cup of coffee? <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hi! What can I   do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi, how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need coffee served in a clean mug please <<Instruction>>\nDRIVER: sure, where can i find a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today you will make  a salad <<Instruction>>\nCOMMANDER: First make a slice of lettuce <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nCOMMANDER: Use a bowl or cup to get water from the sink <<Instruction>>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 1 slice bread toast <<Instruction>>\nDRIVER: How may I help you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: bread is in the cabinet above coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: knife is on the centre island <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SoapBar on any CounterTop.\nDRIVER: how can i help you <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi What can i do for you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: make toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: knife in fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: no <<Deny>>\nDRIVER: <pickup Bread>\nDRIVER: nO? <<MiscOther>>\nDRIVER: <putdown Chair>\nCOMMANDER: on counter next to mug <<InformationOnObjectDetails>>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i for you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: could you boil a potato? <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: Please put coffee in mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: Hi! What may I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread and knife are in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: make 2 toasts <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of lettuce on a plate please <<Instruction>>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: checking cabinet <<InformationOnObjectDetails>>\nCOMMANDER: under coffee machine <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nDRIVER: How can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please out all the mugs in the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER: one is in the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: lets find the tomato <<Instruction>>\nDRIVER: its on your search <<OtherInterfaceComment>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nCOMMANDER: Use a bowl or cup to get water from the sink <<Instruction>>\nDRIVER: <pickup Pot>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hello. We need to slice some bread to make toast <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hello how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: can you serve 3 slices of lettuce on a plate? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: where is the plate to serve these on? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the down cupboard to the right bellow sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Could you help me make a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER: I would like you first to slice and then toast some bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The bread and knife should be next to the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: do you see a clean mug anywhere? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: there is on on the kitcehn table <<InformationOnObjectDetails>>\nCOMMANDER: not sure if its clean or not <<InformationOther>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: we need to collect watches <<Instruction>>\nDRIVER: <move>\nCOMMANDER: and place them on the sofa please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is one on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: lets make a sandwich <<Instruction>>\nDRIVER: where is bread plz <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: today we need to make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER: grab a knife and slice lettuce first <<Instruction>>\nDRIVER: Where is the knife <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i help with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you water a plant? <<Instruction>>\nDRIVER: sure thing <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Toast a slice <<Instruction>>\nDRIVER: of what <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: hello!  Could you please cook 2 pieces of potato for me? <<Instruction>>\nDRIVER: sure thing <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pencil in any Safe.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: put pencils in safe <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: put all remote controls on one dresser <<Instruction>>\nDRIVER: can you help me find them <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: there is one in the middle drawer of the desk <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: on your tight <<InformationOnObjectDetails>>\nCOMMANDER: right <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: whats the first task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: Hi! What can I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: today we clean all the dishware <<Instruction>>\nDRIVER: No problem. Where are they located? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in left bottom cabinet under the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: pick up the coffee mug <<Instruction>>\nDRIVER: First task? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: <move>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nDRIVER: ? <<Confirm>>\nDRIVER: <move>\nCOMMANDER: we need to make a salad <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: just need my plant watered please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: i see a container with water on the stove <<Acknowledge>>\nDRIVER: <pickup Pot>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a sandwich.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi there what can i do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: <move>\nCOMMANDER: check the shelves for knife <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do ya need? <<RequestForInstruction>>\nCOMMANDER: I would like some toast! <<Instruction>>\nCOMMANDER: slice a loaf of bread. Toast the slice. Clean a plate. Put toast on plate. <<Instruction>>\nDRIVER: sure thang <<Acknowledge>>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nCOMMANDER: slice it using a knife <<Instruction>>\nDRIVER: where can i find the knife.? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: where can i find the tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: and place it on a clean plate <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: today we need to clean the room <<Instruction>>\nDRIVER: where should I start? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: we need all the newpapers put <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you make me a sandwich please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: 2slices of toast and 2 slices of tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: Hello, you need to make a salad please. <<Instruction>>\nCOMMANDER: There is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: The lettuce is in the upper cabinet above the fridge on the right <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: with what <<AlternateQuestions>>\nDRIVER: do i make asalad <<AlternateQuestions>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: cook 1 slice of potato and serve on a plate <<Instruction>>\nDRIVER: where can i find potato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: and knife too <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: potato is in the side shelf <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Chairs.\nDRIVER: What am i doing today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: what shall i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any Furniture.\nDRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: all watches <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: i'd like coffee in a clean mug <<Instruction>>\nDRIVER: sure where is your mug? <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: boil the potato in water <<Instruction>>\nDRIVER: Thank you <<FeedbackPositive>>\nDRIVER: Does the potato need to be sliced? <<Confirm>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: nope <<Deny>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please rinse the mug beside thje sink <<Instruction,InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: Hi! What may I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to make coffee <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: We need a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the mug please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all CreditCard on any Bed.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a 1 slice tomato <<Instruction>>\nCOMMANDER: put it on clean plate <<Instruction>>\nCOMMANDER: tomato is on the chair <<InformationOnObjectDetails>>\nCOMMANDER: knife <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we need to make sandwich <<Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: what do i need to do? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Can you please clean the plates for me <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: cook a slice of potato <<Instruction>>\nDRIVER: where is potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <open Fridge>\nCOMMANDER: then rinse the dirty plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER: potato is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: what do i need to do? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup CreditCard>\nDRIVER: <putdown GarbageCan>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: make coffee <<Instruction>>\nCOMMANDER: Mug is beside the cooker <<InformationOnObjectDetails>>\nCOMMANDER: Just by the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: wash drinkware from the microwave <<Instruction,InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: put pepper shakers in the cabinet <<Instruction>>\nCOMMANDER: first shaker in the microwave <<InformationOnObjectDetails>>\nCOMMANDER: are you there? <<Confirm>>\nDRIVER: yes <<Affirm>>\nCOMMANDER: follow my diections <<MiscOther>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: Please place the newspapers in the same box. Begin with the one on the chair sightly under the box. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: rinse the mug <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: first grab a knife <<Instruction>>\nDRIVER: Alright <<Acknowledge>>\nCOMMANDER: trun left and go straight, its on the small stool <<Instruction>>\nDRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: I have the knife? <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task please? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Today you will make one slice of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean the plate in the fridge <<Instruction>>\nCOMMANDER: rinse with water <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nCOMMANDER: rinse with water <<Instruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: where is knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi! Let's go ahead and clean all the dishes. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: The first dirty bowl is on the table by the fridge, behind the lettuce. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice the lettuce and tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: lettuce  is near the sink <<InformationOnObjectDetails>>\nDRIVER: Do you know where the knife is? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Potato in any Cabinet.\nDRIVER: Hi how can i help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please put all the potatoes in a cabinet <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: I left one near the stove to the right <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: how can i help you? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like all small hand held object placed on one table <<Instruction>>\nDRIVER: ok which objects specifically? <<RequestOtherInfo>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: rinse the pan <<Instruction>>\nCOMMANDER: it is on the stove <<InformationOnObjectDetails>>\nDRIVER: the pot? <<Confirm>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, clean the mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: <move>\nDRIVER: Please direct me commander <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: I need directions <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need coffee prepared in a clean mug please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: where can i find a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: We need to make a salad today. <<Instruction>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will need a knife to slice items <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice 2 slices of bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER: go inside the fridge <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any Furniture.\nDRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: all watches <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Hello How are you <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: Hi how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please slice a lettuce <<Instruction>>\nDRIVER: Sure where can I find a knife and the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a lettuce in the middle island <<InformationOnObjectDetails>>\nCOMMANDER: You should be able to find a knife in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: i'd like a slice of toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce in a Bowl.\nDRIVER: <move>\nCOMMANDER: can you please slice a lettuce and place 3 pieces of it into a clean bowl <<Instruction>>\nCOMMANDER: there is a lettuce and a knife on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nCOMMANDER: and a bowl in a lower corner cupboard <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 2 remotes <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: hiii <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: prepare a coffe in clean mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what shall i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Sofa.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i help with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you please clean a plate and make a salad <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER: the plate should be under the coffee machine to right of stove in cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: I need you to clean all the plates. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: Hi what should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what should i do for today <<RequestForInstruction>>\nCOMMANDER: serve a slice of tomato in a bowl <<Instruction>>\nDRIVER: <move>\nCOMMANDER: tomato is on the chair under the counter <<InformationOnObjectDetails>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown CounterTop>\nCOMMANDER: slice <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Today could you place all of the cloths in the bath tub <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You should be able to find a cloth inbetween the two sinks <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nDRIVER: Hello. What is my first task?> <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put all the credit cards on any furniture <<Instruction>>\nDRIVER: Thanks! <<Acknowledge>>\nDRIVER: How many cards are there? <<RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Water the plant.\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi. Please water the plant. <<Greetings/Salutations,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: I will do that right now for you <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: we're gonna make some breakfast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello, task plz <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: <move>\nDRIVER: Hello, where should I start? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please water the plant. <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Tables.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in one Box.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any Chairs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what shold i do today <<RequestForInstruction>>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: Hi, Put the pillows on any chair <<Instruction>>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what shall i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please fill the container in the sink with water <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice the lettuce <<Instruction>>\nCOMMANDER: knife is in the sink and lettuce is near the stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Please slice lettuce <<Instruction>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: we are boiling a potato <<Instruction>>\nDRIVER: What should I do tody? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please make a salad <<Instruction>>\nCOMMANDER: i would like lettuce tomato and 2 slices of potato with it <<Instruction>>\nDRIVER: where do I find the thing I need? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the lettuce should be in the black bin <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I supposed to do? <<RequestForInstruction>>\nCOMMANDER: Today, you are serving 1 slice of tomato in a clean bowl. <<Instruction>>\nDRIVER: Okay, where is the tomato? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: You can find the tomato in the cabinet above the coffee maker. <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: serve 2 slices of tomato on a clean plate pelase <<Instruction>>\nDRIVER: <move>\nDRIVER: where's the knife <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: can you make 2 slices of lettuce? <<Instruction>>\nCOMMANDER: the lettuce is on the chair <<InformationOnObjectDetails>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nCOMMANDER: a knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: Hi! What may I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice the tomato <<Instruction>>\nDRIVER: will do! <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Apple on any DiningTable.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the apples on the dining table <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's the task <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: we need a potato please <<Instruction>>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: Hi, what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: cook 1 slice of potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: make 2 cups coffee plz <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: We need to make a sandwich <<Instruction>>\nCOMMANDER: We need to find the bread <<Instruction>>\nDRIVER: What should I do <<RequestForInstruction>>\nDRIVER: Where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can I have some coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: do you see a mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on one Chairs.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: watch needs to be on chair <<Instruction>>\nDRIVER: Where can I find the watch? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: the plant needs to be watered <<Instruction>>\nDRIVER: what should i do for today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: use any cup  to water the plant <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's to do? <<RequestForInstruction>>\nCOMMANDER: The RemoteControl needs to be put onto a single Tables <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER: makea plate of toast please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Desk.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello. Please grab the book on the armchair and place it on the desk. <<Greetings/Salutations,Instruction>>\nCOMMANDER: The arm chair is behind you to the right <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Book>\nCOMMANDER: Place it on the desk to your left <<Instruction>>\nDRIVER: <putdown Desk>\nCOMMANDER: Great...All tasks complete <<Acknowledge>>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi What can i do for you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: we will be watering the plant <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Plate on any DiningTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread is left side of stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER: We need one slice of toast. <<Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we need to make sandwich <<Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: bread is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: grab a knife and slice the bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Furniture.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make toast <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: We will prepare breakfast. Please make 2 cups of coffee in clean mugs. <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find mugs <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: There is a mug on the stove and table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hii <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi lets clean a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: mug is below coffee maker <<InformationOnObjectDetails>>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER: clean it please <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Spatula in one Cabinet.\nDRIVER: how can i help you? <<RequestForInstruction>>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nCOMMANDER: put all3  spatula in one cabinet <<Instruction>>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <pickup Spatula>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: What do I do? <<RequestForInstruction>>\nCOMMANDER: put all watch in one box <<Instruction>>\nDRIVER: <move>\nDRIVER: Where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi. Please make a salad. You can start by cutting the tomato <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice the lettuce on the table <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: theres a potato in the microwave <<InformationOnObjectDetails>>\nCOMMANDER: cook it <<Instruction>>\nCOMMANDER: in the microwave <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <close Microwave>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: Hi today can you please get and place all the tissue boxes om the coffee table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a tissue box in front of the tv <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, clean the mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: How may i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Good day.  Please clean the plate on the counter. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what are we doing today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: bread is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please make coffee <<Instruction>>\nDRIVER: sure, where do I find cups, please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: there's a mug to the left of the fridge, on the counter <<InformationOnObjectDetails>>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What do you need today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I supposed to do? <<RequestForInstruction>>\nCOMMANDER: Today, you are serving 1 slice of tomato in a clean bowl. <<Instruction>>\nDRIVER: Okay, where is the tomato? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: You can find the tomato in the cabinet above the coffee maker. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: I need you to clean all the plates. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hey <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: What should I do today> <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: Please cook 2 slice potato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi there! Could you cook five slices of potato for me and put them on a clean plate? <<Greetings/Salutations,Instruction>>\nDRIVER: sure! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: hi, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: please put one slice tomato on a plate <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the tamoto <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: on brown kitchen shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hi. Please fill a mug with coffee.  There is one in the sink. <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: <move>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: task plz <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you make me breakfast please, can you start by making me a coffee? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hello, prepare coffee in a clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: We need to make 2 slices of tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: Do you know where the knife is? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: <move>\nDRIVER: Hello what is my task today> <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What should  I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, its a long one <<Greetings/Salutations>>\nCOMMANDER: Start with a cup of cofffee <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cookwares.\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Rinse the cookware <<Instruction>>\nDRIVER: hello whats first? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER: grab a bowl <<Instruction>>\nDRIVER: <pickup Bottle>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread in any Cabinet.\nCOMMANDER: hi all the bread needs to be placed in a cabinet <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should i do? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: cook two slices of potato and serve on a plate please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: slice bread <<Instruction>>\nCOMMANDER: knife on the wall rack <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: step one is to prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the mug is on the A-frame shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello! What is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please place 2 cooked potato on clean plate <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Hi! <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: can i please have 1 slice of toast and one slice of tomato? <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: How can I help <<RequestForInstruction>>\nCOMMANDER response:\nMiscOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nDRIVER: hello, what should I do today? <<RequestForInstruction>>\nCOMMANDER: place 2 newspapers onto single chair <<Instruction>>\nDRIVER: where are the newspapers? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: behind tv <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: another one on dining table <<InformationOnObjectDetails>>\nDRIVER: <pickup Newspaper>\nDRIVER: Does it matter which chair? <<RequestOtherInfo>>\nDRIVER: table or living room? <<RequestOtherInfo>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: Hello. We ned to clean the mug sitting at the sink <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nCOMMANDER: tomato is on the stool beside the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hello what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: get the plate in the fridge and clean it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please place two mugs in the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cup on any DiningTable.\nDRIVER: hello. how may i hlep? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SaltShaker in one Cabinet.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: Hello. All of the salt shakers need to be places into one cabinet <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup SaltShaker>\nDRIVER: <move>\nCOMMANDER: the first one is next to the stove <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice bread and toast 1 slice <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What can I do first? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: tomato on the wall rack <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: knife in the cabinet on the left above the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what next <<RequestForInstruction>>\nCOMMANDER: hi there <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Please slice the bread located at the sink. <<Instruction>>\nCOMMANDER: there is a knife beside the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: ? <<MiscOther>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on any Chairs.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: task? <<RequestForInstruction>>\nDRIVER: ? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: We are going to make a sandwich. <<Instruction>>\nCOMMANDER: First toast 2 slices of bread <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER: the bread is next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cook a slice of potato? <<Instruction>>\nCOMMANDER: the knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: the potato is on th counter or on the stools <<InformationOnObjectDetails>>\nDRIVER: thank you <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello there! <<Greetings/Salutations>>\nDRIVER: what shall i do ? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on any Chairs.\nCOMMANDER: find a newspaper <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put the newspaper on the sofa. <<Instruction>>\nCOMMANDER: The newspaper is in the drawer on the coffee table. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: Below the laptop <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: O <<MiscOther>>\nDRIVER: <pickup Box>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hello, first we will need to slice the bread and make 2 pieces of toast <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on any Sofa.\nDRIVER: First Task? <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will make a salad. Please begin with 2 slices of lettuce. <<Instruction>>\nDRIVER: Where is the lettuce? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: what shall i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cook a slice of potato? <<Instruction>>\nCOMMANDER: the knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: the potato is on th counter or on the stools <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nDRIVER: hi how can i help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put all the lettuce on a dining table <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi what to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will prepare coffee in a mug. <<Instruction>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hi. Please make a plate of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: Hello. We ned to clean the mug sitting at the sink <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: left <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi What can i do for you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: where is knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what work can i help with today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nDRIVER: <slice Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: put all remote in one box <<Instruction>>\nCOMMANDER: 2 total <<InformationOnObjectDetails>>\nCOMMANDER: one on the table behind the laptop <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown Box>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any Chairs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what shold i do today <<RequestForInstruction>>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: Hi, Put the pillows on any chair <<Instruction>>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Furniture.\nDRIVER: hello how may i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: put the cook on furniture <<Instruction>>\nCOMMANDER: book <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Book>\nDRIVER: <move>\nDRIVER: <putdown Desk>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: Can you please make a lettuce sandwich with toasted bread. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup SaltShaker>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: slice a tomato thrice <<Instruction>>\nDRIVER: Can you help me find tomato and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: hello how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi, I have a neat task for you today. I'd like all my plates cleaned please <<Greetings/Salutations,Instruction>>\nCOMMANDER: the first plate can be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: great ill get started <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: Thank you! <<FeedbackPositive>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: make a slice of tomato using a knife <<Instruction>>\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: then clean plate <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Serve a slice of tomato in a bowl please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The tomato is in the cupboard on top of the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: grab the tissuebox and put it on the side table <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup TissueBox>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What is my task today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: is there a cup? <<Confirm>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hello, can you water the plant please? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please serve one slice of tomato in abowl. <<Greetings/Salutations,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where is the bowl <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Potato in any Cabinet.\nCOMMANDER: Hi, can you put potato into cabinet? <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <move>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello, task please <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: what can I help with? <<RequestForInstruction>>\nCOMMANDER: Hi! You need to water the plant, please. <<Greetings/Salutations,Instruction>>\nCOMMANDER: Please bring some water in a container from the sink and pour it into the plant. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You could use that green cup on the counter. <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hi please microwave a potato <<Greetings/Salutations,Instruction>>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: need to get knife by lettuce <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: by green door next to lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to make a sandwich today <<Instruction>>\nDRIVER: What should I do first <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi, please boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pot>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do? <<RequestForInstruction>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: We need to make coffee <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Drinkware on any DiningTable.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can I assist you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please make a plate of toast <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi! <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi,find bread and slice it <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Bread>\nDRIVER: what next? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: I need help <<Instruction>>\nDRIVER: Hi, how can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I want you to make me coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: Where could I find a cup? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: There should be one in the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: what should i do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hello. How are we beginning? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nCOMMANDER: We are going to boil a potato <<Instruction>>\nDRIVER: Where is the potato located? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: The potato is infront of you ontop of the counter <<InformationOnObjectDetails>>\nDRIVER: I have it. <<Acknowledge>>\nCOMMANDER: Great <<FeedbackPositive>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER: We need one slice of toast. <<Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SmallHandheldObjects on one CoffeeTable.\nDRIVER: how can i assist you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi what to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will prepare coffee in a mug. <<Instruction>>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: It is towards the right of the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: Inside the white vessel that resemblesa grabage bin <<InformationOnObjectDetails>>\nDRIVER: inside the fridge? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: lets prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what do toy need help with? <<RequestForInstruction>>\nDRIVER: you* <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread is left side of stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello. <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please put all remotes on one sofa <<Instruction>>\nDRIVER: sure, where can i find the remotes? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: ones on the black table/desk <<InformationOnObjectDetails>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Please water the plant. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup SoapBottle>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bowl>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: what do i need to do? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup CreditCard>\nDRIVER: <putdown GarbageCan>\nDRIVER: <move>\nCOMMANDER: puit all the newspaper on one furniture <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice a tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the knife is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hi what do i do today/ <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's slice the tomato to the left of the stove. <<Greetings/Salutations,Instruction>>\nCOMMANDER: The knife is in the sink. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: hello what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will cook two potato slices <<Instruction>>\nDRIVER: ok. Where is the potato? <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can i do <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: grab mug and place in coffee maker <<Instruction>>\nCOMMANDER: thats it <<Instruction>>\nDRIVER: ok where is the mug <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: nug is on the chair <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: slice the potato in the black bin <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: There's only a tomato in there <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Clean all the drinkware <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup PepperShaker>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get some water in a container from the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: and pour into the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SmallHandheldObjects on one Furniture.\nDRIVER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: hi, please grab the small objects and put them on one piece of furniture <<Greetings/Salutations,Instruction>>\nDRIVER: Okay. <<Acknowledge>>\nDRIVER: Where can I find the small objects, please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: remote under tv <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: make me some toast <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one CoffeeTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: ?task <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: where is knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hey <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: cook 2 slices of potato <<Instruction>>\nCOMMANDER: potato is on chair <<InformationOnObjectDetails>>\nDRIVER: Where's the potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nDRIVER: Hi what would you like me to do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one SideTable.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: make potato slices <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Microwave>\nCOMMANDER: sorry tomato slices <<Instruction>>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hi! What can I do for you today?1 <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. Let me see what we need to do. <<Greetings/Salutations,OtherInterfaceComment>>\nCOMMANDER: Okay. We need to boil a potato. <<Instruction>>\nDRIVER: Sure. <<Acknowledge>>\nDRIVER: Where is potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: Looks like the potato is by the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nDRIVER: What do I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: Greetings! What's my task for today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: place 2 remotes onto single seating sofa chair <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: how can i help out today? <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: can i help? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what can i do? <<RequestForInstruction>>\nCOMMANDER: we need to serve a sclice of tomatoe on a plate....first get the tomatoe <<Instruction>>\nDRIVER: where is the tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what to do <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: there is a mug behind the lettuce <<InformationOnObjectDetails>>\nCOMMANDER: pour the water in it and make coffee <<Instruction>>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: You'll be making a plate of toast. <<Instruction>>\nCOMMANDER: First, slice the bread with a knife. <<Instruction>>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: where is knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to make coffee <<Instruction>>\nCOMMANDER: Grab the coffee mug in front of you <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: good day <<Greetings/Salutations>>\nCOMMANDER: put all watch on one sofa <<Instruction>>\nDRIVER: Okay.  Can you direct me to the first watch? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: first watch is on the black side table right to the sofa with the laptop <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Put all Egg in one Cabinet.\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: We need to make a salad <<Instruction>>\nCOMMANDER: Slice tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cup in any Sink.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What is the first task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nCOMMANDER: Hey, I need a salad please <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: what should I get first? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a potato and cook 2 slices and serve them to me on a plate please <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: Our task is to serve one slice of tamato on a plate. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Check the fridge. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hi Whats the task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: Slice the lettuce located in the cabinet above the toaster <<Instruction,InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Clean two cups <<Instruction>>\nDRIVER: Can you find me cups? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick pot in the fridge <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Cook 2 slice(s) of Potato and serve on a Plate. <<Instruction>>\nCOMMANDER: the potato is on the table <<InformationOnObjectDetails>>\nCOMMANDER: the knife is in the cupboard above the microwave, right side <<InformationOnObjectDetails>>\nDRIVER: thank you, I will do this right away <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: lets make brefakfst <<Instruction>>\nDRIVER: <move>\nCOMMANDER: make coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER: in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi what do you need today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi i'd like breakfast <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: how can i serve you today/ <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: <move>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nDRIVER: ? <<Confirm>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hi...We're gonna clean a cup <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: where is cup <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: The cup is in the upper cabinet in the corner to the right of the sinkl <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: Now turn right and go straight forward <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what are doing today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: yo! <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bottle>\nDRIVER: oh there's water behind me <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <open Fridge>\nCOMMANDER: make one slice of toast please <<Instruction>>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Cup on any DiningTable.\nDRIVER: Hey, what Im I doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: You will be putting all the cups on a dining table <<Instruction>>\nDRIVER: Okay <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: Where is the dining table <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today we are preparing coffee <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: grab the mug <<Instruction>>\nDRIVER: you are the commander. <<MiscOther>>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: we need to slice a tomato <<Instruction>>\nCOMMANDER: the tomato is in the sink <<InformationOnObjectDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: Hi! What may I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice the tomato <<Instruction>>\nDRIVER: will do! <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: task? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER: Mug is to the right of the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nDRIVER: Hi! What am I   doing today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: make 2 slices of tomato using a knife <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: the tomato is in the sink <<InformationOnObjectDetails>>\nDRIVER: where can i find the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "RequestMore"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi lets clean a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: mug is below coffee maker <<InformationOnObjectDetails>>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fruit in any Fridge.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i left my fruit out, could you put them in the fridge for me <<Instruction>>\nCOMMANDER: there is a couple on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: Do you mean Tomatoes? <<Confirm>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any SideTable.\nCOMMANDER: please can you put the remote on teh side table? <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what are we doing today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: take bread <<Instruction>>\nCOMMANDER: in th stand <<InformationOnObjectDetails>>\nCOMMANDER: behind you <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: water plant please <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on one Furniture.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: Clean a plate and a bowl <<Instruction>>\nDRIVER: <pickup Bowl>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Mug in one Cabinet.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: slice the lettuce twice <<Instruction>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: where is lettuce? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: is on the chair <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: HI! <<Greetings/Salutations>>\nCOMMANDER: Please cook 1 slice of potato. <<Instruction>>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Potato is on the back table behind the lettuce and bread <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: Hi, how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Book on any Bed.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: today you need to put all the books on bed <<Instruction>>\nDRIVER: where are the books <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: left to bed <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Book>\nDRIVER: <putdown Bed>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spoon in any Sink.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: could you please collect all the spoons and put them into the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER: two are on the small table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Spoon>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any Tables.\nCOMMANDER: please place the watch on the table <<Instruction>>\nCOMMANDER: the watch is on the sofa chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: how can i help out today? <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: can i help? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what can i do? <<RequestForInstruction>>\nCOMMANDER: we need to serve a sclice of tomatoe on a plate....first get the tomatoe <<Instruction>>\nDRIVER: where is the tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. We need to make a plate of toast. <<Greetings/Salutations,Instruction>>\nCOMMANDER: The bread needs to be sliced using a knife. <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: Today could you place all the remote controls onto any of the chairs <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bread in any Fridge.\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <move>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: Sure thing <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: Boil the potato by cooking it in water <<Instruction>>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the potato is left of the oven <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: lets boil a potato please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: put remote on furniture <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown Chair>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: the remote is in the box under the wall shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you prepare a coffee for me <<Instruction>>\nCOMMANDER: there should be a mug on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: We are going to make a salad today! <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: First get the lettuce. It is on the table next to the egg. <<Instruction,InformationOnObjectDetails>>\nDRIVER: knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: First, slice the bread <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: Hello, task please <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: today lets cook potato <<Instruction>>\nDRIVER: <pickup Potato>\nDRIVER: I have potato, cook in microwave? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi, how are you? What would you like me to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Great how are you? <<Greetings/Salutations>>\nDRIVER: Good, thank you. <<Acknowledge>>\nCOMMANDER: Pick up the cloth between the sinks and clean it off in the water <<Instruction,InformationOnObjectDetails,Instruction>>\nDRIVER: Okay let me go get it. <<Acknowledge>>\nCOMMANDER: You will need to empty the sink first <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: could you do me a favour and put both my alarm clocks on my bed please <<Instruction>>\nDRIVER: I'll get straight to it <<Acknowledge>>\nCOMMANDER: theres one on the green chair in front of you <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: the other is on the shelf in the other room <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Tablewares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today, you are putting all the watches (3) in one box, please. <<Instruction>>\nDRIVER: <move>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: You can find one on the table to the rifht of the TV. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: task plz <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <putdown Stool>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Clean all the Mugs <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: rinse the dirty mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please make a plate of toast. <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on any Tables.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hi Whats the task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOtherInterfaceComment\n\nExample :\nGoal: Clean all the Tablewares.\nDRIVER: hello, what shall I  do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi,what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Add coffee to a mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Mug is in the coffee maker already <<InformationOnObjectDetails>>\nDRIVER: should i rinse the mug or not? <<AlternateQuestions>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg in one Cabinet.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a sandwhich <<Instruction>>\nDRIVER: sure, what would you like on it? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello, task please <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hi. We need to grab the spatula behind you on the counter to the right of the fridge first <<Greetings/Salutations,Instruction>>\nCOMMANDER: Hello? <<Greetings/Salutations>>\nCOMMANDER: Are you still there? <<Confirm>>\nDRIVER: yes <<Affirm>>\nDRIVER: <move>\nCOMMANDER: Just checking) <<InformationOther>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: bread in fridge <<InformationOnObjectDetails>>\nCOMMANDER: make a toast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Chairs.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Put the watch on a chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: Where is the watch? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Drawer>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a potato and cook 2 slices and serve them to me on a plate please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a potato in the mirowave <<InformationOnObjectDetails>>\nDRIVER: where can I find a knife? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare cofffe in a clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: mugs in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We need to rinse the drinkware with water. <<Instruction>>\nDRIVER: cup, mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there is something in the cabinet in the top right corner of the room <<InformationOnObjectDetails>>\nDRIVER: above something ? <<RequestOtherInfo>>\nDRIVER: there is alot of cabinets <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: get the remote on the tv stand and place it on the center furniture <<Instruction>>\nCOMMANDER: where the laptop is <<Instruction>>\nDRIVER: ok <<Affirm>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nDeny\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean mug and prepare coffee <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is on the brown table at the corner left to wash basin <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to place the watched onto an armchair <<Instruction>>\nCOMMANDER: watches* <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: whats first <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please can you put the remotes, 2 of them on the single armchair, please <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: one is in teh bin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nCOMMANDER: the other on the right side table by the standing lamp <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Kettle on any DiningTable.\nDRIVER: Hi, what are my directions <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please put my kettles onto the dining table for me <<Instruction>>\nDRIVER: <move>\nCOMMANDER: one is on the back shelving on the bottom shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Kettle>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nCOMMANDER: lets make 2 coffees first <<Instruction>>\nCOMMANDER: the mug is on the island <<InformationOnObjectDetails>>\nCOMMANDER: another mug is in the coffee machine. <<Instruction>>\nDRIVER: ok <<FeedbackPositive>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: lets boil a potato <<Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: Hello, what is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. We need to take 2 newspapers and place them on a single side table <<Greetings/Salutations,Instruction>>\nDRIVER: Great! Where are the newspapers? <<FeedbackPositive,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER: Please prepare breakfast <<Instruction>>\nCOMMANDER: Please prepare coffee <<Instruction>>\nCOMMANDER: Mug is in bin between sink and fridge <<InformationOnObjectDetails>>\nDRIVER: where is the mug <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup SaltShaker>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's the task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: no <<Deny>>\nDRIVER: I'm the driver <<MiscOther>>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nCOMMANDER: go find the mug <<Instruction>>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <close Fridge>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nDRIVER: <close Drawer>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <open Drawer>\nDRIVER: <open Cabinet>\nDRIVER: <close Drawer>\nDRIVER: <pickup Mug>\nDRIVER: <close Cabinet>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Lettuce>\nDRIVER: <move>\nDRIVER: <slice Tomato>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <slice Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <putdown Pan>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <open Drawer>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <close Drawer>\nDRIVER: <move>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <close Fridge>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Apple>\nDRIVER: <putdown Fridge>\nDRIVER: <close Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Pan>\nDRIVER: <toggle on StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off Toaster>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Potato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Acknowledge",
        "response": "Instruction"
    }
]