[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi, can you slice a lettuce <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: lettuce is near the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: knife is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets cook potato in microwave <<Instruction>>\nDRIVER: whats the task <<RequestForInstruction>>\nCOMMANDER: grab a ptato from the stool next to dinning table <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: please put the three pillows onto the armchair <<Instruction>>\nDRIVER: hii what shall i do today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: last one is in the cabinet unter the two <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi, how are you? What would you like me to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\n\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hi. Could you serve a slice of tomato on a plate? <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: we ned to cook a potato please <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: Let's make some toast <<Instruction>>\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: Bread is in front of the microwave <<InformationOnObjectDetails>>\nDRIVER: thank you, where can I find a knife? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hi, what do you need? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please water the plant. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER: By the sink. <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please make me a salad with 1 slice of lettuce, 1 slice of tomato, and 2 slices of potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello cook a slice of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: where is potato plz <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: robot wants to serve you <<RequestForInstruction>>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Clean all the cups <<Instruction>>\nDRIVER: <move>\nCOMMANDER: One is on the central table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello, task plz <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nCOMMANDER: slice lettuce first <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Lettuce>\nDRIVER: done <<Acknowledge>>\nDRIVER: next <<RequestMore>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "MiscOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what shall i do <<RequestForInstruction>>\nCOMMANDER: put the remote controls on the single arm chair <<Instruction>>\nCOMMANDER: 3 remotes <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: One is on the couch <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: hiii <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: prepare a coffe in clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: hi what can i do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hello what is the task today <<Greetings/Salutations>>\nCOMMANDER: Would you please water the plant. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how may help you today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup CellPhone>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What is the first task <<RequestForInstruction>>\nCOMMANDER: slice tomato using the knife <<Instruction>>\nDRIVER: Where is the tomato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: make toast <<Instruction>>\nCOMMANDER: slice bread on the counter <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER: then toast after you slice <<Instruction>>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please make me a coffe <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER: i would like you to prepare a salad for me <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need you to clean all the plates please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where can i find the plates <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <pickup Plate>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all RemoteControl on any Tables.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: hello. Ay tasks for me? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like coffee <<Instruction>>\nDRIVER: sure, where is a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: on the shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: got it <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: make a sandwich <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Please make 2 cups coffee <<Instruction>>\nDRIVER: <pickup Mug>\nDRIVER: <toggle off Faucet>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how may i assist you today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nCOMMANDER: hi. Today we need to put all spatulas into any cabinet. <<Greetings/Salutations,Instruction>>\nCOMMANDER: you can start by finding the one in the cabinet located under the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Spatula>\nDRIVER: <close Cabinet>\nDRIVER: <open Cabinet>\nCOMMANDER: the spatula needs to be placed into any cabinet now <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like a lettuce, tomato and potato salad <<Instruction>>\nDRIVER: <move>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: slice a tomato <<Instruction>>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <move>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: Your task is to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER: fetch water from the sink with a con tainer and pour on the plant <<Instruction>>\nDRIVER: okay help me locate container <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: please make coffe <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we slice bread <<Instruction>>\nDRIVER: what where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make salad today <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the first step? <<RequestForInstruction>>\nCOMMANDER: slice atomato using knife <<Instruction>>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: tomato is in the above cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce in a Bowl.\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: Hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean all the plate please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure, where are the plates? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hi, I would like you to prepare breakfast <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: today we will be watering the plant <<Instruction>>\nDRIVER: okay wheres the water can <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CreditCard on any Desk.\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: what do i do <<RequestForInstruction>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: lets slice a tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the tomato is on the brown shelves <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Can you make me a salad? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Tables.\nDRIVER: what  shall I do today? <<RequestForInstruction>>\nCOMMANDER: please put all the newspapers onto the table <<Instruction>>\nCOMMANDER: there is one on the white shelf <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: onto which table? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: get the two newspapers on the shelves and place them close to this one on the black table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "InformationOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: place all the newspapers onto a single chair <<Instruction>>\nCOMMANDER: there is one inside that box <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please make a salad <<Instruction>>\nCOMMANDER: i would like lettuce tomato and 2 slices of potato with it <<Instruction>>\nDRIVER: where do I find the thing I need? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the lettuce should be in the black bin <<InformationOnObjectDetails>>\nCOMMANDER: the tomato is in the cabinet below the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: please can you water the plant <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: Please clean all the cloths <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all DishSponge in any Sink.\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please put all the dish sponges in the sink <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is one on the chair <<InformationOnObjectDetails>>\nDRIVER: <pickup DishSponge>\nDRIVER: <putdown Sink>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: hi how can i helpl today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need the newspapers on the same sidetable <<Instruction>>\nDRIVER: sure, i see a newspaper on teh couch! <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: hi..put all remotes on one coffe table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi, what can i do for u? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: fill the mug with coffee <<Instruction>>\nDRIVER: Where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: what is my task please <<RequestForInstruction>>\nCOMMANDER: Cook one slice of potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello! How can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Slice a tomato <<Instruction>>\nDRIVER: Could you tell me where to find the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: checking.. <<InformationOther>>\nDRIVER: <move>\nDRIVER: <open Drawer>\nDRIVER: <close Drawer>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Desk.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice a tomato and serve 2 slices in a bowl <<Instruction>>\nDRIVER: <move>\nCOMMANDER: a tomato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Today you will make a salad <<Instruction>>\nCOMMANDER: First make a slice of lettuce <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where is the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The lettuce is to the right of the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: hello how are you today <<Greetings/Salutations>>\nCOMMANDER: our task is to clean all plates <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where are the plates? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <toggle off Faucet>\nCOMMANDER: the plate is next to the toaster <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: Our task is to serve one slice of tamato on a plate. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Check the fridge. <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: Grab the tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: boil potato by cooking in water <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pencil on any Furniture.\nDRIVER: First task please? <<RequestForInstruction>>\nCOMMANDER: put all pencils on any furniture <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: what furniture? <<RequestForInstruction>>\nDRIVER: any furniture? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Put all sports equipment on any bed. It is beside the bed on the floor by the basket. <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup TennisRacket>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nDRIVER: Okay. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: Bread is inside the fridfge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: we need to clen the plate <<Instruction>>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Book on any Desk.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: hello friend <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: lets water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello! How can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Slice a tomato <<Instruction>>\nDRIVER: Could you tell me where to find the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: HI! What should I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's get the bread out of the fridge next to you <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: We will need to slice this and make 2 pieces of toast <<Instruction>>\nDRIVER: <pickup Bread>\nDRIVER: <close Fridge>\nDRIVER: Got it. <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: Clean a plate and a bowl <<Instruction>>\nDRIVER: <pickup Bowl>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: Our task is to serve one slice of tamato on a plate. <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Check the fridge. <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: Grab the tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Dresser.\nDRIVER: hi. what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to rinse the cloth with water <<Instruction>>\nDRIVER: <move>\nCOMMANDER: It is between the sinks <<InformationOnObjectDetails>>\nDRIVER: <pickup SoapBottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Kettle on any DiningTable.\nDRIVER: Hello. How can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Can you make me a salad? <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hello how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: we need to slice a tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork on any DiningTable.\nDRIVER: Hi, what is my direction? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: Please boil potato there is one in cabinet over microwave <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in one Box.\nDRIVER: how may i assist you today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "RequestForObjectLocationAndOtherDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please make a plate of toast <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: i'd like coffee in a clean mug <<Instruction>>\nDRIVER: sure where is your mug? <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: mug is on the centre cabinet <<InformationOnObjectDetails>>\nCOMMANDER: fill it with coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: Hello! <<Greetings/Salutations>>\nDRIVER: My computer screen froze. Apologies for the wait. <<OtherInterfaceComment>>\nDRIVER: <move>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Serve a slice of tomato in a bowl please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The tomato is in the cupboard on top of the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup ButterKnife>\nDRIVER: <move>\nCOMMANDER: And the microwave is on top of the stove <<InformationOnObjectDetails>>\nDRIVER: <slice Tomato>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: Tomato is inside the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: cook 3 slices of potato <<Instruction>>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Today could you place all of the cloths in the bath tub <<Instruction>>\nDRIVER: <move>\nCOMMANDER: You should be able to find a cloth inbetween the two sinks <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on any Chairs.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: we need to ge the potato please <<Instruction>>\nDRIVER: what is my task? <<RequestForInstruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: by the toaster <<InformationOnObjectDetails>>\nCOMMANDER: place it in the pot on the stove <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Hello How are you <<Greetings/Salutations>>\nDRIVER: Hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Shall we begin <<Confirm>>\nDRIVER: yeah <<Acknowledge>>\nCOMMANDER: put a cloth in any bathtub <<Instruction>>\nCOMMANDER: 2 of each <<Instruction>>\nDRIVER: <move>\nCOMMANDER: one is in the cabinet to the right of the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffe in a clean mug <<Instruction>>\nCOMMANDER: the mug is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: coffee is done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nDRIVER: Hello. What should we do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 pepper shakers inside ay cabinet <<Instruction>>\nCOMMANDER: one is inside the microwave, take it. <<InformationOnObjectDetails>>\nCOMMANDER: and place it inside cabinet <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <pickup PepperShaker>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any TVStand.\nDRIVER: Hey, what I am I doing tonight <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello the remote needs to be put on the table stand <<Greetings/Salutations,Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: Table stand? <<Confirm>>\nDRIVER: <move>\nDRIVER: <putdown TVStand>\nCOMMANDER: the remote is in the shelf where the flower is, <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: our goal today is to water the plant <<Instruction>>\nDRIVER: what should i do? <<RequestForInstruction>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: if you go to the sink do you see a cup or a bowl or anything <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello..What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: You have to rinse the mug in water <<Instruction>>\nCOMMANDER: The mug is on the counter by the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: please boil a potato on teh stove <<Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: there is one in the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: but it may alraedy be cooked <<InformationOther>>\nDRIVER: is there another? <<RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Deny"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: Hello, clean a pot <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: We're going to make a sandwich <<Instruction>>\nDRIVER: <pickup SprayBottle>\nCOMMANDER: The bread is on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Potato in any Cabinet.\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: Hi, First task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: rinse the drinkware <<Instruction>>\nDRIVER: we got ten min <<OtherInterfaceComment>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd liek a cup of coffee <<Instruction>>\nDRIVER: <move>\nDRIVER: sure where is the mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: you'll need to clean a mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! Please prepare a cup of coffee :) <<Greetings/Salutations,Instruction>>\nCOMMANDER: First, please clean the mug. <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off CoffeeMachine>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi, what do you need me to do? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nCOMMANDER: container is left of toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: take container and place fill water <<Instruction>>\nDRIVER: <move>\nCOMMANDER: remove things from sink <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: What should we do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What do you need today? <<RequestForInstruction>>\nCOMMANDER: please make me toast on a clean plate! <<Instruction>>\nDRIVER: of course! <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: the plate is on the table and the bread is on the counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: make toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: knife in fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nDeny\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you serve 5 cooked potato slices on a clean plate? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Knife>\nCOMMANDER: plate is in fridge and knife is on counter <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi...waht can i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nCOMMANDER: Today, you are preparing breakfast. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: boil potatoe <<Instruction>>\nDRIVER: ok, where is the potato? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: or pot? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in a frying pan next to the oven <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Pan>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER: the plants to be watered it iis the task <<Instruction>>\nDRIVER: <move>\nCOMMANDER: bring some water in a container from the sink and pour into the plant <<Instruction>>\nDRIVER: <pickup Bowl>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: please make a slice of tomato using a knife <<Instruction>>\nCOMMANDER: and place it in a clean bowl <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where can i find a tomato\\ <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nCOMMANDER: just need to get water into a container and pour onto plant <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: tomato is inside the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: find the tomato <<Instruction>>\nCOMMANDER: actually need to find knife first <<Instruction>>\nCOMMANDER: knife is on round table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: tomato is on counter next to garbage can <<InformationOnObjectDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What is the task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: I would like you to make me a salad <<Instruction>>\nDRIVER: yes sure, where can I find the knife and lettuce? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hello how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi <<Greetings/Salutations>>\nDRIVER: What's the task <<RequestForInstruction>>\nCOMMANDER: lettuce is inside the upper cabinet left to the stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice bread and toast 1 slice <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Candle on any Tables.\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: hi task ppz <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Clean all the mugs <<Instruction>>\nDRIVER: mug location <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: task? <<RequestForInstruction>>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nCOMMANDER: Put all RemoteControl on any Furniture <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: slice the lettuce <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: toast two slices of bread <<Instruction>>\nDRIVER: I could see bread <<Acknowledge>>\nDRIVER: Can you help me find knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: knife is on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello today we are placing all remote controls on one table <<Greetings/Salutations,Instruction>>\nDRIVER: Where is the table? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: How many remotes? <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Laptop on any Bed.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all laptops on any bed. <<Instruction>>\nCOMMANDER: There are two. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any SideTable.\nDRIVER: Hello. what should i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: Today we need to clean two mugs. <<Instruction>>\nDRIVER: what is my task tody <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: where are the mugs <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The first mug is between the toaster and the stove. <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please water the plan <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: place mug in coffeemaker <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello there! <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: place news paper on single armchair <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on one Sofa.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: good day <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi, how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I'd like you to make breakfast for me <<Instruction>>\nCOMMANDER: One cup of coffee and a sandwich <<Instruction>>\nDRIVER: Okay <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Bowls.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi what to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will prepare coffee in a mug. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a sale <<Instruction>>\nCOMMANDER: salad <<Instruction>>\nCOMMANDER: slice lettuce first <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: lettuce by the toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: knife <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do today <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: lets make 2 slice of toast <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: <putdown DiningTable>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: im here to help <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER: make a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: lettuce is inside the fridge make 2 slices <<InformationOnObjectDetails,Instruction>>\nDRIVER: where can i find a knife? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Tables.\nDRIVER: Hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast. make a slice of toast. the bread needs to be sliced using a knife. The bread needs to be toasted. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Plate in any Cabinet.\nCOMMANDER: How <<Confirm>>\nCOMMANDER: Find all plates and put them in the cabinet <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: Hi, what are we doing? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: rinse dirty pans with water <<Instruction>>\nCOMMANDER: first pa is on thestove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: pan* <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: where is tomato please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is one in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Apple in one Cabinet.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <open Fridge>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Candle on one CoffeeTable.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: how can i help you today? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup RemoteControl>\nDRIVER: <move>\nCOMMANDER: Today, you will need to put all the candles (2) on a single coffee table. <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: can you water the plant <<Instruction>>\nDRIVER: <move>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nDRIVER: <pour HousePlant>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: slice potato <<Instruction>>\nCOMMANDER: potato inpot on counter <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: please make a sanwich <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find some bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: ny the coffee pot <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on any Tables.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle on Faucet>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello! What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: task is to prepare breakfast <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Slice the lettuce <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on any ArmChair.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: hey, can you gather all the newspapers i have and place them on the armchair <<Greetings/Salutations,Instruction>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <pickup Newspaper>\nDRIVER: on which armchair? <<RequestOtherInfo>>\nDRIVER: <move>\nDRIVER: <putdown ArmChair>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: Hello! Can you make a piece of toast please? <<Greetings/Salutations,Instruction>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: can you cut two slices of breat and toast them? <<Instruction>>\nDRIVER: <move>\nDRIVER: Can you tell me where to find bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Please make a mug of coffee. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: HI! <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Furniture.\nDRIVER: what can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put watch on a single furniture <<Instruction>>\nDRIVER: where is watch? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: found one <<Acknowledge>>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: wash the dirty pan next to the stove <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Bed.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: Would you like your task? <<Confirm>>\nDRIVER: yeees <<Affirm>>\nCOMMANDER: Please put the book on to the bed. <<Instruction>>\nDRIVER: where is the book <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Book is on the table. <<InformationOnObjectDetails>>\nCOMMANDER: Pick up book and put it on the bed please. <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nConfirm\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: mug is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any ArmChair.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nCOMMANDER: container is left of toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Cup>\nCOMMANDER: hi, today you need to cook 3 slices of potato <<Instruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <move>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: hi what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: make a salad, 1 slice of lettuce and 2 slices of cooked potato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nDRIVER: <move>\nDRIVER: hello, task plase <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to clean dirty mugs <<Instruction>>\nDRIVER: location of first? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the waste basket <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: clean all cloths <<Instruction>>\nDRIVER: what is the task today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please make a plate of toast. <<Instruction>>\nCOMMANDER: First slice the bread. <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: Serve 1 slice of tomato on a plate <<Instruction>>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: my task is which <<RequestForInstruction>>\nCOMMANDER: clean cuos <<Instruction>>\nCOMMANDER: cups <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: Hi, Whats is the task <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Cup>\nDRIVER: <putdown CounterTop>\nCOMMANDER: First, slice the bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi, I have a neat task for you today. I'd like all my plates cleaned please <<Greetings/Salutations,Instruction>>\nCOMMANDER: the first plate can be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: great ill get started <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Wjat shall I do today? <<RequestForInstruction>>\nCOMMANDER: make coffe <<Instruction>>\nCOMMANDER: the mug is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: task plz <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Boil a potato <<Instruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: look in the cabinet above the toaster <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Kettle on any DiningTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi what are my directions <<Greetings/Salutations,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we need to put all the small handheld objects on a single arm chair <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread1 toast <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cup in any Sink.\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put all cups in the sink <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Tomato in any Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what shoud I do first? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: you need to put all the tomato in the cabinet <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: cook 1 slice of potatoe <<Instruction>>\nDRIVER: <move>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nDRIVER: Hello what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Put 2 tomatoes in one cabinet <<Instruction>>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to make a sandwich today <<Instruction>>\nDRIVER: What should I do first <<RequestForInstruction>>\nCOMMANDER: first lets slice bread <<Instruction>>\nDRIVER: <move>\nDRIVER: Where is the bread please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there is aknife by the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hi how can i help you today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER: Hello! Could you please make a salad? <<Greetings/Salutations,Instruction>>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: 1 slice of lettuce and 2 slices of tomato <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to first slice a tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: what can i help you with? <<RequestForInstruction>>\nCOMMANDER: can you rinse the cloth with the water? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Cloth>\nCOMMANDER: the cloth is near the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: What should I do today> <<RequestForInstruction>>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: Make a slice of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Vase>\nDRIVER: <putdown Stool>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nDRIVER: <move>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make a slice of toast <<Instruction>>\nDRIVER: Sure. Bread locatio? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should we do today <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug 2 times <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: HI, what are we doing? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi, you need to cook a slice of potato. <<Greetings/Salutations,Instruction>>\nCOMMANDER: potato needs to be sliced using a knife <<Instruction>>\nCOMMANDER: grab a knife. <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Microwave>\nDRIVER: <pickup Knife>\nDRIVER: <close Microwave>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Hello How are you <<Greetings/Salutations>>\nDRIVER: Hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Shall we begin <<Confirm>>\nDRIVER: yeah <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare breakfast. First I'd like some coffee in a mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: sure, where can i find a coffee mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: check the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hello. We need to make a salad <<Greetings/Salutations,Instruction>>\nCOMMANDER: You will need a knife. It is showing that the knife is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what do I need to slice? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: What should I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: boil potato in water <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Egg>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi please cook a potato in the microwave <<Greetings/Salutations,Instruction>>\nDRIVER: what is my task today <<RequestForInstruction>>\nDRIVER: wher eis the potto <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: potato <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: potato is on oven? <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOtherInterfaceComment\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: What can I do? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: First we need a tomato sliced <<Instruction>>\nDRIVER: <move>\nCOMMANDER: The tomato is in the upper cabinet to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: and knife <<InformationOnObjectDetails>>\nCOMMANDER: The knife is in the 2nd drawer down to the left of the stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: prepare coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER: mug is clean <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on any Dresser.\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: hi how can i helpl today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: I need the newspapers on the same sidetable <<Instruction>>\nDRIVER: sure, i see a newspaper on teh couch! <<Acknowledge>>\nDRIVER: <move>\nDRIVER: <pickup Newspaper>\nDRIVER: <move>\nCOMMANDER: the other one is on the shelf to the right of the couch <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: coffee please <<Instruction>>\nDRIVER: yes sir <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please put all pepper shakers in a cabinet <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <pickup PepperShaker>\nDRIVER: <putdown Cabinet>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: We need to make a salad today. <<Instruction>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello...We need to take the alam clcoks and place on the bed <<Greetings/Salutations,Instruction>>\nDRIVER: Ok. <<Acknowledge>>\nDRIVER: <pickup AlarmClock>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: Slice lettuce <<Instruction>>\nDRIVER: What is my first task ) <<RequestForInstruction>>\nDRIVER: on it <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nDRIVER: Hi, what  are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi i need 2 saltshakers put onto the dining table <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hello <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: pls water the plant with the containter from the sink <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <move>\nDRIVER: do yo mean the pot <<RequestOtherInfo>>\nDRIVER: <pickup Pot>\nDRIVER: this one? <<Confirm>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: find a newspaper <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: what should i do for today <<RequestForInstruction>>\nCOMMANDER: serve a slice of tomato in a bowl <<Instruction>>\nDRIVER: <move>\nCOMMANDER: tomato is on the chair under the counter <<InformationOnObjectDetails>>\nDRIVER: <pickup Tomato>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: Hi how can I help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a salad, with one slice of lettuce and two slices of tomato <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Knife>\nDRIVER: <close Fridge>\nDRIVER: where is the salad? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nConfirm\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: bread is in cabinet above stove <<InformationOnObjectDetails>>\nCOMMANDER: knife near wash basin <<InformationOnObjectDetails>>\nCOMMANDER: make a slice of toast <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Dishware on any DiningTable.\nDRIVER: Hello how are you <<Greetings/Salutations>>\nDRIVER: I am ready <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Hey, you need to put the dishware on the dining table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off Faucet>\nDRIVER: <pickup Spoon>\nDRIVER: <move>\nCOMMANDER: Start with the one inside the microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hi! <<Greetings/Salutations>>\nDRIVER: What help do you need today? <<RequestForInstruction>>\nCOMMANDER: clean mug please and make coffee <<Instruction>>\nDRIVER: Sure. Where is mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER: Put two newspapers on a single side table <<Instruction>>\nDRIVER: <move>\nCOMMANDER: One is on the chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 4 slice(s) of Tomato on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: task is to serve 2 sclices of tomatoes on a plate.. <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: please slice bread and toast 1 slice <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup ButterKnife>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: we to slice a tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER: the tomato is on the table <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER: the knife is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nCOMMANDER: Make a salad <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Sofa.\nDRIVER: hello, how may i assist you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: prepare coffee <<Instruction>>\nCOMMANDER: mug is in the oven <<InformationOnObjectDetails>>\nDRIVER: <toggle off Microwave>\nDRIVER: <open Microwave>\nDRIVER: <pickup Mug>\nDRIVER: <close Microwave>\nDRIVER: <putdown CoffeeMachine>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: coffee is ready <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Please fill a mug with coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: clean mug <<Instruction>>\nCOMMANDER: mug next to the coffeemaker <<InformationOnObjectDetails>>\nCOMMANDER: place mug in coffeemaker is the task <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pencil in any Safe.\nDRIVER: what task can i do for you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: put all remotecontrols on side table <<Instruction>>\nDRIVER: <move>\nCOMMANDER: remote is on the middle table in the room <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put 3 alarm clocks on the bed please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean the plate please <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Plate>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: wash the dirty pan next to the stove <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Egg>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Pan>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CreditCard on any Bed.\nDRIVER: Hello. hat can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: what* <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: 2 slices tomato on plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: Hello! What should I do today? <<RequestForInstruction>>\nCOMMANDER: today you need to slice a tomato <<Instruction>>\nDRIVER: Thank you. Do I need to get a plate or just the knife? <<RequestOtherInfo>>\nCOMMANDER: tomato is under the toasted <<InformationOnObjectDetails>>\nCOMMANDER: on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: get dish from microwave <<InformationOnObjectDetails>>\nDRIVER: hi how are you today <<Greetings/Salutations>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pencil on any Bed.\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: go the desk <<Instruction>>\nDRIVER: <pickup Pencil>\nCOMMANDER: by the phones <<InformationOnObjectDetails>>\nCOMMANDER: and in the trash bin <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: HI! <<Greetings/Salutations>>\nDRIVER: What  can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cook a slice of potato? <<Instruction>>\nCOMMANDER: the knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hey can you make a coffee for me please <<Instruction>>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: thank you <<FeedbackPositive>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi! Let's go ahead and clean all the dishes. <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread and knife are in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: make 2 toasts <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Cok a potato on the pan <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hey can you make me a sandwich please <<Greetings/Salutations,Instruction>>\nCOMMANDER: 2 slices of toast with sliced tomato please <<Instruction>>\nDRIVER: <move>\nCOMMANDER: theres a knife in the fridge <<InformationOnObjectDetails>>\nDRIVER: Of course. Where can I find bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nDRIVER: How may I assist you today? <<RequestForInstruction>>\nCOMMANDER: im craving a salad, could you start by slicing some lettuce for me <<Instruction>>\nDRIVER: Absolutely! <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: lets make a sandwich <<Instruction>>\nDRIVER: <move>\nCOMMANDER: first lets slice some bread <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: bread in fridge <<InformationOnObjectDetails>>\nCOMMANDER: make a toast <<Instruction>>\nCOMMANDER: 1 slice <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER: single task <<Instruction>>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: Hi today can you please get and place all the tissue boxes om the coffee table <<Greetings/Salutations,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Laptop on any Bed.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all laptops on any bed. <<Instruction>>\nCOMMANDER: There are two. <<Instruction>>\nDRIVER: <move>\nDRIVER: <close Laptop>\nDRIVER: <pickup Laptop>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: helllo <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please put the lettuce in a single cabinet <<Instruction>>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: One is on the island <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare breakfast <<Instruction>>\nDRIVER: <move>\nCOMMANDER: coffee in a clean mug <<Instruction>>\nDRIVER: Where is the  mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the counter top <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: clean all the dirty clothes <<Instruction>>\nDRIVER: <move>\nDRIVER: how many? <<RequestOtherInfo>>\nDRIVER: <pickup Cloth>\nDRIVER: <toggle off Faucet>\nCOMMANDER: one <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Mug on any DiningTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any CoffeeTable.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Are you ready for your task? <<Confirm>>\nCOMMANDER: Please put the watch on the coffee table. <<Instruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER: need to get knife by lettuce <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: <move>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. We need to slice a tomato <<Greetings/Salutations,Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find tomato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The tomato is in the lower left cabinet under the sink <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: bread is on top of the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: You'll be making a plate of toast. <<Instruction>>\nCOMMANDER: First, slice the bread with a knife. <<Instruction>>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: where is knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It's to the left of the stove, next to the toaster. <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi, What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: you need to clean 4 drinkwares <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown CounterTop>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: We need to make a salad today. <<Instruction>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We will need a knife to slice items <<InformationOther>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: could you please put the alarm clocks onto the bed for me <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup AlarmClock>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: lets go <<RequestForInstruction>>\nCOMMANDER: Hello! Cold you make a sandwich please? <<Greetings/Salutations,Instruction>>\nCOMMANDER: There is a knife in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: You also need to toast the bread <<Instruction>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nCOMMANDER: lettuce is intthe microwave <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to serve me a slice of toast <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nDRIVER: <slice Bread>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nDRIVER: HI. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should i do? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER: mugs in the coffee maker <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: <move>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: We need to prepare a coffee in clean mug <<Instruction>>\nDRIVER: <move>\nCOMMANDER: First we need to find mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spoon in any Sink.\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: we shall put all the spoons in the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: where is a spoon? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: lets prepare breakfast...rinse the mug and make coffee please <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nDRIVER: Hi! What am I   doing? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one SideTable.\nDRIVER: Hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Desk.\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: <move>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: What should I do <<RequestForInstruction>>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: Hello. <<Greetings/Salutations>>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: go get a potatoe <<Instruction>>\nDRIVER: <move>\nCOMMANDER: out the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Fridge>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad please <<Instruction>>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: lettuce, tomato and potato <<Instruction>>\nDRIVER: <pickup Apple>\nDRIVER: <putdown CounterTop>\nCOMMANDER: lettuce and tomato are by the stove <<InformationOnObjectDetails>>\nCOMMANDER: potato is on the stool <<InformationOnObjectDetails>>\nCOMMANDER: cook that first please <<InformationOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: put the newspaper on the sofa <<Instruction>>\nCOMMANDER: there is 3 <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: there is one on the wall shelf <<InformationOnObjectDetails>>\nDRIVER: where is the newspaper <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get some water in a container from the sink <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bowl>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Cook 2 slice(s) of Potato and serve on a Plate. <<Instruction>>\nCOMMANDER: the potato is on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any CoffeeTable.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER: Are you ready for your task? <<Confirm>>\nCOMMANDER: Please put the watch on the coffee table. <<Instruction>>\nCOMMANDER: Please respond <<InformationOther>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can i do to help you today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nCOMMANDER: Hey, I need a salad please <<Greetings/Salutations,Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 5 slice(s) of Tomato in a Bowl.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Today can you serve 5 slices of tomato in a clean bowl <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Tomato>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cut 2 slices of lettuce please <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: please cook two slices of potato and serve in a bowl <<Instruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of tomatoe in a clean bowl <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: can you make me a coffee please? <<Instruction>>\nDRIVER: <move>\nDRIVER: Where can I find a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: theres a mug in the top cupboard left of the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: how canI help? <<RequestForInstruction>>\nCOMMANDER: can you pleas put a slice of tomato in a bowl? <<Instruction>>\nCOMMANDER: tomato is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to rinse the cloth with water <<Instruction>>\nDRIVER: <move>\nCOMMANDER: It is between the sinks <<InformationOnObjectDetails>>\nDRIVER: <pickup SoapBottle>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please slice a tomato <<Instruction>>\nDRIVER: <pickup Knife>\nDRIVER: <slice Tomato>\nDRIVER: Done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER: Today you will boil a potato a potato and water <<Instruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: You can find a potato on the counter to the left of the stove <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nDRIVER: Hello! What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Can you cook 5 slices of potato please? <<Instruction>>\nDRIVER: sure, where can I find the potatoe? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the potato is on the central big counter <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: and a knife please <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nDRIVER: Hi! <<Greetings/Salutations>>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: find newspaper <<Instruction>>\nDRIVER: <move>\nCOMMANDER: one is on bottom shelf under red vase <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: pick up the coffee mug <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like a salad <<Instruction>>\nDRIVER: whats in it? <<RequestOtherInfo>>\nDRIVER: <move>\nCOMMANDER: tomato and potato <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: First find the potato and cut it with a knife <<Instruction>>\nDRIVER: Ok. Where is the knife? <<Acknowledge>>\nCOMMANDER: Looks like it's in the sink <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the potato is <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi there! <<Greetings/Salutations>>\nDRIVER: Hello. What is my first task, please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today we are going to make a salad on a plate <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what are we doing today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nDRIVER: how can i help you? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i need you to put all the newspaper on one side table <<Instruction>>\nCOMMANDER: there should be two newspapers <<InformationOther>>\nDRIVER: sure <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Could you make me a coffee <<Instruction>>\nDRIVER: <move>\nCOMMANDER: There should be a mug in the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <pour Sink>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: clean the plate on the counter <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Sofa.\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello please put pillow on sofa <<Greetings/Salutations,Instruction>>\nDRIVER: <pickup Pillow>\nDRIVER: <move>\nDRIVER: <putdown Sofa>\nDRIVER: what is next? <<RequestForInstruction>>\nCOMMANDER: pillow o desk <<Instruction>>\nCOMMANDER: on <<Instruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Deny"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nDRIVER: hi, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: please serve one slice of lettuce on a plate <<Instruction>>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Could you boil a potato? <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Deny"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Watch on one Furniture.\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pots.\nDRIVER: what's first? <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: boil a potato please <<Instruction>>\nDRIVER: sure where can I find one? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: on the small table <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on any Dresser.\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nDRIVER: what can i do for you today <<RequestForInstruction>>\nDRIVER: <pickup TissueBox>\nDRIVER: <putdown Bathtub>\nDRIVER: <pickup Cloth>\nDRIVER: <putdown Bathtub>\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: anyone there <<Greetings/Salutations>>\nDRIVER: <toggle on ShowerHead>\nCOMMANDER: i am sorry <<MiscOther>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please rinse the mug beside thje sink <<Instruction,InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: whats next <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make a salade <<Instruction>>\nCOMMANDER: first we cut some lettuce <<Instruction>>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER: the knife is in the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hello! <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: hey can you make me a salad please? I need 2 slices of tomatoes first <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nDRIVER: How can I help? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Could you please cook 3 slices of potato and serve them on a plate for me? <<Instruction>>\nCOMMANDER: there is a potato on the table <<InformationOnObjectDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: start by cleaning a mug <<Instruction>>\nCOMMANDER: then make coffee <<Instruction>>\nDRIVER: okay <<Acknowledge>>\nDRIVER: <move>\nCOMMANDER: theres a mug on the rounf table <<InformationOnObjectDetails>>\nCOMMANDER: round <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: ingredients please <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Confirm"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what should I do? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: The game is finished. <<InformationOther>>\nCOMMANDER: There is nothing else to complete. <<InformationOther>>\nCOMMANDER: Thanks! <<FeedbackPositive>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pans.\nDRIVER: Hi, what are we doing? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: rinse dirty pans with water <<Instruction>>\nCOMMANDER: first pa is on thestove <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: pan* <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <toggle off StoveKnob>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nDRIVER: how can help <<RequestForInstruction>>\nCOMMANDER: I need you to put the pepper shaker in the cabinet <<Instruction>>\nDRIVER: where can I find it? <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one Tables.\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hello, task please <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cup in any Sink.\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nDRIVER: Hello, what shall I   do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can I help you with today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: i'd like a cup of coffee <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve on a Plate.\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please cook for slices of potato for me <<Instruction>>\nCOMMANDER: four <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any Tables.\nCOMMANDER: please place the watch on the table <<Instruction>>\nCOMMANDER: the watch is on the sofa chair <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <pickup Watch>\nDRIVER: <move>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all AlarmClock on any Desk.\nDRIVER: What are we doing today <<RequestForInstruction>>\nCOMMANDER: you need to put an alarm clock onto a desk <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: this is a test <<OtherInterfaceComment>>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what can i do <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: grab mug and place in coffee maker <<Instruction>>\nCOMMANDER: thats it <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, you need to rinse the mug with water <<Instruction>>\nDRIVER: Hello, please direct me <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: Find the mug and rinse it with water <<Instruction>>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cook 2 slices od potatoes, please <<Instruction>>\nDRIVER: <move>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: Hi what are my directions <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: You have to put all lettuce on any dinning table <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: where is  mug <<RequestForObjectLocationAndOtherDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: make a salad. <<Instruction>>\nCOMMANDER: we need a slice of tomato <<Instruction>>\nCOMMANDER: the tomato is on the island <<InformationOnObjectDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cups.\nDRIVER: Hi what should I do today? <<RequestForInstruction>>\nCOMMANDER: wash the cup <<Instruction>>\nCOMMANDER: it is inside the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: jo <<Greetings/Salutations>>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: please pick up pot on table and wash it <<Instruction,InformationOnObjectDetails,Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nDRIVER: How may i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to water the plant <<Instruction>>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nDRIVER: Hi! What can I do for you today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "InformationOther",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: what should i do today? <<RequestForInstruction>>\nDRIVER: ok <<Acknowledge>>\nDRIVER: where can i find letttuce and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: pls slice the tomato by the toaster <<Instruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: mugs is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <toggle on CoffeeMachine>\nDRIVER: How many do I need? <<RequestOtherInfo>>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: lets prepare breakfast...rinse the mug and make coffee please <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: if there is not enough room on the other plate <<InformationOther>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <move>\nDRIVER: <pickup SaltShaker>\nDRIVER: <putdown CounterTop>\nCOMMANDER: We need to make toast <<Instruction>>\nCOMMANDER: Find bread <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: hi <<Greetings/Salutations>>\nDRIVER: what's the task <<RequestForInstruction>>\nDRIVER: <move>\nDRIVER: are you there <<MiscOther>>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: lets prepare coffee in a clean mug <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Mug>\nDRIVER: <putdown Sink>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: I need the newspaper to be placed on a single table. <<Instruction>>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: I need the newspaper placed on a single table. <<Instruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: I need you to help make a sandwhich <<Instruction>>\nCOMMANDER: first lets slice the bread <<Instruction>>\nDRIVER: Whats my first task? <<RequestForInstruction>>\nCOMMANDER: for it <<MiscOther>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nCOMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nCOMMANDER: when you have the bread <<InformationOther>>\nDRIVER: <putdown CounterTop>\nCOMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <open Cabinet>\nDRIVER: <close Cabinet>\nCOMMANDER: above the fridge <<InformationOnObjectDetails>>\nCOMMANDER: in the left cabinet <<InformationOnObjectDetails>>\nCOMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>\nDRIVER: <move>\nCOMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <open Cabinet>\nDRIVER: <move>\nCOMMANDER: then go to the microwave <<Instruction>>\nDRIVER: <move>\nCOMMANDER: Can you reach the bread above the fridge? <<Instruction>>\nDRIVER: to high up <<NotifyFailure>>\nCOMMANDER: go the microwave <<Instruction>>\nDRIVER: what about the bread on the counter <<Confirm>>\nCOMMANDER: there is bread there as well <<InformationOnObjectDetails>>\nCOMMANDER: turn left <<Instruction>>\nDRIVER: ! <<MiscOther>>\nDRIVER: <move>\nCOMMANDER: the microwave <<InformationOnObjectDetails>>\nDRIVER: <pickup Knife>\nDRIVER: <move>\nCOMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>\nDRIVER: <slice Bread>\nCOMMANDER: slice it <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: take 2 slices of bread to the toaster <<Instruction>>\nCOMMANDER: its by the fridge <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nCOMMANDER: we need to toast it <<Instruction>>\nDRIVER: <putdown Toaster>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Bread>\nDRIVER: <putdown Toaster>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <pickup Bread>\nCOMMANDER: please slice the lettuce on the island first <<Instruction>>\nDRIVER: <move>\nCOMMANDER: there is a knife right there by the lettuce <<InformationOnObjectDetails>>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce on the kitchen island <<Instruction>>\nDRIVER: <move>\nDRIVER: <pickup Bread>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: <pickup Knife>\nDRIVER: <slice Lettuce>\nDRIVER: <putdown CounterTop>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place a slice of lettuce <<Instruction>>\nCOMMANDER: on the plate <<Instruction>>\nDRIVER: <move>\nDRIVER: <putdown CounterTop>\nDRIVER: <move>\nDRIVER: is that the right plate because i see a dirty plate now? <<Confirm>>\nDRIVER: <pickup Lettuce>\nCOMMANDER: please place the lettuce slice on the plate <<Instruction>>\nDRIVER: <putdown CounterTop>\nDRIVER: its not that easy <<NotifyFailure>>\nDRIVER: is this the right plate? <<Confirm>>\nCOMMANDER: then try washing the other plate <<Instruction>>\nDRIVER: <pickup Lettuce>\nDRIVER: <move>\nDRIVER: <putdown Plate>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: if there is not enough room on the other plate <<InformationOther>>\nCOMMANDER: thank you <<FeedbackPositive>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    }
]