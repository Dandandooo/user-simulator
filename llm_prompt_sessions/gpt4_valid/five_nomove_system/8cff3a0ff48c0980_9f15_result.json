[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please could you water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: whats the first step <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is tomato please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ayo <<MiscOther>>\nCOMMANDER: We need to clean the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean all plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one in the cabinet above the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\n\nCOMMANDER response:",
        "answer": "RequestForInstruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi,what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Add coffee to a mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Mug is in the coffee maker already <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: should i rinse the mug or not? <<AlternateQuestions>>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: dont <<Deny>>\nDRIVER: <observe>\nCOMMANDER: its clean <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can i help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: ANUGGDG0JJ4PK <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: Make 2 sandwich toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: I mean 2 slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Slice the bread and toast it in toaster <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife is on the shelf above microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: i can see all that stuff' <<Affirm>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Plate in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: Hi how can I Help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: prepare a coffie in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any Sofa.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations>>\nCOMMANDER: put the remote controls on the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the dustbin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "RequestForInstruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: first step? <<RequestForInstruction>>\nCOMMANDER: Put the lettuce in any cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the lettuce? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It is to the right of the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <putdown Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello. How are we beginning? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are going to boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the potato located? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: The potato is infront of you ontop of the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I have it. <<Acknowledge>>\nCOMMANDER: Great <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: what  shall I do today? <<RequestForInstruction>>\nCOMMANDER: please put all the newspapers onto the table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one on the white shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: onto which table? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: get the two newspapers on the shelves and place them close to this one on the black table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please serve one slice of lettuce on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what shoud I do <<RequestForInstruction>>\nCOMMANDER: take the bread from the table behind you <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: behind <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER: First we need a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: Now what? <<RequestMore>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: Let's make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Under coffee table, on stool there is knife <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: grab the knife first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi, Whats is the task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: First, slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Bread is in the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, please make a cup of coffee <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: Where can I find a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today we need to make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: you need to slice lettuce first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you clean the pot? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help with? <<RequestForInstruction>>\nCOMMANDER: Hi! You need to water the plant, please. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: lets make sandwih <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok. What should I get first? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where can I find a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Mug in any Cabinet.\nCOMMANDER: Can you place a mug in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi how can I help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a salad, with one slice of lettuce and two slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all laptops on any bed. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hi...We're gonna clean a cup <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 2 remotes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: put in a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: 2 in cream sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: on tne long sofa? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: yes <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: 2 remotes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Please prepare coffee in a clean mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The mug is located in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Vase>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Please slice the potato located beside the stove. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is a knife in the black trash can <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: how many slices <<RequestOtherInfo>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Please clean all the tables. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: That would be 3 in total. <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi, we will be making a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: please slice lettuce and tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Task? <<RequestForInstruction>>\nCOMMANDER: boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab a potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is on the middle table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: 2 slices tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is in the cabinet right above the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: I need the newspaper to be placed on a single table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: i'd like 2 slices of toast to start please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: you can put them on a clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put the remote control that is on the table on a chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please fill coffee in mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Mug is in coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Plate on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Fork in any Drawer.\nCOMMANDER: Tak is to put all forks on a drawer <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the forks? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to rinse the cloth with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: It is between the sinks <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Clean all the Mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: next to you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: turn around' <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: slown down and follow my direction <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations>>\nCOMMANDER: Hello please put 2 slices of toast on clean plate to begin <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: What can I help you with? <<RequestForInstruction>>\nCOMMANDER: Hi, can you please put Newspaper on the Coffee Table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Bowl in any Sink.\nCOMMANDER: <observe>\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what should I do first? <<RequestForInstruction>>\nCOMMANDER: The plant by the sink needs to be watered <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER: Get the mug from the coffee machine and fill it with water from the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: or any container you can find <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: is it full? <<AlternateQuestions>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spoon in any Sink.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: could you please collect all the spoons and put them into the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: two are on the small table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: and one should be on the smaller trolley beside that table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hello. We need to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will need a knife. It is showing that the knife is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what do I need to slice? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: please fill the container in the sink with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hello. We need to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will need a knife. It is showing that the knife is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what do I need to slice? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Lettuce, Tomato, and Potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: First get the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Put all Bread on any DiningTable.\nCOMMANDER: can you put the bread on the dining table please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: prepare coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is in the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please can you make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cup is the the right unit under the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cup in any Sink.\nCOMMANDER: please can you put all cups in the sink, thank you <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: make a cup of coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: where is mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: straught back <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: straight <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: make a 360 then stop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: clean the tableware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what pieces? <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: put all remotecontrols on side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: We need to serve 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: knife is in sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: behind bread <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: First, slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Bread is on one of the chairs <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello what is the task today <<Greetings/Salutations>>\nCOMMANDER: Would you please water the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what might i water it wih <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: You can use the mug in the sink <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: put the newspaper on the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is 3 <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: there is one on the wall shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the newspaper <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: please make a slice of tomato using a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and place it in a clean bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can i find a tomato\\ <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please put the three pillows onto the armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hii what shall i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: last one is in the cabinet unter the two <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CD on any Furniture.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do tpday? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: today* <<RequestForInstruction>>\nCOMMANDER: Please place CD on a furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: How many CDs? <<RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Tablewares.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: hi, please put all pillows on any arm chair <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: there are three pillows <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: two of them are on top of the dresser <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi...please boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: where is pot? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: You need to place all the tomatoes into one cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a tomato in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: which cabinet <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It doesn't state which one. <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: found a cup of water in sink <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all RemoteControl in any Box.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall i do today? <<RequestForInstruction>>\nCOMMANDER: put watches on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please cook a potato in the microwave <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <putdown Microwave>\nCOMMANDER: <observe>\nDRIVER: <close Microwave>\nCOMMANDER: <observe>\nDRIVER: <toggle on Microwave>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Today we need to slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi...waht can i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What can I do first? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab a clean mug and make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is on side stool <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: How can I help you today? <<RequestForInstruction>>\nCOMMANDER: clean plate in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: I can't seem to find a plate in the sink <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: Put watches on one sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where are the watches <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: One watch is on table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: Watch is on plate <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what do you need? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. <<Acknowledge>>\nCOMMANDER: Bread is inside the fridfge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: pls slice the tomato by the toaster <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife is near the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Stool>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: lets make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you make me a coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can i do for you? <<RequestForInstruction>>\nCOMMANDER: Firs, slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: The potato is inside the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what should I do ? <<RequestForInstruction>>\nCOMMANDER: Clean all the plates. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi, <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER: First, slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Bread is to the left of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean all mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: How many mugs are there? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What can I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab a container fill with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bowl? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Toast a slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of what <<RequestOtherInfo>>\nCOMMANDER: bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please slice a lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure where can I find a knife and the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: What should I do today <<RequestForInstruction>>\nCOMMANDER: today we will be washing plates. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: check the cupboard to the right of the dishwasher <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: like the cupboard near the white appliance. there's an egg and kettle on the counter over there too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: to the right of the appliance <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: on the other side of the dishwasher <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hello lets make coffee <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi,find bread and slice it <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: what next? <<RequestForInstruction>>\nCOMMANDER: then toast two slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: Our task is to serve one slice of tamato on a plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Check the fridge. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: The game is affoot! <<MiscOther>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Commander? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: What is my task <<RequestForInstruction>>\nCOMMANDER: Please slice the tomato on the table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The knife is on the table as well. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hey <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: cook 2 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is on chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where's the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: theres a potato in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what is task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please can you make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cup is the the right unit under the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hi first we need the lettuce on the kitchen table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Observe"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: How may I assist you today? <<RequestForInstruction>>\nCOMMANDER: im craving a salad, could you start by slicing some lettuce for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Absolutely! <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: task <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: all remote controls on the arm chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Do I need to move the remote? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER: only thr remote controls that are not on armchair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. We need to make a plate of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread needs to be sliced using a knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can I have a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, one slice? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER: yup <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread in any Cabinet.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put all remotes on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Certainly.  Can you direct me to one of the remotes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Clean the cloth. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ToiletPaper>\nCOMMANDER: It is in the tub. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please could you water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: Hello, clean a plate <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Can you please clean the plates for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a plate in the island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Ladle in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Put 2 ladles in the sink. One is in the cabinet above microwave. <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Ladle>\nCOMMANDER: <observe>\nDRIVER: is this one <<Confirm>>\nCOMMANDER: yes <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: The other one is to the right of the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: HI! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all ScrubBrush on any CounterTop.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: Today could you place all the remote controls onto any of the chairs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: i'd like 2 slices of toast to start please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: hiii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce in a Bowl.\nCOMMANDER: can you please slice a lettuce and place 3 pieces of it into a clean bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is a lettuce and a knife on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: and a bowl in a lower corner cupboard <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: put all Watch on one Tables <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the watch? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. We need to take 2 newspapers and place them on a single side table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Great! Where are the newspapers? <<FeedbackPositive,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is one to the right of the box on the stand <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: Or bookshelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I placed one <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER: We are putting tomato slices on a plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The tomato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok thanks <<Acknowledge>>\nCOMMANDER: The plate is on the island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: There is a knife on the chair at the far end of the island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: clean a dirty plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: please take the mug from the table and put it in the sink <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do I do? <<RequestForInstruction>>\nCOMMANDER: making coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab a mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is tyhe mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the counter next to you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: empty, and wash <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: should I wash the mug <<Confirm>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pen on any Bed.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: what is the task to be completed? <<RequestForInstruction>>\nCOMMANDER: you need to put all pens on the bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the pen is on the top of the slelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: left to bed <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pen>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any SideTable.\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: put all watches on any side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER: clean the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the island next to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: First, get a clean mug and prepare coffee\\ <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I assist with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what do require? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Hi. Could you serve 1 slice of tomato in a bowl? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course i can do that <<Acknowledge>>\nCOMMANDER: There is aknife to the left of the coffee maker. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: single task <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all ScrubBrush on any CounterTop.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: put all the scrub brushes on the counter top <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find them? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: one is on top of the toilet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: there is only a cloths <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: I put it on the counter top <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: how can i help you today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: I would like you to make breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first you should make coffee in a clean coffee mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi may I have the directions please <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: anyone there? <<MiscOther>>\nCOMMANDER: You need to find the knife on the counter. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER: Okay, now get to the bread. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The bread is on a stool near the counter. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please slice the tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: <observe>\nDRIVER: how may i assist you <<RequestForInstruction>>\nCOMMANDER: Hi, so we're putting all the forks in the sink <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: there are 4 forks total <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok i get right on that <<Acknowledge,Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: could you tell me where i can find the first fork? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the first is located in the cabinet above the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: We need to prepare coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Great how/where do we start <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: clean all dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: how many? <<RequestOtherInfo>>\nCOMMANDER: cabinet next to the oven on the right side <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please clean all of the drinkwares for me. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: good one. What can I do <<Acknowledge,RequestForInstruction>>\nCOMMANDER: The first one is on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: it is a mug <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I get the first one <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<RequestForInstruction>>\nCOMMANDER: please boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pan>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: where can i find a pot to fill with water <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: hi..put all remotes on one coffe table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: pick up the coffee mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: make coffe? <<Confirm>>\nCOMMANDER: walk to the sink and wash it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its not dirty <<InformationOther>>\nCOMMANDER: wash the cup first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Sink.\nCOMMANDER: <observe>\nDRIVER: What can I help with? <<RequestForInstruction>>\nCOMMANDER: please put all the spatulas in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one should be in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato on the wall rack <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife in the cabinet on the left above the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: grab the tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today we are preparing coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a mug in the cupboard above the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Object is too far <<NotifyFailure>>\nCOMMANDER: There is another one on the shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Which shelf? <<RequestOtherInfo>>\nCOMMANDER: The bookshelf on the far end of the room <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: could you water the plant? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: all set! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife on the wall rack <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: to your right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestMore>>\nCOMMANDER: bread in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi, serve 1 slice of Tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: where can I find the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The plate is on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Today we are going to prepare breakfast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First prepare coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: the mug is on the table next tot he fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: By the spatula. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hi what should I do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hey <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today we are preparing coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: could you please put the alarm clocks onto the bed for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER: <observe>\nDRIVER: are there any more? <<Confirm>>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spoon in any Sink.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: could you please collect all the spoons and put them into the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: two are on the small table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can i serve you today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: hi what can I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: i'd like a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in the fride <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like you to boil a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: What would you like me to do? <<RequestForInstruction>>\nCOMMANDER: clean the plate that is on the table <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Kindly wait a minute <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi please cook up 3 slices of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: and put them in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Pan>\nCOMMANDER: <observe>\nDRIVER: <putdown StoveBurner>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any TVStand.\nCOMMANDER: <observe>\nDRIVER: Hey, what I am I doing tonight <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: Hello, clean a plate <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you make me a slice of toast please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: found it <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Apple in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please wash the cup in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: lets make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: knife] <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we are making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: there are 2 plates that needs to be clean <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: one in the top unit by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Potato in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please can you put the potatoes in any cabinet? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one is behind the tap on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Spoon in one Drawer.\nCOMMANDER: <observe>\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nCOMMANDER: find spoon on book shelf next to teapot <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: Got the spoon. <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SmallHandheldObjects on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: 2 handheld items on the coffee table infront of sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: 2 remotes on the chairs of the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: Lets microwave a potato to start with. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please wtaetr the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: water* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello, what task can I help with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: serve one slice of totatoe in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where am I find the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: upper cupboard above the toaster to the right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: perfect thank you <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi whats the task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Spatula in any Sink.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER: we need to cut one slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello, what do you need today? <<RequestForInstruction>>\nCOMMANDER: i'd like 2 slices of cooked potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice a tomato and serve 2 slices in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: a tomato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Bowls.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hi. Please make a plate of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Only one slice is needed. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <putdown Floor>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hji <<Greetings/Salutations>>\nCOMMANDER: hi we have to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: task plz <<RequestForInstruction>>\nCOMMANDER: knife is by sink to right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: tomato is above microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi there! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task, please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today we are going to make a salad on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hi What can i do for you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we will be watering the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We're making a salad. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is lettuce under the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The knife is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: We need 2 slices of lettuce <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER: We are putting tomato slices on a plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The tomato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok thanks <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello id love you to make a slice of tomato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello, can you put the tissue boxes on the side tables <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: clean all cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is the task today <<RequestForInstruction>>\nCOMMANDER: one by the toilet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the clothes please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: read <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: What should I do today <<RequestForInstruction>>\nCOMMANDER: today we will be washing plates. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: check the cupboard to the right of the dishwasher <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: like the cupboard near the white appliance. there's an egg and kettle on the counter over there too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: to the right of the appliance <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: on the other side of the dishwasher <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: i'd like a sandwich please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: ?task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: we will be making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make one slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello! Today, we'll be cleaning the cloths in the bathroom. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should  i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do today <<RequestForInstruction>>\nCOMMANDER: Take some water in a container from the sink and pour into the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the container? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: lets make 2 slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: Hi. Could you prepare breakfast? First we need coffee in a clean mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: slice a bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you make me breakfast please, can you start by making me a coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: done! <<Acknowledge>>\nCOMMANDER: great! Can you now make me a slice of toast? <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. We need to take 2 newspapers and place them on a single side table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Great! Where are the newspapers? <<FeedbackPositive,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is one to the right of the box on the stand <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: Hi how are you? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Which task first? <<RequestForInstruction>>\nCOMMANDER: Okay, you have to clean all the drinkwares <<Acknowledge,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: which dish first? <<RequestForInstruction>>\nCOMMANDER: It just says to rinse drinkwares with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: I want a salad, one sliced lettuce and two tomato slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok where's the lettuce? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what should i do for today? <<RequestForInstruction>>\nCOMMANDER: slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is in the trash <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: how can I help? <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: sorry, Please make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER: Hello! Could you please make a salad? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: 1 slice of lettuce and 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <putdown StoveBurner>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: Make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife is beside the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: clean the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: whats the first step <<RequestForInstruction>>\nCOMMANDER: you need to boil the potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any Sofa.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Place the pillow on the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: It is a pink/red pillow <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the pillow? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Candle on any CoffeeTable.\nCOMMANDER: could you please put all the candles onto the coffee table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Candle>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: i left one in the cabinet below the TV <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Candle>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: are there any more? <<RequestMore>>\nCOMMANDER: yes <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find them? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What is my task please? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: We need to make a salad. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: fist we have to slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce is on the shelf next to the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Clean all the Cups.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: First Task? <<RequestForInstruction>>\nCOMMANDER: please get the potato in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: You need to prepare breakfast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, you need to make coffee. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: prepare the coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: ?task <<RequestForInstruction>>\nCOMMANDER: prepare coffee in the clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: please clean the plate in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: can you serve 3 slices of lettuce on a plate? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Acknowledge the other's utterance"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please clean all of the drinkwares for me. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: good one. What can I do <<Acknowledge,RequestForInstruction>>\nCOMMANDER: The first one is on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all Mug in any Cabinet.\nCOMMANDER: Can you place a mug in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the mug should be on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: in the corner <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: Today we need to clean two mugs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: where are the mugs <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: put pepper shakers in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first shaker in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: are you there? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: follow my diections <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi there can you put my 2 arlam clocks on my bed please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes I will <<Affirm,Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there is one next to my laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: the other is on the drawer next to that <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello, can you make a cup of coffee? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: Cook 1 slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: HI! I need you to clean the mugs. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The first one is on the table next to the apple. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hello how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: can you make a plate of toast? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today we will be watering the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay wheres the water can <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: check under toaster <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in cupboard <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: cant see it <<NotifyFailure>>\nCOMMANDER: hmm <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hello lets start with making a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: Sliced the tomato. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: What is next? <<RequestForInstruction>>\nCOMMANDER: the knife is on the brown counter near the green door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: clean a plte <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please place all newpapers onto one single bit of furniture. The first newspaper can be found on the dining room table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice 2 lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: I need coffee in a clean mug and a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure thing, i'll make coffee first <<Acknowledge,InformationOther>>\nCOMMANDER: <observe>\nDRIVER: where is the coffee mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: also all items need to be on the countertop <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please can you cook 2 slices of potato and serve them on a clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do today? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, i see a container with water <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: it's dirty, can i still use it? <<Confirm>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: yes I believe so. <<Affirm>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we are making a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. Where is the plate at? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The plate is on top of the table in the middle of the room <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The plate is infront of you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Drawer.\nCOMMANDER: Tak is to put all forks on a drawer <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the forks? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: First fork is on the low cabinet on the left of the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <putdown Drawer>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: clean all bowls <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: First Task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Cook 1 slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: Potato is on shelf beside  fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: Cook it in oven <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: hello please rinse the plate that is on the sink <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup WineBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can i help you today <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: You need to place all the pepper shakers into a single cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is one on a black stool <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the pepper shakers please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how may i assist you today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: prepare coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hello task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: wash cloth <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <putdown Toilet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: we need to get a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: look in the pot beside the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi, you need to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: first make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Kettle on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: put watch on a single furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is watch? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: found one <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: in a cabinet next to sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi, what can i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: remote controls need to be put onto a single chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: two remotes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the remotes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what's first? <<RequestForInstruction>>\nCOMMANDER: clean the dirty plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on any Furniture.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: what's first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: slice the bread using a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: help me find the knifre <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: is there a cup? <<Confirm>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today we will be watering the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay wheres the water can <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Today you should clean two plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sorry froze <<OtherInterfaceComment>>\nCOMMANDER: There are plates on the counter where the sink is <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: Do you see the plates? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER: One plate next to the bread <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: We will prepare breakfast. Please make 2 cups of coffee in clean mugs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What is the first task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hii <<Greetings/Salutations>>\nCOMMANDER: hi please clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: please make two slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Bread is on the table. Please slice both loaves an take the end piece and toast it <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what is task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: i'd like 2 slices of toast to start please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: you can put them on a clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CreditCard on any Bed.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: put creditcards on bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: thank you <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to make a salad with one slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and one slice cooked potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is on the stool beside the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: the knife is next to the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: and the plate is next to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to water my plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: you can use the water from the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: slice bread you mean <<RequestOtherInfo>>\nCOMMANDER: 1st a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: turn left top drawer <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all Candle on one Tables.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup KeyChain>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: my task is which <<RequestForInstruction>>\nCOMMANDER: clean cuos <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cups <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: in the cabinet under the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: cup not mug <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the other cup <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hello. <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: pillows need to be put onto a armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is the pillow <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please could you prepare a coffee in a clean mug for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: The task is to boil the potato by cooking it in water. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. Where is the potato please <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The potatoe isin what looks like a pan on the same table as the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: right next to where you started <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: it's a white table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: HI! Let's go ahead and prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, prepare coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: can i use the green cup by the stove? <<RequestForInstruction>>\nCOMMANDER: yes that should work <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We are going to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Head to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you cook two potato slices and serve them in a bowl for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where can i find the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: I'd like breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whats do you need? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi, What is the task in hand <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello today we are placing all remote controls on one table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the table? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: How many remotes? <<RequestOtherInfo>>\nCOMMANDER: 4 remotes <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: I could see all 4 remotes <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: Please confirm the place to place these <<RequestOtherInfo>>\nCOMMANDER: Two remotes are on the single at the window <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I help you today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: grab mug off the counter <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: First task <<RequestForInstruction>>\nCOMMANDER: Hello, slice the potato and cook three slices <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Potato is on the brown shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: You can cook it in the microwave first then slice it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: I would like you to cook five slices of potato and serve them on a plate please/ <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where's the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: lets make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: knife] <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: hi..put all remotes on one coffe table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. <<Acknowledge>>\nCOMMANDER: Bread is inside the fridfge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: whats the first task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello, prepare coffee in a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Mug is on the round table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hello how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you please make a plate of toast? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Task plas <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: pls <<MiscOther>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I help you today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: make two slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are bread and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: bread is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: inside the dustbin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: h <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: i <<Greetings/Salutations>>\nCOMMANDER: we need to prepare coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in a clean mug <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: My task? <<RequestForInstruction>>\nCOMMANDER: there is a dirty mug <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: whats next <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: slice a tomato thrice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find tomato and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: inside the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: just need you to water my plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure,  i see the plant <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: <observe>\nDRIVER: hi, task plz <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello, task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: place remote controls on single chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER: <observe>\nDRIVER: <pickup Laptop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: Hello. Put the pillow on to the arm chair <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: pillow is on the brown desk <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the pillow <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what first <<RequestForInstruction>>\nCOMMANDER: Find mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a sandwhich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, what would you like on it? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER: just lettuce <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: today lets make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: how may i be of service <<RequestForInstruction>>\nCOMMANDER: bread is next to toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: you can find the knife in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: What should we do today <<RequestForInstruction>>\nCOMMANDER: place the newspapers onto a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one on the couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: Sorry, its taking long to load commands guess its a glitch <<NotifyFailure,OtherInterfaceComment>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Could you boil a potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup WineBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup WineBottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER: We need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Knife is in sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: Toast 2 slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Tables.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what are our goals for today <<RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please place remote controls on any table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: can you tell me where they are? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: check in the cupboard underneath the lamp <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a tomato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi. What is the first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: First, slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Tomato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: The task? <<RequestForInstruction>>\nCOMMANDER: The RemoteControl needs to be put onto a single Sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: but all remote controls on one sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the remotes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Statue>\nCOMMANDER: there is one inside de cabinet next to the plant <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pen on any Bed.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: make a cup of coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: where is mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: straught back <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: OK <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: Lettuce sliced. Next? <<Acknowledge,RequestForInstruction>>\nCOMMANDER: Cook potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You can microwave it then slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl in one Box.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Cok a potato on the pan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Cook* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It's already on the pan, just turn on the stove <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Pan>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: <observe>\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: get the remote control ftom the table and put onto a chair <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: computer table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown Sofa>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: ho can I help <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: how\" <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: please make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Shelf>\nCOMMANDER: <observe>\nDRIVER: can you help me find a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: Clean cups and glasses <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can i assist you today with your work? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: make a sandwoich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hello, what is task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: What I can I do for you? <<RequestForInstruction>>\nCOMMANDER: Hi. Please cook a slice of potato and serve on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what first <<RequestForInstruction>>\nCOMMANDER: Find mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: mug is beside toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets make 2 coffees first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: We need to put a cloth in the bathtub. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The cloth is white and on the counter to the left of the shower. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Move to your left. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The cloth is on the table in front of you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: Pick it up <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Can you pick it up? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Go back to where you were <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all CD on any Furniture.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do tpday? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: today* <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: lets slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is in the sink' <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is left to sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello! What is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: today we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok. <<Acknowledge>>\nCOMMANDER: the bread is in the green bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: next to the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: can you please make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: a mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: all good, thanks! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nRequestForInstruction\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: first grab a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Alright <<Acknowledge>>\nCOMMANDER: trun left and go straight, its on the small stool <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: I have the knife? <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: how can i help out today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: we need to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: please get any cup <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice 2 lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 1 slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cook 1 slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: Hows that? <<RequestMore>>\nCOMMANDER: Perfect <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello! What should I do today? <<RequestForInstruction>>\nCOMMANDER: today you need to slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: Make a slice toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice using a kniofe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: clean the dirty mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is beside the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: left side <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: rinse the mug in the basin <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: Hello.  Please make a cup of coffee. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: cup?? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Mug is in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pencil in any Safe.\nCOMMANDER: <observe>\nDRIVER: what task can i do for you? <<RequestForInstruction>>\nCOMMANDER: put all the pencil in any safe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: ill look around <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: for a pencil <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pencil>\nCOMMANDER: <observe>\nDRIVER: i have one <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: today we need to clean the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets try the table <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you make me a sandwich please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean all plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one in the cabinet above the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: right side <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, what is my direction? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i need you to put my 2 forks onto the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on any Sofa.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, please serve 2 slices of tomato onto a clean plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a knife ontop of the small table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: tomato <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: PLate <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all SaltShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: Hello. All of the salt shakers need to be places into one cabinet <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: the first one is next to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: please make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: hi' <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: Let <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread next to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: knife is in the cabinet below bread <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: Hi what should I do today? <<RequestForInstruction>>\nCOMMANDER: wash the cup <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what work can i help with today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: lets make breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Please slice the bread located at the sink. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nCOMMANDER: <observe>\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nCOMMANDER: grab the tissuebox and put it on the side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: tissue box is on the dinner table next to the cardboard box <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: <observe>\nDRIVER: which table? the one with the other tissue box? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: put it underneath the tv <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: go get a potatoe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: out the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: find a pot and boil the potatoe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi, can you please make coffee <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is a mug in the cabinet under the microwave, you might have to rinse it <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: Slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What is my first task ) <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: on it <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: Hello, your task is to serve 1 slice of tomato on a clean plate please. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: Tomato are by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: there is a plate in the fridge that needs to be cleaned. <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: toast two slices of bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I could see bread <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: Can you help me find knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: knife is on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: Done. <<Acknowledge>>\nCOMMANDER: cut 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: tomato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: knife in the cabinet under the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Hi. Please cook one slice of potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: where is potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: In the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CD on any Furniture.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do tpday? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: today* <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: whats my task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: coook 5 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please water the plan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: plant* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What should  I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, its a long one <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: rinse the dirty mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like a slice of tomato in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: you will have to clean the bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do for you today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i want some breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: sure thing <<Acknowledge>>\nCOMMANDER: you can start with some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: is there a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nAffirm\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: get the mug and make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Candle on any Tables.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Put the candle on a table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is candle <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: check on the couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Candle>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hello, first slice the bread <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: Knife is by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hell0 <<Greetings/Salutations>>\nCOMMANDER: Prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is task? <<RequestForInstruction>>\nCOMMANDER: put the newspaper on one funiture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sanwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi, what shall i do today. <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: first lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: we need 2 slices of bread toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find bread <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please cook 2 slices of potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi what would you like me to do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall we do today? <<RequestForInstruction>>\nCOMMANDER: make 2 sliceses of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potatao is inside the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: we need to locate watches <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: What is my task please? <<RequestForInstruction>>\nCOMMANDER: and put them min a box please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: okay I have one <<Acknowledge>>\nCOMMANDER: box is on the soda <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Today you will make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where is the lettuce <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The lettuce is to the right of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The knife is inside the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: There is also a tomato inn the sink. Pick the tomato <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: please cook two slices of potato and serve on a clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello! What may I do for you today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today you need to slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Will do! <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<RequestForInstruction>>\nCOMMANDER: i need you to slice some lettuce on a plate for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there should be a plate in the cupboard below the  lettuce <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please put a potato in the microwave <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown Chair>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: one in sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: wash the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: We need to put the alarm clock on the bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find the alarm clock <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There will be on next to the lamp on the beside <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER: grab mug off the counter <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fruit on any DiningTable.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: The bread is beside the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<Instruction>>\nCOMMANDER: we shall clean all the mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make salad today <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: get coffe mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: rinse in sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: correct <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: empty sink first <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Acknowledge"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: task <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: all remote controls on the arm chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Do I need to move the remote? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER: only thr remote controls that are not on armchair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER: its on the white table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi please boil poato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: please make me some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where is the mug? <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: there is a mug in the garbage <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: put remote on furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown Chair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what can I do for you? <<RequestForInstruction>>\nCOMMANDER: The plant needs to be watered please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok is there a watering can? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: or can I just use a cup? <<AlternateQuestions>>\nCOMMANDER: any container is fine <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on any SideTable.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi,find bread and slice it <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: what next? <<RequestForInstruction>>\nCOMMANDER: then toast two slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: step one is to prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the mug is on the A-frame shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hello. How can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Could you help me clean all the plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The first plate is in the cabinet to the right of the oven, above the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: please rinse the plate with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Apple in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: you need to put all apples in one cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Cook 1 slice of Potato and serve on a Plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife is in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: plates on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: potato near mictowave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: or qherever <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Today could you make me a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First could you slice two slices of bread which is next to the sink and toast them <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is a knife also by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER: can you put teh egg in a cabinet please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all newspapers on a table or chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you serve a slice of tomato on a plate? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: lets make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: Done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: find the tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi, What is the task in hand <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: First there are two mugs of coffee to be made, but one is dirty and has to be rinsed with water first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: one mug is in the cabinet above the fridge on the right hand side <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread is left side of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is in wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: slice it and toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hi! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pencil on any Bed.\nCOMMANDER: <observe>\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: go the desk <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pencil>\nCOMMANDER: by the phones <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: and in the trash bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Drawer.\nCOMMANDER: Tak is to put all forks on a drawer <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the forks? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: First fork is on the low cabinet on the left of the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Hey can you make a coffee for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: thank you <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hello please cook 1 slice potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Potato in garbage <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make an slice of potato and cook it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Egg>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hello! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please place all newpapers onto one single bit of furniture. The first newspaper can be found on the dining room table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: the last one is on a chair near the lamp <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: which piece of furniture <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <putdown Sofa>\nCOMMANDER: <observe>\nDRIVER: is that okay? <<Confirm>>\nCOMMANDER: in the corner of the room is a lamp on a silver table. The last newspaper is on the char next to it <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: lets make breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: we need a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Ready for task directions please <<RequestForInstruction>>\nCOMMANDER: Hi. First get the tomato from the sink and slice it. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The sink is behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The knife is on the round kitchen table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: There is a tomato on the table as well ) <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The table is to you right in the far right corner <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Spoon in any Drawer.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nCOMMANDER: <observe>\nDRIVER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a potato and cook 2 slices and serve them to me on a plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is a potato in the mirowave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find a knife? <<RequestForInstruction>>\nCOMMANDER: there should be a knife right in the cupboard right of the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: We need to put all remotes on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: It says that the chair is next to the white table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can i help you today <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: You need to place all the pepper shakers into a single cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is one on a black stool <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the pepper shakers please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: wht is my task today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: clean ll plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hi please microwave a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: also in microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi...waht can i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello. We need to boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Please direct me commander <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cup in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: all set! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: 2 coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: mug is in oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Microwave>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: please slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the potato is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: What should we do today <<RequestForInstruction>>\nCOMMANDER: place the newspapers onto a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one on the couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: Sorry, its taking long to load commands guess its a glitch <<NotifyFailure,OtherInterfaceComment>>\nCOMMANDER: place it on the white table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: <observe>\nDRIVER: Done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare cofffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mugs in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: Done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: Done? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how may i serve you today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: ur commader what shall we do tody <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: no <<Deny>>\nCOMMANDER: <observe>\nDRIVER: I'm the driver <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: may be a glitch <<OtherInterfaceComment>>\nCOMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go find the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is right to the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: check in cupboad <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: the cup is down to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: check in the wardrobe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: move to left <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER: we shall make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: go and cut the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce are left to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: potato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: cook the potato slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: put all the components on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: u can find plate in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: put lettuce and potato on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Pan>\nCOMMANDER: <observe>\nDRIVER: <toggle on StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Acknowledge",
        "response": "OBSERVE"
    }
]