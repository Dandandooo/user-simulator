[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hi. We need to grab the spatula behind you on the counter to the right of the fridge first <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Hello? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Are you still there? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: mug is on the centre cabinet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: fill it with coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: My computer screen froze. Apologies for the wait. <<OtherInterfaceComment>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: no problem <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: clean all mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mug on the chair by the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: ?task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\n\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, what is my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to put 2 forks onto the dining table please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: make breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: prepare toast on the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what's first? <<RequestForInstruction>>\nCOMMANDER: clean the dirty plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what can I do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The plant needs to be watered please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hii <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do today <<RequestForInstruction>>\nCOMMANDER: lets make sandwich today <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab the knife and slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what can i do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hello, please boil a potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello...What is our first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put 2 remotes onto any single chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one is infront of tv <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: OK..On it. <<Acknowledge,Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: HI please boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi how can I help you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: <observe>\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: Please place the remote on a single side table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the remote please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The remote in located in the lower right cabinet of the dresser <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Cook 1 slice of Potato and serve on a Plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Today we will water the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: I can see plant <<InformationOther>>\nCOMMANDER: <observe>\nDRIVER: How shall I carry water? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup CellPhone>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hello. what can i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: We need to clean the dirty plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok. <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: find a newspaper <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: on the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hello what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: First, slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Lettuce is inside the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like a slice of tomato in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: put pepper shakers in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first shaker in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: are you there? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice tomatoes first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello! What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hi there. <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Put all newpapers on one armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: place the watch inside the red box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We need to prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Wat's first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can serve me 2 slices of tomoatoes ona  plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: I need help <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I would like a slice of toast please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: yo <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: clean the drinkwares <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fruit in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i left my fruit out, could you put them in the fridge for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We need to boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What would I be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: there is a potato in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nRequestForInstruction\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I need 3 slices of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: clean mug from brown side shelf and prepare coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put all laptop on any bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you...On it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please put remote by tv on the chair with the others <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: pillows need to be put onto a armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is the pillow <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: first pillow is below the table at the centre <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: 2nd pillow is beside the TV <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: arm chair is the single seats beside the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi,what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Add coffee to a mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Mug is in the coffee maker already <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: should i rinse the mug or not? <<AlternateQuestions>>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:\nDeny\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd like a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whats in it? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: 2 slices of lettuce between slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok, where is the knife? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: rinse the mug on the coffee maker <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: then fill the mug with coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What task can I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What is my first task today? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: is this the same one? <<OtherInterfaceComment>>\nDRIVER: <observe>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: can you ut the fork in the sink for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: on it <<Acknowledge>>\nCOMMANDER: it is in the top drawer behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make salad today <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the first step? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER: boil a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: do you see the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Book on any Furniture.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: I need you to put the remotes on one of the tables <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok where's the remote? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: could yu rinse a cloth for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I'll get right to it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mighty kind of you <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: Put all remote controls on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: does it state which table; coffee or side? There's already one on the coffee table, which is why I ask. <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the one on the shelf to the right of the television <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: we need to slice bread first please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: lets grab a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the bread is there on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please put a potato in the microwave <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown Chair>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what should i do for today? <<RequestForInstruction>>\nCOMMANDER: slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is in the trash <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: prepare coffee in clean mug <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you put 2 forks on the dining table for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course <<Acknowledge>>\nCOMMANDER: thres a fork in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: and the other is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: 1 slice of lettuce <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: it is on the cabinet right to the basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi what do i do today/ <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what task today <<RequestForInstruction>>\nCOMMANDER: clean the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: plate is on white dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hi. Could you boil a potato? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hi. Could you make a plate of toast? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Today we are going to prepare breakfast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First prepare coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: could you please boil a potato for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hi there! Could you cook five slices of potato for me and put them on a clean plate? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure! <<Acknowledge>>\nCOMMANDER: great! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Candle on any CoffeeTable.\nCOMMANDER: could you please put all the candles onto the coffee table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Candle>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please put the two newspapers from the self onto a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hello! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Prepare coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Mug location? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Mug is in bowl on table left of coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: we to slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the tomato is on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: the knife is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: this is a test <<OtherInterfaceComment>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: yes hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: I would like you to boil a potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok do you know where the potato is? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I will help you find it. <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello...What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: It's on one of the brown chairs <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will make a toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, I am here! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: What is my first task? <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: The plant needs to be watered. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cut 2 slices of lettuce please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce is by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What do you need me to do? <<RequestForInstruction>>\nCOMMANDER: Hi! Clean the dirty mug. Rinse it with water <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: how can i help out today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: can i help? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: put all tissue box on one side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please can you make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hello task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: please clean the plate in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd lke my plant watered <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pencil on any Bed.\nCOMMANDER: <observe>\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: The major task is clean all the mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Cup in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: there is a cup in the fridge. please place it in any cabinet <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi what should I do today> <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: Hi. Could you prepare breakfast? First we need coffee in a clean mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: cook 1 slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of lettuce on a plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: checking cabinet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: under coffee machine <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spoon in any Sink.\nCOMMANDER: <observe>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER: we shall put all the spoons in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is a spoon? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: We need to serve 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is in sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: plate is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello what should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: boil the potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: you have to put it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cup in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put all cups in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: grab a knife and slicve the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: both bread and knife are in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: There are 2 remotes <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER response:",
        "answer": "Acknowledge",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: Clean all the Cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in the tub <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nMiscOther\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi,find bread and slice it <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: what next? <<RequestForInstruction>>\nCOMMANDER: then toast two slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Put all Bread in any Fridge.\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bread in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I'm looking for you <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: Please look in the cabinet to the left of the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: The bread is in the fridge <<InformationOnObjectDetails>>\nCOMMANDER: please look above the fridge for the next loaf <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <putdown Fridge>\nCOMMANDER: Thank you. <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    }
]