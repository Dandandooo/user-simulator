[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please clean a mug and make coffee. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Please boil the potato located by the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\n\nCOMMANDER response:",
        "answer": "Greetings/Salutations",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Sink.\nCOMMANDER: <observe>\nDRIVER: What can I help with? <<RequestForInstruction>>\nCOMMANDER: please put all the spatulas in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one should be in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: rinse the dirty cup on the coffee maker  and make some new coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i need some salt shakers set up on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: one should be next to the coffee machine <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pen on any Desk.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi We need to place all pens on the desk <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: OK. <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: wht is my tsk today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: You tell me the task. <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: I am the DRIVER <<MiscOther>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: make 2 slices lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce is inside the cabinet above the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Today we need to slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do today <<RequestForInstruction>>\nCOMMANDER: The potato is to the left of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we shall clean the mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Please prepare coffee in a clean mug. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The mug is located in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Vase>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can I have some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: do you see a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Can you make me a salad? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get the peppershaker from the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the plant on the countertop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi, I have a neat task for you today. I'd like all my plates cleaned please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: the first plate can be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: great ill get started <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: put mugs in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: how may i help <<RequestForInstruction>>\nCOMMANDER: please fill container with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to water the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: clean all plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: how many? <<RequestOtherInfo>>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Slice a tomato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please boil me a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There should be one in the bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: and a pot on the island counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task?m <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Please put coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Potato in any Cabinet.\nCOMMANDER: Hi, can you put potato into cabinet? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: please make some toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in the corner cabinet near tht toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is on the shelves <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi please cook up 3 slices of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: and put them in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pan>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cook 2 slices od potatoes, please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Book on any Desk.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello. Please grab the book on the armchair and place it on the desk. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The arm chair is behind you to the right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Book>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: How can I help you today? <<RequestForInstruction>>\nCOMMANDER: clean plate in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: I can't seem to find a plate in the sink <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: you might have to look in the cupboards <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<RequestForInstruction>>\nCOMMANDER: Hi can you make me a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What am I supposed to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello there! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do ? <<RequestForInstruction>>\nCOMMANDER: today we're going to boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on any Sofa.\nCOMMANDER: Can you place all newspapers on a sofa for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all TissueBox on one Tables.\nCOMMANDER: <observe>\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please place a tissue box on a table. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: It is on the white shelf. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what shall I   be doing today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi lets clean a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mug is below coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean it please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: The game is affoot! <<MiscOther>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Commander? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: What is my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: cabinet on top of the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the bread is there <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Ready for task directions please <<RequestForInstruction>>\nCOMMANDER: Hi. First get the tomato from the sink and slice it. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pen on any Desk.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: Cook 1 slice of Potato and serve on a Plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: plates on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: HI! What should I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's get the bread out of the fridge next to you <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Clean all the Mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can I assist you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will cook two potato slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok. Where is the potato? <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The potato is on a plate next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi there. You will  need to rinse the dirty cloth with water. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do you need? <<RequestForInstruction>>\nCOMMANDER: I need you to prepare breakfast. I need coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and also a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what kind of salad? <<RequestForInstruction>>\nCOMMANDER: with one slice of tomato, lettuce and potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: perfect <<Acknowledge>>\nCOMMANDER: the potato needs to be cooked though <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is your mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What is my task please? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Today you will make one slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: my task today <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast. make a slice of toast. the bread needs to be sliced using a knife. The bread needs to be toasted. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need a potato first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi, Whats is the task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please put all the pepper shakers in a cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all TissueBox on any Tables.\nCOMMANDER: hello what should i do today <<Greetings/Salutations,RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello, you are the commander. Tell me what to do today <<Greetings/Salutations,MiscOther,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Silverware in any Sink.\nCOMMANDER: Today could you put all the silverware in a sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can i serve you <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task?> <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put all the credit cards on any furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thanks! <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: How many cards are there? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nCOMMANDER: <observe>\nDRIVER: hello what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd like all small hand held object placed on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok which objects specifically? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup KeyChain>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mug in the frigde <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. First we need to get the coffee mug from the fridge and make coffee. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fruit on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hello task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello. please serve one slice tomato in a bowl <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok. Where is the tomato? <<Acknowledge>>\nCOMMANDER: can i help you find anything? <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: one moment <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I see the tomato. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: What about a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: ok great <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<RequestForInstruction>>\nCOMMANDER: i need you to slice some lettuce on a plate for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there should be a plate in the cupboard below the  lettuce <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: there is a knife in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today we are preparing coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a mug in the cupboard above the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: we to collect remote controls <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: andn put them on 1 chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please could you water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Please slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whats my first task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: The potato is on the table beside the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER: We need 2 slices of bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put the newspaper on the sofa. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The newspaper is in the drawer on the coffee table. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Below the laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: O <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Box>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SmallHandheldObjects on one Sofa.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: clean the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: lets slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is in the sink' <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: Today we need to clean two mugs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where are the mugs <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: The first mug is between the toaster and the stove. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The second mug is by the coffee maker. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: ?task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: prepare coffee in the clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: Please clean the mug in the right cabinet above the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: First, you need to rinse the mug with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello, please direct me <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Find the mug and rinse it with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nMiscOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: I would like you to make a salad with one slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any Sofa.\nCOMMANDER: please can you put the pillow in the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the pillow? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: HI, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I need breakfast prepared. Start with coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, i see a mug on the chair <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Candle on one Tables.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup KeyChain>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER: please cook 3 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: once these have been cooked please serve them in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What can I help you with today? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: open cabinet closest to toilet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: open cabinet closest to toilet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: to your right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: turn back toward sinks <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: <observe>\nDRIVER: my job <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Clean two bowls <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where they at <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: One is on the center table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i need 4 forks put into the sink please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: grab mug and place in coffee maker <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: thats it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok where is the mug <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: nug is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare cofffe in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello, what do you need today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd like 2 slices of cooked potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: you can serve them in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: got it <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: can you ut the fork in the sink for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: on it <<Acknowledge>>\nCOMMANDER: it is in the top drawer behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: apologies you were facing the right way when i said that <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: HI! What should I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's get the bread out of the fridge next to you <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Ottoman.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all the newspapers on one ottoman <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: No coffee in it <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: check progress <<RequestForInstruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: Hello! Can you make a piece of toast please? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: boil potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is on the dinning table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: pot is on the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: first fill the pot with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I need you to clean all the plates please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Today you are preparing breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: Boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: make sald today...first slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: *salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok what's first <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tomato is the black bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets cook potato in microwave <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whats the task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: what shall we do today <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nRequestForInstruction\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put all the remotes on the dresser <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ij <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: ok* <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown Dresser>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Hi there! Can you make me a coffee in a clean mug? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: surely <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: do you see a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there's one by the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: first step? <<RequestForInstruction>>\nCOMMANDER: Put the lettuce in any cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the lettuce? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It is to the right of the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: first task? <<RequestForInstruction>>\nCOMMANDER: put ll newspaper on one dresser <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello what is my task today> <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take mug from coffeemaker <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Book on any Bed.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today you need to put all the books on bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the books <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: left to bed <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Book>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: Hello, please make a salad. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There is a knife on the table. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's to do? <<RequestForInstruction>>\nCOMMANDER: The RemoteControl needs to be put onto a single Tables <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: ITs on the couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: There are 3 tissue boxes that need to be put on a coffee table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is one on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Hello How are you <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi what are we doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nConfirm\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please make me a coffe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: Where can I find a mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how can I help today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nCOMMANDER: <observe>\nDRIVER: Hello! What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: i need you to serve 3 slices of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cookwares.\nCOMMANDER: <observe>\nDRIVER: wht can i do today <<RequestForInstruction>>\nCOMMANDER: clean all the cookwares <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: We are going to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Head to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: Take the lettuce out of the sink and place on the counter. <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Good! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: what is the task today please <<RequestForInstruction>>\nCOMMANDER: Put the remote on the single coffee table. The remote is on the couch. <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Greetings/Salutations"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hey how can I support? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: First Task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how may i help? <<RequestForInstruction>>\nCOMMANDER: Please cook 2 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course <<Acknowledge>>\nCOMMANDER: You should be able to find the potato on the right cabinet under the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bowl on any DiningTable.\nCOMMANDER: Can you put all bowls on any dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how ocan i help you? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: your task is to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: ill do that for you right now <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hi. Could you make a plate of toast? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Task? <<RequestForInstruction>>\nCOMMANDER: boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Ottoman.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Put all the newspapers on one ottoman <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Ottoman>\nCOMMANDER: <observe>\nDRIVER: <pickup Box>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sofa>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello! What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hi there. <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: make two slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are bread and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: Prepare coffee in a mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Bowl in any Sink.\nCOMMANDER: put all bowls in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello, what's my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread next to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you slice a potato and cook 2 slices and serve them to me on a plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Could you please cook 3 slices of potato and serve them on a plate for me? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Can you water the plant for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi what do you need today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: clean the coffee mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is inside the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do ya need? <<RequestForInstruction>>\nCOMMANDER: I would like some toast! <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hey can you cook me a potato please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi there. You will  need to rinse the dirty cloth with water. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open ShowerCurtain>\nCOMMANDER: <observe>\nDRIVER: <close ShowerCurtain>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I believe it is on the back of the toilet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: How can I help you today? <<RequestForInstruction>>\nCOMMANDER: Please clean a mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You can find one next to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SoapBottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I want you to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: What should be in the salad? <<RequestOtherInfo>>\nCOMMANDER: One slice of lettuce, one slice of tomato, and one slice of cooked potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Could you please boil a potato for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There should be one in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: wash the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please make a coffe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: clean all plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: first plate at the edge of the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: Today you should clean two plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sorry froze <<OtherInterfaceComment>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There are plates on the counter where the sink is <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Do you see the plates? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi \\ <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what  ingredients do I need <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: I would like some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure, where is the coffee mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hello! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Clean the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: mug next to the coffeemaker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: place mug in coffeemaker is the task <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like one slice of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What is my task please? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Today you will make one slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: find the mug on the table behind the wok <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: put all watches on sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Book on any Desk.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what to do <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: put the book on the bed onto a desk <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello! What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make 2 cups coffee plz <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I get for you? <<RequestForInstruction>>\nCOMMANDER: i'd like a coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: could you direct me to the mug please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on any Tables.\nCOMMANDER: please place the watch on the table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the watch is on the sofa chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Prepare coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Mug location? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Mug is in bowl on table left of coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello please boil potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: good day <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: put all watch on one sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay.  Can you direct me to the first watch? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can I do? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: hello.Please look for a knife? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: found it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: get a tomato and slice it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: take bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in th stand <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: make 2 slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread is in the cabinet under the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello, task please <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: today lets cook potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: I have potato, cook in microwave? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hi! We need to serve 1 slice of a tomato in a bowl, but we can start with just slicing the tomato with a knife <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: around the counter on a yellow chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: please boil a potato on teh stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is one in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can I have a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean all cups <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where are the cups? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: please put all forks in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: its in the cupboard to the left of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: Slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today you will cook two potato slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok. Where is the potato? <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The potato is on a plate next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! Please prepare a cup of coffee :) <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, please clean the mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Today you are preparing breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where should i start> <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please cook one slice of potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: put a remote in a single box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: remote on coffee table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Box>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto brown table next to tv <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: one is on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Remote locations, please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the other one is on the single chiar sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Hi. Could you make a plate of toast? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi! Let's go ahead and clean all the dishes. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: We're making a salad and starting with slicing the tomato with a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any Furniture.\nCOMMANDER: <observe>\nDRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: all watches <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in one place <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Can yo please boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There is a potato to the righto fthe sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Cook potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: please make two slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pencil on any Desk.\nCOMMANDER: <observe>\nDRIVER: Hello. May I have my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to put the pencil on the desk. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the pencil is on the chair. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pen>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Desk>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please water the plan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: please slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER: Today, we are watering the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hi. Please cook one slice of potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: where is potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, please serve 2 slices of tomato onto a clean plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a knife ontop of the small table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: find the mug on the table behind the wok <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: u are making a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what do I do first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hello. We need to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will need a knife. It is showing that the knife is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what do I need to slice? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: i need you to serve 3 slices of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Mug on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: There are two mugs that have to be placed on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Cloth in any Bathtub.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: HI! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please cook 1 slice of potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Potato is on the back table behind the lettuce and bread <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall i do today? <<RequestForInstruction>>\nCOMMANDER: put watches on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: they are on the couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can I have some coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nCOMMANDER: <observe>\nDRIVER: anyone there? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes sir <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: check the bin left of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: slice the tomato that is on the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: knife is on the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: can you please cook a slice of potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: a potato is in the cabinet on top of the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What can  I do today <<RequestForInstruction>>\nCOMMANDER: all laptops on same bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: HI! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please cook 3 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. Where is the potato located? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: Knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put all the remotes on one sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find remotes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one is on the black chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 4 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please serve 4 slices of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where can i find a plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do <<RequestForInstruction>>\nCOMMANDER: put the remote controls on the single arm chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 3 remotes <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Fork in any Cabinet.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Apple in one Cabinet.\nCOMMANDER: put apple into a single cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is in the wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<Confirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: we need to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: please make some toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in the corner cabinet near tht toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is on the shelves <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: We need to put pillows on armchairs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Please rinse the dirty mug with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: Put all Pillow on any Chairs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task today? <<RequestForInstruction>>\nCOMMANDER: First, slice the tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Tomato is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffe in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the mug is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: coffee is done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What task can I do? <<RequestForInstruction>>\nCOMMANDER: Today you will put all newspapers on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: One newspaper is next the laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: do you mean the dining chairs? <<Confirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Yes <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. First we need to get the coffee mug from the fridge and make coffee. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: <observe>\nDRIVER: what do you need today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i would like the remote put on the side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: is there only one remote? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please put all the pepper shakers in a cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: We will prepare breakfast. Please make 2 cups of coffee in clean mugs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can i find mugs <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: put all watches on sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one is on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hi...What's my first task. <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can i do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: we need to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: please get any cup <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Hello. Today I need a bowl of cooked potato slices. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread next to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: can i please have 1 slice of toast and one slice of tomato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where is the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what do i do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today you need to clean the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: plate is next to sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: rinse the plate with water in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello! What can I do for you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: bread is on the brown shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice the lettuce and tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: lettuce  is near the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Do you know where the knife is? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what should i do for today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: find a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one in cabinet to right of microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Could you cook a slice of potato and serve on a plate? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: No problem. <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Tomato in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: find a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hi, I would like you to prepare breakfast <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: can you make a coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a sandwich.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We are making a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Go to the kitchen table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the sale off of the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: Pickup the knife that is on that table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: You will cut the lettuce. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: Place a piece of lettuce on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: We need to cut the bread and toast two pieces. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread is located under the kitchen sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: The right cabinet under the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Under the kitchen sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Open the right side cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: Pickup the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice the bread with the knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: We need to toast two pieces in the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Toaster is to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Place that bread on the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can only do one bread piece at a time. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: Place that bread piece down. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Take the toasted bread to the plate. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Repeat the process <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Instruction"
    }
]