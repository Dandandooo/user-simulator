[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean mug and prepare coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can i serve you <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Lettuce in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please get the lettuce out of the microwave and place it in any cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <close Microwave>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\n\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "RequestForInstruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one Tables.\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: Place all watches on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There's a watch on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you prepare me a coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There should be a mug on the white table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce tomato and potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the knife is on the stool <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick pot in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: look in the cabinet above the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my first task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: 2 toasts please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: knife is beside stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one Dresser.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: tissue box in the table drawee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: <observe>\nDRIVER: <pickup KeyChain>\nCOMMANDER: <observe>\nDRIVER: <putdown Drawer>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Please clean a mug and make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: wheres the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: We need to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please fill the mug on the counter with coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: bring some water and pour it into the plants <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hello task plz <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: put all remote in one box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 2 total <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: one on the table behind the laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a sale <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: lettuce by the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hi first we need the lettuce on the kitchen table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: Hi, what is my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: ANUGGDG0JJ4PK <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: Make 2 sandwich toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can I help you? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what would you like? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: lets boil a potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should we do today <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug 2 times <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put newspaper onto single furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: newspaper is on the brown table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put all the newspapers on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Laptop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello how may i help you with <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is the water <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: get some vessel and fill it with water from the wash basin <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Please direct me commander <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: I need directions <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: lets make sandwih <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean the mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: Hello, you need to make a salad please. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a knife by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The lettuce is in the upper cabinet above the fridge on the right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: with what <<AlternateQuestions>>\nCOMMANDER: <observe>\nDRIVER: do i make asalad <<AlternateQuestions>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER: please cook 3 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in any Box.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please keep all the watches in box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are the watches <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: watch is on the brown table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: another one is on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please prepare a coffe in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Dishwares.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: our goal today is to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Egg in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: boil the potato on the black table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the first task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Apple>\nCOMMANDER: <observe>\nDRIVER: Where's tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: make a salad. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today?1 <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: We need to clean the cloth <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Cloth is right of sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: off the sink and place the cloth <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread is left side of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is in wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Boil a potato in water. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one Ottoman.\nCOMMANDER: <observe>\nDRIVER: Hello! What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean the plate in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: rinse with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: put the three alarm clocks on the bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER: i'd like my plant watered please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, what can i help with? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: I need you to water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Prepare coffee in clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Mug location? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: slice a tomato thrice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Can you help me find tomato and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: Make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: knife is beside the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: tomato is inside the cupboard at the top of the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: answer quickly please <<MiscOther>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi, what do you need me to do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please clean all the plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<MiscOther>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like a salad please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: whats in it? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: Hi! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: find newspaper <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hi, I would like you to prepare breakfast <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Cup in any Sink.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put all cups in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find the cups. please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please clean a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: directions please <<RequestForInstruction>>\nCOMMANDER: today we need to make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the bread is on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: I need you to water the plant for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any Tables.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the two pillows in front of you <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put them on the chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: make a sale <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: lettuce by the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nCOMMANDER: There are 3 tissue boxes that need to be placed on the same side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: One is on the white shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: Right there! <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what's my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: <observe>\nDRIVER: what can I do today <<RequestForInstruction>>\nCOMMANDER: put all watch in one box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<MiscOther>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: today you need to make  a toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: <observe>\nDRIVER: how may i assist you <<RequestForInstruction>>\nCOMMANDER: Hi, so we're putting all the forks in the sink <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: there are 4 forks total <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok i get right on that <<Acknowledge,Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: could you tell me where i can find the first fork? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello, please make a cup of coffee <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: mug to left of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please wtaetr the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any CoffeeTable.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Are you ready for your task? <<Confirm>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: our goal today is to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: if you go to the sink do you see a cup or a bowl or anything <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: pot is under counter where pan is, right of sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: can you make a plate od toast? one slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure, where can i find the bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we need to make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets slice some bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ingredients please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Spatula in one Cabinet.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Dresser.\nCOMMANDER: <observe>\nDRIVER: hi. what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Ladle in one Drawer.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd like a cup of coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mug is to right of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: thank you! <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: kinda dirty <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Tomato in any Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what shoud I do first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: you need to put all the tomato in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where are the tomatoes? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get the peppershaker from the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: open the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: potato to boil <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: 3 potatos <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can I have some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: hi how can i help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put all the lettuce on a dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Hello, please prepare coffee in a clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There is a mug in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: Put all Pillow on any Chairs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello, where should I start? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please water the plant. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Fill the container from the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do first? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to serve 3 slices of lettuce on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please clean all the cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one in the bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Bathtub>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice tomatoes first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: can you serve 3 slices of lettuce on a plate? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: where is the plate to serve these on? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the down cupboard to the right bellow sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 4 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Affirm"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on any SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello. what should i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello, task plz <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: We need to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi what is my task today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: hi please cook a potato in the microwave <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: wher eis the potto <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: please can you water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what work can i help with today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hey can you make me a sandwich please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: 2 slices of toast with sliced tomato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: theres a knife in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Of course. Where can I find bread? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: We need to fill coffee in mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mug is on the chair near center table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi what is my task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Egg in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<RequestForInstruction>>\nCOMMANDER: can you put teh egg in a cabinet please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Lettuce on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: hi how can i help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put all the lettuce on a dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one is in the cupboard to the right of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: soil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Book on any Bed.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: how ocan i help you? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: your task is to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: ill do that for you right now <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hi first we need the lettuce on the kitchen table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: We will need to slice it with the knife there <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whaty should I do to the lettuce <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Slice with the knife that was on the table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: could you please prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today> <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: Make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Vase>\nCOMMANDER: <observe>\nDRIVER: <putdown Stool>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: The tomato is to the right of the brown shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cookwares.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hello, can you water the plant please? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! Please prepare a cup of coffee :) <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: rinse the dirty clothe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the drawer where u stand <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: task plz <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread and knife are in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: make 2 toasts <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: what can i help you with? <<RequestForInstruction>>\nCOMMANDER: can you rinse the cloth with the water? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put 3 alarm clocks on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: they are in the wardobe left of the bed <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<MiscOther>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: Hi today can you please get and place all the tissue boxes om the coffee table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is a tissue box in front of the tv <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: step one is to prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the mug is on the A-frame shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: cook me two slices of potato and serve it on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Mug in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<RequestForInstruction>>\nCOMMANDER: i need you to slice some lettuce on a plate for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there should be a plate in the cupboard below the  lettuce <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should i do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fork in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what can I do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The plant needs to be watered please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok is there a watering can? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a sandwhich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, what would you like on it? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER response:\nInformationOther\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: HI <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi what would you like me to do today <<RequestForInstruction>>\nCOMMANDER: TODAY WE NEED TO MAKE A SALAD <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay I will make a salad <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: grab a knife and slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello, task please <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: First, prepare coffee in  a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I assist you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: could yu rinse a cloth for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I'll get right to it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: mighty kind of you <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi we are going to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: please slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pencil on any Desk.\nCOMMANDER: <observe>\nDRIVER: Hello. May I have my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to put the pencil on the desk. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can i help you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: boil a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Stove>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: slice a bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: place news paper on single armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on any Sofa.\nCOMMANDER: first task <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Put watch on sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you cut 2 slices of lettuce please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lettuce is by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Acknowledge the other's utterance"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay will do <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: potato is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you get a mug and make coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure <<Acknowledge>>\nCOMMANDER: the mug is under the table in teh middle of the room <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: my task today please <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: fi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: plant needs to be watered...bring some water in a container from the sink and pour into the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: clean all cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is the task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We have alot of steps <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: To prepare breakfast. <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok. <<Acknowledge>>\nCOMMANDER: We need to make coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: No problem. <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please prepare a coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: I just need my plant watered <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please serve one slice of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: i can use the green cup by the stove to water the plant? <<Confirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nAffirm\n\nExample :\nGoal: Put all Watch on any Tables.\nCOMMANDER: please place the watch on the table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the watch is on the sofa chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: slice the lettuce potato and tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: put the remote on the sigle table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: remote is on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: single task <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please rinse the mug beside thje sink <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: lets make a salade <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: please take the mug from the table and put it in the sink <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi please put all small handheld objects on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: object is on table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: <observe>\nDRIVER: how may i assist you <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi...What is our first task ) <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hello? <<Greetings/Salutations>>\nCOMMANDER: let's try and put the remotes in the boxes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: k <<Acknowledge>>\nCOMMANDER: each remote goes in a different box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Bowl in any Sink.\nCOMMANDER: <observe>\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please put the bowl in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: its between the stove and the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Book on any Desk.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cookwares.\nCOMMANDER: <observe>\nDRIVER: what can i help you with? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean all the cookwares <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is a dirty pot on the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure! <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off StoveKnob>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi what do i do today/ <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. First let's slice the tomato to the left of the stove. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The knife is in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please clean all the cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one in the bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: fill the containter from the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: were serving 1 slice of a tomato in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: fill the mug with coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: Today could you place all of the cloths in the bath tub <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You should be able to find a cloth inbetween the two sinks <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: we need to clean all dirty dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: slice the tomato that is on the stove <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can I help today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: hi how can i helpl today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: jello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's my task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi...What is our first task ) <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: Hello? <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: <observe>\nDRIVER: hello. How can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please place all the dish sponges in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one on the counter near the bread and tomato <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: and a second on the stool by the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean all plates <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 3 slice(s) of Tomato on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: Hello. Can you please serve 1 slice of lettuce on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice of tomato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you please make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there's a mug in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: thank you <<FeedbackPositive>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What can I do first? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What can  I do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Where do I go from here? <<RequestForInstruction>>\nCOMMANDER: grab coffee mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: clean it in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab  a knife and slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I help you with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hello task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: ?task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: we will be making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: please slice bread and lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Apple in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you place all the apples in any of the cabinets for me please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: The first apple is on the island counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: and the second is inside the cmicrowave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <putdown Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Clean all the Mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: HI..What's my first task, please? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: k <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Knife location, please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall we do today <<RequestForInstruction>>\nCOMMANDER: cook a slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: Hello!  There are three remotes and each says they need to be put on a single coffee table. I'll see where the first remote is for you. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Cup on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hey, what Im I doing today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: You will be putting all the cups on a dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where is the dining table <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a table across from the refrigerator <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nAcknowledge\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: we need to colleect the newspaper please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: its on the side table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What can i do for you? <<RequestForInstruction>>\nCOMMANDER: Firs, slice a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Hi! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: find the mug on the table behind the wok <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: put coffee in the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: good <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's for today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: rinse the dirty mug with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: and make fresh coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: We are going to make a sandwich. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: today we need to clean the room <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where should I start? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: we need all the newpapers put <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: onto 1 table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please cook one slice of potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Clean two mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: One mug is to the left of the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you cook 5 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the potato is on the shefl <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: shelf* <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "InformationOnObjectDetails"
    }
]