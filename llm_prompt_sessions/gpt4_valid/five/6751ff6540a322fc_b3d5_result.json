[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what do you need me to do? <<RequestForInstruction>>\nCOMMANDER: serve 1 slice of lettuce on a plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: checking cabinet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: under coffee machine <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello. Ay tasks for me? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please cook a slice of potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the plants to be watered it iis the task <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: bring some water in a container from the sink and pour into the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: 1 slice toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is in the cabinet above coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\n\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SaltShaker on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, what  are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi i need 2 saltshakers put onto the dining table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please water the plant in the middle of table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi task <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: you need to slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: tomato and knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: nvm <<Deny>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:",
        "answer": "Greetings/Salutations",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can help <<RequestForInstruction>>\nCOMMANDER: I need you to put the pepper shaker in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: lettuce is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what are we doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we are making a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay. Where is the plate at? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi there can you put my 2 arlam clocks on my bed please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes I will <<Affirm,Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is one next to my laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the other is on the drawer next to that <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task <<RequestForInstruction>>\nCOMMANDER: lets clean all the bowls <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where can i find <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: mug is on chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: fill water and water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: HI <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: task plz <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Pot>\nCOMMANDER: boil potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: put all the remote controls on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Ready for task directions please <<RequestForInstruction>>\nCOMMANDER: Hi. First get the tomato from the sink and slice it. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The sink is behind you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all SaltShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: what do I need to do? <<RequestForInstruction>>\nCOMMANDER: the saltshaker needs to be put into a single cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup PepperShaker>\nCOMMANDER: <observe>\nDRIVER: Is any cabinet fine? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i think so <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is on the stool beside the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: knife is inside the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Bread is next to the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: tomato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: could you do me a favour and put both my alarm clocks on my bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I'll get straight to it <<Acknowledge>>\nCOMMANDER: theres one on the green chair in front of you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: i'd like a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: what can i help with today? <<RequestForInstruction>>\nCOMMANDER: Hi, today I'd like to gather all my eggs and place them onto the dining room table please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: f course <<Acknowledge>>\nCOMMANDER: the first egg ccan be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: thank you ill start there <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Egg>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Book on any Desk.\nCOMMANDER: <observe>\nDRIVER: hello how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello we need to find books and put them on the desk <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is one on the bed <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: To your right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hello how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can i help today <<RequestForInstruction>>\nCOMMANDER: please could you put my mug away into the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where is the mug <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We need to put three bread on the dining table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <toggle off Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Could you make a plate of toast please? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: There is a knife next to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i need you to put all the newspaper on one side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there should be two newspapers <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where can i find the newspapers? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the loungechair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: how canI help? <<RequestForInstruction>>\nCOMMANDER: can you pleas put a slice of tomato in a bowl? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tomato is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Hi. Please water the plant. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: By the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bowl to water it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: You can use that mug <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Pans.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: we need to clean pans <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Egg>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: a knife is on the shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What's the task for today? <<RequestForInstruction>>\nCOMMANDER: just need to clean the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: can you tap on the mug location <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: near the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: hi please boil poato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how may i help you today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Could you boil a potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: grab the purple object in the tub <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What task do I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: we need to clean all dirty dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Can you make me a coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hi, Put all pillow on the chair <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER: <observe>\nDRIVER: <putdown ArmChair>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: all set! <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: clean the bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cook one slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and serve in the bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: we need to clean all dirty dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please put one slice tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the tamoto <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: on brown kitchen shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Add coffee in the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Tables.\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: Place all watches on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There's a watch on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: we ned to cook a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please put 2 lettuce on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: First, prepare coffee in  a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Mug is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: please clean the cloth <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SprayBottle>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Cups.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean all cups <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where are the cups? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Condiments in any Cabinet.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all CD on any Furniture.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do tpday? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: today* <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Please place CD on a furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: How many CDs? <<RequestOtherInfo>>\nCOMMANDER: 1 <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: take the mug to the sink and rinse it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, I am here! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: What is my first task? <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: The plant needs to be watered. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Go to the sink. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what should i do next? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Spatula in any Sink.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we need to put the spatula in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: lets prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER response:",
        "answer": "Affirm",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: potato needs to be sliced <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: ,my task <<RequestForInstruction>>\nCOMMANDER: Today you will make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First slice the bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The bread is to the left of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: lettuce, tomato and potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: lettuce and tomato are by the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: potato is on the stool <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need help with? <<RequestForInstruction>>\nCOMMANDER: i'd like you to boil a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hi. We need to grab the spatula behind you on the counter to the right of the fridge first <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: We're cutting a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There's a tomato in the cabinet to the left of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: top or bottom <<AlternateQuestions>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets make 2 coffees first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the mug is on the island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cookwares.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Rinse the cookware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello whats first? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: It's beside the flowers <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: ur left <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: we need to place all the remote controls on table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi what shall i do today <<RequestForInstruction>>\nCOMMANDER: Hi how are you? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: You have to cut two slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find tomatoes <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I see one tomato on the round table. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any Tables.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello, what is task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi please put all small handheld objects on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: object is on table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello.  How may I assist today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello, we are cooking 2 slices of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: knife in top drawer above toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: how would you like it to be cooked? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: lets prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: whats the task? <<RequestForInstruction>>\nCOMMANDER: hello.Please look for a knife? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: found it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: get a tomato and slice it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: can you make 2 slices of lettuce? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the lettuce is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: could you please boil a potato for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions <<Greetings/Salutations,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER response:",
        "answer": "Affirm",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Dresser.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Pillow on any Sofa.\nCOMMANDER: put 2 pillows on any sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: please clean the cloth <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SprayBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown Bathtub>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto a sidetable <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Please remove the tomato from the cabinet above the toaster. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a knife in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pots.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: can you put the sponge in the sink please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: could you please put the alarm clocks onto the bed for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup AlarmClock>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Bed>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 2 remotes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: put in a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what shoud I do <<RequestForInstruction>>\nCOMMANDER: take the bread from the table behind you <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello. what should i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to put te watch on a side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the watch? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: I show it on a couch <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello! I am here! <<Greetings/Salutations>>\nCOMMANDER: hey <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What is my first task? <<RequestForInstruction>>\nCOMMANDER: prepare a breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: What is first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi, what can if do for you? <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i want a slice of a tomato in a bowl please. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: find the mug on the table behind the wok <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the tomato is on the brown shelves <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: lettuce is inside the shdelf below the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: shelf* <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we'll be watering the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any ArmChair.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Can I help you with a task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: jello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's my task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: Take a container, put some water in it from the sink and water the plant by the window <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Hello, can you make a cup of coffee? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The mug is in the trashcan <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: Clean the cloth. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ToiletPaper>\nCOMMANDER: It is in the tub. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi...waht can i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Today, you are preparing breakfast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Today, you are putting all the watches (3) in one box, please. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where are they? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: You can find one on the table to the rifht of the TV. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Acknowledge the other's utterance"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi please rinse cloths <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup SprayBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: First under righthand sink in cabinet <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle on LightSwitch>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: We are making a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We are going to start with a slice of toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "MiscOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, how are you? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: You have to clean all the drinkwares. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what's the task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Kettle on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: could you please put my kettles onto the dining table for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one is on the back shelving on the bottom shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Kettle>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: how may i help you? <<RequestForInstruction>>\nCOMMANDER: Hi, I have a neat task for you today. I'd like all my plates cleaned please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: the first plate can be found to the right of the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: great ill get started <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hello what would you like done? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: hi clean all plates <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what task today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where are they? <<InformationOnObjectDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the plate is next to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: We need to cook a slice of potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is a potato in the pot on the counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER: please slice the potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the garbage <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: sliced <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please clean all the cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is one in the bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER: place 2 newspapers onto single dresser <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is dresser <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pencil on any Bed.\nCOMMANDER: <observe>\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: can you put the sponge in the sink please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the sponge should be in th emicrowave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hello, prepare coffee in a clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Whats the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please can you rinse the dirty cloth in teh water? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: it is by the bathtub <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Tables.\nCOMMANDER: <observe>\nDRIVER: what shall i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please put the two newspapers from the self onto a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Affirm"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello please make 2 cups of coffee <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: coffee mug to your left <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: how can i help you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Hello.  We need to put the newspapers on the armchair. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hello what is my task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: hi, today you need to cook 3 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "MiscOther",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: Please make a slice of toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi what can i do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: Can you please place any forks in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: Hello, clean a pot <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: whats my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: Hello, you need to make a salad please. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Cok a potato on the pan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Cook* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: It's already on the pan, just turn on the stove <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: go get a potatoe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: make a slice of tomato using a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: then clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: can you help me find the tomato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi there! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task, please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Today we are going to make a salad on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: Sounds good <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Bread locatio? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: On the chair on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Thank you. <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Egg on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: what can i help with today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is task? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please water the plant in the middle of table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: done <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you please toast a slice of bread? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can I find a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: there's a knife in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Ah OK <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: can you please make coffee? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do i do' <<RequestForInstruction>>\nCOMMANDER: slice bred <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and toast 1 slice <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on any ArmChair.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to place the watched onto an armchair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: watches* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Newspaper on any SideTable.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: The newspaper needs to be put onto the side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You can find on the the chair by the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I get for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today <<RequestForInstruction>>\nCOMMANDER: The task is to \"Boil a potaoto in water\" please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my ask <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER: clean the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the island next to the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: you need to clean all the cloths <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where are the clothes <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Good day.  We will be preparing breakfast.  First taks, we need a clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any Sofa.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello please put pillow on sofa <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sofa>\nCOMMANDER: <observe>\nDRIVER: what is next? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: slice bread you mean <<RequestOtherInfo>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello. We need to make a plate of toast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: The bread needs to be sliced using a knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hey whats the first step <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi we are going to make a salad <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: please slice the lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello, what shall I   do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Please boil a potato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: <observe>\nDRIVER: hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello please make sandwich start with 2 pieces toast <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: make a sandwich <<Instruction>>\nCOMMANDER: <observe>\nDRIVER: where is knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nAffirm\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: bread in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: Hello, water the plant <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: cook 2 slice potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is infront of toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: can you put the cloths in the bathtub <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: Hi! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: find newspaper <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Spatula in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Hi. We need to grab the spatula behind you on the counter to the right of the fridge first <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Hello? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nConfirm\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER: Let <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: s start witha clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: Hello, clean a pot <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the pot? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: hi' <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Put  a mug into a cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Great. Where do I find the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please serve one slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: we need to slice one potatoe and serve in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Condiments in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: please place all of the condiments in a single cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There is already one in the top right cabinet to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: sorry <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: the one above the toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Cok a potato on the pan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Cook* <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cups.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: We need to water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what do I use to water the plant? <<RequestForInstruction>>\nCOMMANDER: lets use a container <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the container <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: lets try by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What do I need to do? <<RequestForInstruction>>\nCOMMANDER: You need to prepare coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello. How can I assist you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Sure. Knife location, please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SmallHandheldObjects on one Sofa.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: You need to place 8 small handheld objects onto one sofa. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello! How can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Slice a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Could you tell me where to find the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: Please clean all the tables. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what next <<RequestForInstruction>>\nCOMMANDER: hi there <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the toast and plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: first: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Fork on any DiningTable.\nCOMMANDER: I need help <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need a potato first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Dishwares.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: lets cut some lettuce first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: lettuce is by the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: HI! <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What  can I do for you? <<RequestForInstruction>>\nCOMMANDER: today we need make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure thing! Where is the mug please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: mug is in the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make one slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure. Bread locatio? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: What should I do today> <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Please clean a mug and make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: wheres the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make coffee with the mug in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: no need to clean it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup SaltShaker>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi what is my first task <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can we do today <<RequestForInstruction>>\nCOMMANDER: cook two slices of potato and serve on a plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: boil the potato by cooking it in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay will do <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today lets cook the potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: bread is left side of stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is in wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: slice it and toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup SprayBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: bring some water and pour it into the plants <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi i'd like a sandwich <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: first you can toast 2 slices of bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Kettle on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: Hello. How can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Could you put all the Kettles on the dining table please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: There should be on kettle on the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Task plas <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: pls <<MiscOther>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please clean plate on brown chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: Can you find and place the dish sponges into the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there should be one in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: Task plas <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: pls <<MiscOther>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: could you please boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the potato should be in the drawer under the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i want some breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all ScrubBrush on any CounterTop.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please take the scrub brush next to the toilet and place it on the counter top <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ScrubBrush>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: anything else? <<RequestMore>>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: make a slice of bread toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is inside the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is on the centre island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what is my tsk today <<RequestForInstruction>>\nCOMMANDER: We need one slice of toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: The bread is in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: find knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where should i find a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: today we make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: slice  a lettuce using a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: What do I do first? <<RequestForInstruction>>\nCOMMANDER: Grab a tissue box and put it onto a single coffee table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: Next? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, we must locate the bug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Please slice a piece of lettuce and place it on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the lettuce should be next to the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: and there is a knife on the white side table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: i see a pot with water in it.  can i use that? <<Acknowledge,Confirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need coffee prepared in a clean mug please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bottle in one Cabinet.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you make me a slice of toast please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: found it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: can you make 2 slices of lettuce? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the lettuce is on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: a knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: place the watch inside the red box <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: there is a plate in the fridge that needs to be cleaned. <<InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Please clean all of the drinkwares for me. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: good one. What can I do <<Acknowledge,RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all RemoteControl on any Chairs.\nCOMMANDER: <observe>\nDRIVER: what do I do first? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: Hows that? <<RequestMore>>\nCOMMANDER: Perfect <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hi. Please serve one slice of tomato in abowl. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where is the bowl <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: There is a clean bowl in the fridge. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: please make a coffe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Potato in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: Hi how can i help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please put all the potatoes in a cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: I left one near the stove to the right <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: which cabinet would you like me to put them in <<Confirm>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: please make a tomato sandwich on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi, what are my directions? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Serve a slice of tomato in a bowl please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The tomato is in the cupboard on top of the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: And the microwave is on top of the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: what's first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: hello please clean 3 pots <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi,make salad please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: tomato is in the black bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Sofa.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: put the newspaper on the sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: there is 3 <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is one on the wall shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the newspaper <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: over the black stand <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: top shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Let's water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER: <observe>\nDRIVER: Hows that? <<RequestMore>>\nCOMMANDER response:\nFeedbackPositive\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "MiscOther",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi, what can i do for u? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make amug of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: Today we need to clean two mugs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where are the mugs <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: please make some toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I get for you? <<RequestForInstruction>>\nCOMMANDER: i'd like a coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: could you direct me to the mug please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in front of toaster <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on any Sofa.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: makea plate of toast please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cup in any Sink.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Watch on one Sofa.\nCOMMANDER: Put watches on one sofa <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where are the watches <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: One watch is on table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Watch is on plate <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do <<RequestForInstruction>>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all ScrubBrush on any CounterTop.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: put all the scrub brushes on the counter top <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find them? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: <observe>\nDRIVER: whats first <<RequestForInstruction>>\nCOMMANDER: We need to put pillows on armchairs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The pillows are on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: hey <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello. what should i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We need to put te watch on a side table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the watch? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please make 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all CreditCard on any Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER: find all the credit cards <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Desk>\nCOMMANDER: put them onthe furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup CreditCard>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hello. How may I assist you, today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto brown table next to tv <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: where is knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Ok <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: today we slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should I do? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Watch on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: hi' <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Drinkware on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER: lets boil a potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Tablewares.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hii <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi \\ <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what  ingredients do I need <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the  mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: 2 slices tomato on plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: knife on table next to fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: <putdown SideTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Apple in any Fridge.\nCOMMANDER: <observe>\nDRIVER: What can I do today? <<RequestForInstruction>>\nCOMMANDER: Could you please help me placing all the apples in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER: mug is on chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: fill water and water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pans.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: we need to clean pans <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: there is one on the stove that is dirty <<InformationOnObjectDetails,InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task ? <<Greetings/Salutations>>\nCOMMANDER: lets make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice the lettuce please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a mug which is already clean <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find the mug? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on any SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: put 2 remotes onto a sidetable <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: OK <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: how can i help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: bread next to wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hi how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What should  I do today? <<RequestForInstruction>>\nCOMMANDER: Hello, its a long one <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER: prepare coffee in a clean mug.mug us dirty so rinse with clean water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: clean the plate in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: rinse with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: okay <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Chairs.\nCOMMANDER: <observe>\nDRIVER: What task can I do? <<RequestForInstruction>>\nCOMMANDER: Today you will put all newspapers on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: One newspaper is next the laptop <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: do you mean the dining chairs? <<Confirm>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Yes <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Newspaper>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Please make 2 cups coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SportsEquipment on any Bed.\nCOMMANDER: <observe>\nDRIVER: what should i do <<RequestForInstruction>>\nCOMMANDER: Put all sports equipment on any bed. It is beside the bed on the floor by the basket. <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup TennisRacket>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: HI, what can i do <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: WATER THE PLANT <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Dresser.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help <<RequestForInstruction>>\nCOMMANDER: how can I help? <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: sorry, Please make coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how may I help you today? <<RequestForInstruction>>\nCOMMANDER: can you rinse out the cloth next left of the bath please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I'll get straight to it! <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cloth>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all TissueBox on one SideTable.\nCOMMANDER: <observe>\nDRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch on any CoffeeTable.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: how can i serve you today/ <<RequestForInstruction>>\nCOMMANDER: Please put the remote controls on the coffee table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Watch in one Box.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Drawer>\nCOMMANDER: we need to locate watches <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Drawer>\nCOMMANDER: <observe>\nDRIVER: What is my task please? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: Hello. Can you please serve 1 slice of lettuce on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: There is a knife on the chair next to you <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Fork in any Sink.\nCOMMANDER: <observe>\nDRIVER: how may i assist you <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: hello, prepare coffee in a clean mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: i'd like a cup of coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure where can I find a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I see it <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: coffee made <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can I do for you? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: boil the potato in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: just put it in the pot <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can i find letttuce and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hi. What do I need to do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to boil 1 potato please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is 1 on the chair <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: by the kitchen island <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Make a slice of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where can i get a knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please  Put all Bread in any Cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can I find the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can i help <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: please place two mugs in the sink <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Cup>\nCOMMANDER: the first mug is in the cabinet above the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: the one above and to the left <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello, task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi. Please boil a potato. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi what shall i do today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hi. Please make a sandwich. Could you start with toasting 2 slices of bread? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: Hello? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: In the bottom cabinet to the right of the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Drinkwares.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi, First task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean all the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure, where are the plates? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: check the fridge and the cabinet to the left of the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can  do today <<RequestForInstruction>>\nCOMMANDER: I need you to prepare coffee for me. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help <<RequestForInstruction>>\nCOMMANDER: please could you boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is one next to the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Pot>\nCOMMANDER: <observe>\nDRIVER: Hows that <<Acknowledge>>\nCOMMANDER response:\nFeedbackPositive\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\nCOMMANDER: Hi today can you please get and place all the tissue boxes om the coffee table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is a tissue box in front of the tv <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: there is another on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: Can you make me a coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Watch on one Furniture.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: put watch on a single furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is watch? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Watch>\nCOMMANDER: <observe>\nDRIVER: found one <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: in a cabinet next to sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one Dresser.\nCOMMANDER: <observe>\nDRIVER: what is my task tody <<RequestForInstruction>>\nCOMMANDER: place 2 newspapers onto single dresser <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is dresser <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: single dresser is the cabinet left to sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: First task <<RequestForInstruction>>\nCOMMANDER: Hello, slice the potato and cook three slices <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Potato is on the brown shelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hello, task please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: I need help <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi, how can I help you today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: Hi! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Could you please boil a potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There is a potato in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: The game is affoot! <<MiscOther>>\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Commander? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: What is my task <<RequestForInstruction>>\nCOMMANDER: Please slice the tomato on the table. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: The knife is on the table as well. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Apple in any Cabinet.\nCOMMANDER: Hi, today I want all the apples gathered in a cabinet please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: of course, ill start working on that now <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Apple>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: task <<RequestForInstruction>>\nCOMMANDER: lets make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is bread plz <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: bread is in cabinet above stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife near wash basin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: make a slice of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: we need to make a salad please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: hello, task plase <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need to clean dirty mugs <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cup in any Sink.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: Hello. <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Good day.  How may I help you? <<Greetings/Salutations>>\nCOMMANDER: You will be preparing breakfast today. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>\nCOMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay.  Can you direct me to a mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: Okay, you can find the mug in the upper cabinet by the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: On my way. <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 5 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Today can you serve 5 slices of tomato in a clean bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: ANUGGDG0JJ4PK <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: Make 2 sandwich toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What's the task? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi what can i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: please make me some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where is the mug? <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: there is a mug in the garbage <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: oh you found one. <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make a ssndwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: make 2 slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: Good day! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: go get a potatoe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: make 1 slice of potato and cook it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the potato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all TissueBox on one Tables.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi, how are you? What would you like me to do today? <<RequestForInstruction>>\nCOMMANDER: put the tissue box on the table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: tissue box to your left <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Pans.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is my task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: We need to clean the plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all PepperShaker in one Cabinet.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: get the peppershaker from the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: open the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: toast 2 bread slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice 2 lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Sofa.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "InformationOnObjectDetails"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can i help today? <<RequestForInstruction>>\nCOMMANDER: please could you cut and cook a slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Bread in any Cabinet.\nCOMMANDER: <observe>\nDRIVER: hello how can I help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all RemoteControl on one SideTable.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I  be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: put the remote on the sigle table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: remote is on the sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: hello please rinse the plate that is on the sink <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup WineBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Tomato>\nCOMMANDER: <observe>\nDRIVER: next? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What do we do today? <<RequestForInstruction>>\nCOMMANDER: make 2 pieces of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: i'd like a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: whats in it? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tomato and potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what is the task? <<RequestForInstruction>>\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all SaltShaker in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: put all saltshaker in one cabinet. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: we are making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: you tell me <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: next <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: put all the remote controls on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Box>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Laptop on any Bed.\nCOMMANDER: <observe>\nDRIVER: What can  I do today <<RequestForInstruction>>\nCOMMANDER: all laptops on same bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Make a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi there <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: lettuce is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: 2 remotes <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: put in a single table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: 2 in cream sofa <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: on tne long sofa? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nAffirm\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello. What is my first task, please? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hello sorry about that <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all TissueBox on one CoffeeTable.\n\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: slice the bread ontop of the table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: Where can I   find a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Please slice lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can I do today? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: We are going to start with toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There is a loaf of bread beside the sink. <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello please boil potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: hey how can I help? <<RequestForInstruction>>\nCOMMANDER: clean the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where's the plate? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: We need to serve 2 slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is in sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: behind bread <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello. <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What am I doing today? <<RequestForInstruction>>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what can i do today <<RequestForInstruction>>\nCOMMANDER: We need a cup of coffee in a clean mug. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: potato in stove pan <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: cook it <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the potato? <<InformationOnObjectDetails>>\nCOMMANDER: then <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: see the chat first <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets prepare breakfast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: Serve 1 slice of tomato on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: it is in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: water my plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure thing <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <pour HousePlant>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: Hi, how are you? What would you like me to do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Great how are you? <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Good, thank you. <<Acknowledge>>\nCOMMANDER: Pick up the cloth between the sinks and clean it off in the water <<Instruction,InformationOnObjectDetails,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay let me go get it. <<Acknowledge>>\nCOMMANDER: You will need to empty the sink first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: You'll be making a plate of toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, slice the bread with a knife. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: where is knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: what would you like me to do? <<RequestForInstruction>>\nCOMMANDER: Hey, I need a salad please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what should I get first? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: first I'll need you to slice some lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackNegative"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: please make me some coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where is the mug? <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: there is a mug in the garbage <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Put all Pencil on any Bed.\nCOMMANDER: <observe>\nDRIVER: Whats first? <<RequestForInstruction>>\nCOMMANDER: we need all pencils on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: go the desk <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pencil>\nCOMMANDER: by the phones <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: and in the trash bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nRequestForInstruction\n\nExample :\nGoal: Make a salad.\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi how can I help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a salad, with one slice of lettuce and two slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER: find the tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: I need help <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi how can I help today <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a salad, with one slice of lettuce and two slices of tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: where is the salad? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Candle on one Tables.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup KeyChain>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Pans.\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Clean all the Plates.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Ladle in one Drawer.\nCOMMANDER: <observe>\nDRIVER: whats first? <<RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: make a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice lettuce first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: I want a salad, one sliced lettuce and two tomato slices <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok where's the lettuce? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: do you see the knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Can you cook 5 slices of potato please? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where can I find the potatoe? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the potato is on the central big counter <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: and a knife please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: can you guide me to a knife please? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: please make coffe <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: the coffee cup is already at the coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should  I do today? <<RequestForInstruction>>\nCOMMANDER: pour coffee into cup at coffee pot <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Please fill coffee in mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What's today's task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, what can i help u with? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need you to make me a sandwhich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, what would you like on it? <<Acknowledge,RequestOtherInfo>>\nCOMMANDER: just lettuce <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER: the bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can i find a knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: slice of lettuce which is in the fridge <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: knife is in the cabinet below coffee maker <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: We will start by slicing a tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: HI <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: I need breakfast prepared. Coffee in a clean mug and a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <pour Sink>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: make two slices of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all PepperShaker in any Cabinet.\nCOMMANDER: put pepper shakers in the cabinet <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: first shaker in the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nConfirm\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: hey how can I support? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one ArmChair.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: please can you put the remotes, 2 of them on the single armchair, please <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one is in teh bin <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any Chairs.\nCOMMANDER: Put all Pillow on any Chairs. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: its on the table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: I will, where can I find the pillows? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Bowls.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Clean all bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What can I do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: one in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Bowl>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Welcome <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on any Furniture.\nCOMMANDER: Put all RemoteControl on any Furniture <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. My first task please ) <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: serve tomatoes in a boel <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: slice tomatoes first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Okay, where can I find the tomatoes? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: please make a tomato sandwich on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: tomato in micro <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all AlarmClock on any Bed.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: can you put 3 alarm clocks on the bed please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: they are in the wardobe left of the bed <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Apple in one Cabinet.\nCOMMANDER: <observe>\nDRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i do for you today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: we'll be watering the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: i see the plant <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: ill get some water <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what shall I do today? <<RequestForInstruction>>\nCOMMANDER: we making a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: grab a bread <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ingredients please <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: could you clean the pot? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please boil me a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi, what should I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: make slice of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello how are youtoday <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: Shall we begin <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: fine let go <<Acknowledge>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl in one Box.\nCOMMANDER: <observe>\nDRIVER: what can i do for you? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: hi lets clean a mug <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: whats my task <<RequestForInstruction>>\nCOMMANDER: we need to water the plant please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all DishSponge in any Sink.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Please put the 2 sponges into the sink. You can begin with the one in the microwave <<Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Microwave>\nCOMMANDER: <observe>\nDRIVER: <pickup DishSponge>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 3 slice(s) of Lettuce on a Plate.\nCOMMANDER: How can I help <<RequestForInstruction>>\nDRIVER: <observe>\nCOMMANDER: Whoops <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: Today could you slice a lettuce in 3 pieces for me <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: Then place it on a clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: There should be a knife in the cupboard above the stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all RemoteControl on one Chairs.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: put all the remote controls on one chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Box>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hello how can I help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: i'd like a salad today <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: pick pot in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: clean with water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Newspaper on one SideTable.\nCOMMANDER: <observe>\nDRIVER: What should i do today? <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We need to boil a potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hello. What would I be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER: water my plant please! <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one CoffeeTable.\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: hi..put all remotes on one coffe table <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup RemoteControl>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeTable>\nCOMMANDER response:\nAcknowledge\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare coffee in a clean mug.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What do we do today? <<RequestForInstruction>>\nCOMMANDER: make 2 pieces of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: potato is in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Plates.\nCOMMANDER: <observe>\nDRIVER: Hi how can i help you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean all the plate please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure, where are the plates? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all Egg in one Cabinet.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Mug in any Sink.\nCOMMANDER: <observe>\nDRIVER: how can I help? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Add coffee in the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: cook 1 slice of potato and serve on a plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find potato <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: and knife too <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Clean all the Pots.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what is the task for today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: hello? <<Greetings/Salutations>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today you need to clean the pot <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: dirty pot is next to stove <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 5 slice(s) of Potato and serve in a Bowl.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: Hello! You need to clean all the cloths <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hi. What should I do first? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: clean the mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: near chairs <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 1 slice(s) of Tomato in a Bowl.\nCOMMANDER: <observe>\nDRIVER: task? <<RequestForInstruction>>\nCOMMANDER: slice tomato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: then clean a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Tomato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: knife is in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: 1 slice toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: bread is in fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Put all RemoteControl on one Tables.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do for you today? <<RequestForInstruction>>\nCOMMANDER: Put all remote controls on one table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: does it state which table; coffee or side? There's already one on the coffee table, which is why I ask. <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Take the one on the shelf to the right of the television <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: And place it where the other one is <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where is tomato please <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: We have alot of steps <<InformationOther>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOther\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Clean all the Cloths.\nCOMMANDER: <observe>\nDRIVER: First task? <<RequestForInstruction>>\nCOMMANDER: Cloth is dirty <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today we clean all the dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: No problem. Where are they located? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: my task <<RequestForInstruction>>\nCOMMANDER: hello, please slice a tomato. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: on the stool in front of the oven <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: get the plate while your in the fridge too <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: what do i do <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: lets make toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: bread is in the bottom cabinet under the microwave <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi what do you need? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi i'd like a sandwich <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: what do you need? <<RequestForInstruction>>\nCOMMANDER: please boil a potato in water <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup WineBottle>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Pot>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi...slice lettuce please <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what should i do today? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: where can i find letttuce and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Make a sandwich.\n\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what's the task <<RequestForInstruction>>\nCOMMANDER response:\nGreetings/Salutations\n\nExample :\nGoal: Put all Pen on any Bed.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: hi..task today.put all pens on the bed <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where can i find pens <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER response:",
        "answer": "Acknowledge",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Water the plant.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Cook 1 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: How can I help? <<RequestForInstruction>>\nCOMMANDER: Can you please cook 2 slices of potato? <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: thre's a potato in the sink <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all TissueBox on one Tables.\nCOMMANDER: <observe>\nDRIVER: what do i do today <<RequestForInstruction>>\nCOMMANDER: Hi. Please place two tissue boxes on a table. One is on the gray chair in the corner. <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Floor>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Serve 1 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: what should i do today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: ? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Serve 2 slice(s) of Tomato on a Plate.\nCOMMANDER: <observe>\nDRIVER: First atsk? <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: *Task <<RequestForInstruction>>\nCOMMANDER: make a slice of tomato.The tomato need to be sliced using a knife <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Make a sandwich.\nCOMMANDER: <observe>\nDRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hi, can I have a sandwich? <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: sure <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: what's in it? <<RequestOtherInfo>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: what can i help with? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare coffee in a clean mug.\nCOMMANDER: <observe>\nDRIVER: What is your bidding? <<RequestForInstruction>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: what do you need? <<RequestForInstruction>>\nCOMMANDER: I need you to prepare breakfast. I need coffee in a clean mug <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: and also a salad <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what kind of salad? <<RequestForInstruction>>\nCOMMANDER: with one slice of tomato, lettuce and potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Serve 1 slice(s) of Lettuce on a Plate.\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: final <<Acknowledge>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Prepare breakfast.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Water the plant.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: please water the plant <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: we need a potato first <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Fruit on any DiningTable.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER: Please place the fruit on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\n\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: final <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: finally <<Acknowledge>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "FeedbackPositive"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Mugs.\n\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all Pillow on any ArmChair.\nCOMMANDER: put all pillows on the arm chair <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Hi <<Greetings/Salutations>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Pillow>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all TissueBox on one Tables.\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: find a tissuebox <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup TissueBox>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Cloth in any Bathtub.\nCOMMANDER: <observe>\nDRIVER: Hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: What should I do today? <<RequestForInstruction>>\nCOMMANDER: Put the cloth in the bathtub <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: Where is the cloth? <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <pickup HandTowel>\nCOMMANDER: <observe>\nDRIVER: <putdown HandTowelHolder>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a plate of toast.\nCOMMANDER: <observe>\nDRIVER: What shall I do today? <<RequestForInstruction>>\nCOMMANDER: You'll be making a plate of toast. <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:\nInstruction\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: final <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: finally <<Acknowledge>>\nCOMMANDER: lol, great efforts homes! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Instruction"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Clean all the Dishwares.\nCOMMANDER: <observe>\nDRIVER: Hi! What can I do today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: today we clean all the dishware <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: No problem. Where are they located? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Put all RemoteControl on one Sofa.\nCOMMANDER: <observe>\nDRIVER: prepare coffee in a clean mug <<Instruction>>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: Hello <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: hey <<Greetings/Salutations>>\nCOMMANDER response:\nInstruction\n\nExample :\nGoal: Put all Pen on any Bed.\nCOMMANDER: hi <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what can i do for you today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: what is the task to be completed? <<RequestForInstruction>>\nCOMMANDER: you need to put all pens on the bed <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: the pen is on the top of the slelf <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Cook 3 slice(s) of Potato and serve in a Bowl.\nCOMMANDER: <observe>\nDRIVER: hi how can i be of assistance <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hi please cook up 3 slices of potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: and put them in a bowl <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Make a salad.\nCOMMANDER: <observe>\nDRIVER: hi <<Greetings/Salutations>>\nCOMMANDER response:\nGreetings/Salutations\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: final <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: finally <<Acknowledge>>\nCOMMANDER: lol, great efforts homes! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: lol <<MiscOther>>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, named DRIVER, to do tasks for you by telling\nit what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should\nbe giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should\njust observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\nExample :\nGoal: Cook 2 slice(s) of Potato and serve on a Plate.\nCOMMANDER: <observe>\nDRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: please cook 2 slices of potato <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <slice Potato>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: <observe>\nDRIVER: whats my tasktoday <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: hello, lets boil a potato <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Potato>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Boil Potato.\nCOMMANDER: Hello! <<Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what shall I do today <<RequestForInstruction>>\nCOMMANDER: The task is to \"Boil a potaoto in water\" please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: where can i find potatoe <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nInformationOnObjectDetails\n\nExample :\nGoal: Put all Newspaper on one Furniture.\nCOMMANDER: <observe>\nDRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: can you put the newspaper on the couch <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: sure, where's the newspaper? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:\nOBSERVE\n\nExample :\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello <<Greetings/Salutations>>\nCOMMANDER: <observe>\nDRIVER: task please <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: We have a lot to do! Hello! <<Instruction,Greetings/Salutations>>\nDRIVER: <observe>\nCOMMANDER: We need to wash a mug and fill it with coffee <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: ok <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER response:\nInformationOnObjectDetails\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Prepare breakfast.\nCOMMANDER: <observe>\nDRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>\nCOMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>\nDRIVER: <observe>\nCOMMANDER: First, a cup of coffee please <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle off CoffeeMachine>\nCOMMANDER: <observe>\nDRIVER: <toggle on CoffeeMachine>\nCOMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: one coffee <<RequestOtherInfo>>\nCOMMANDER: Yes please <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Mug>\nCOMMANDER: <observe>\nDRIVER: did it complete? <<Confirm>>\nCOMMANDER: Yup! <<Affirm>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: next plz <<RequestMore>>\nCOMMANDER: Next place make a sandwich <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: Bread needs to be toasted <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: its cool it woke me up lol <<MiscOther>>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: lol <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <toggle on Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: Nice work. You will also need 1 slice of lettuce <<FeedbackPositive,Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: Also, the sandwich needs to be on a plate, which is in the fridge <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: ta-da! <<MiscOther>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Great job :-) <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: A slice of lettuce is all that's missing <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: That might be too big a slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Try a smaller slice of lettuce <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Lettuce>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup ButterKnife>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: Its a bit annoying because you have to try and find the right size pieces to fit <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <move>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER: Nice work! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: <observe>\nDRIVER: yes <<Affirm>>\nCOMMANDER: TASK IS COMPLETE!!!!!!!! <<Acknowledge>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: final <<Acknowledge>>\nCOMMANDER: <observe>\nDRIVER: finally <<Acknowledge>>\nCOMMANDER: lol, great efforts homes! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: lol <<MiscOther>>\nCOMMANDER: Thank you! <<FeedbackPositive>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "OBSERVE"
    }
]