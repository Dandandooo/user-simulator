[
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Plate of toast is ready!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "put the slice of toast on the clean plate <<Instruction>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: put the slice of toast on the clean plate <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <putdown DiningTable>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "The plate of toast is ready."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "<observe>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "<observe>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "\"1 piece of toast\" <<InformationOnObjectDetails>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "<observe>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "The plate is on the dining table."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "The plate is on the dining table."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "2"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job! <<FeedbackPositive>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "The plate is ready."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER response:",
        "answer": "FeedbackPositive",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "<observe>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Plate of toast is ready."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup PaperTowelRoll>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Spoon>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Fork>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown Sink>\nCOMMANDER: <observe>\nDRIVER: <toggle on Faucet>\nCOMMANDER: <observe>\nDRIVER: <toggle off Faucet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Perfect!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Great job! <<FeedbackPositive>>\nCOMMANDER: fill the mug with coffee <<Instruction>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "FILL THE CUP WITH COFFEE."
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\n\nCOMMANDER response:",
        "answer": "InformationOnObjectDetails",
        "response": "OBSERVE"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Plate of toast is ready!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Done!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Plate of toast is ready!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "fill the mug with coffee <<Instruction>>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "<Instruction>"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown Toaster>\nCOMMANDER: clean the dirty plate on the dining table <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <toggle off Toaster>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: 1 piece or what <<RequestOtherInfo>>\nCOMMANDER: yes just 1 piece <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: near the door <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Plate>\nCOMMANDER response:",
        "answer": "OBSERVE",
        "response": "Plate of toast is ready!"
    },
    {
        "prompt": "Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for\nyou by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when\nyou should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you\nshould just observe.\n\nDialogue histories may also include dialogue actions to further clarify the dialogue. A single\nutterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:\n\n[\n 'Acknowledge the other's utterance', # Category: Generic. Example: \"perfect.\" Mostly follower\n 'Affirm',      # Category: Generic. Example: \"yes.\" Mostly commander\n 'AlternateQuestions', # Category: Object/Location. Example: \"yellow or blue mug?\" Mostly follower\n 'Confirm', # Category: Generic. Example: \"Should I clean the cup?\" Mostly follower\n 'Deny',    # Category: Generic. Example: \"no.\" Mostly commander\n 'FeedbackNegative', # Category: feedback. Example: \"that is not correct.\" Almost entirely commander\n 'FeedbackPositive', # Category: feedback. Example: \"great job.\" Almost entirely commander\n 'Greetings/Salutations', # Category: Generic. Example: \"hello.\" Even commander/follower\n 'InformationOnObjectDetails', # Category: Object/Location. Example: \"knife is behind the sink.\" Almost entirely commander\n 'InformationOther', # Category: Generic. Example: \"Mug is already clean.\" Mostly commander\n 'Instruction', # Category: Instruction. Example: \"fill the mug with coffee.\" Almost entirely commander\n 'MiscOther', # Category: Generic. Example: \"ta-da.\" Even commander/follower\n 'NotifyFailure', # Category: Interface. Example. \"not able to do that.\" Almost entirely follower\n 'OtherInterfaceComment', # Category: Interface. Example: \"which button opens drawer?\" Even commander/follower\n 'RequestForInstruction', # Category: Instruction. Example: \"what should I do today?\" Almost entirely follower\n 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: \"where is the mug?\" Almost entirely follower\n 'RequestMore', # Category: Instruction. Example: \"Is there anything else to do?\" Almost entirely follower\n 'RequestOtherInfo' # Category: Instruction. Example: \"how many slices of tomato?\" Almost entirely follower\n]\n\n\n\nYour job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.\nEither return the dialogue act, or return the OBSERVE action. Return only one word/phrase.\n\n\nGoal: Make a plate of toast.\nCOMMANDER: make a plate of toast <<Instruction>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: what is my task today <<RequestForInstruction>>\nCOMMANDER: <observe>\nDRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>\nCOMMANDER: <observe>\nDRIVER: <open Cabinet>\nCOMMANDER: bread in in the fridge <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <close Cabinet>\nCOMMANDER: <observe>\nDRIVER: <open Fridge>\nCOMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>\nDRIVER: <observe>\nCOMMANDER: <observe>\nDRIVER: <pickup Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER: <observe>\nDRIVER: <pickup Knife>\nCOMMANDER: <observe>\nDRIVER: <close Fridge>\nCOMMANDER: <observe>\nDRIVER: <slice Bread>\nCOMMANDER: <observe>\nDRIVER: <putdown CounterTop>\nCOMMANDER response:",
        "answer": "Instruction",
        "response": "Done!"
    }
]