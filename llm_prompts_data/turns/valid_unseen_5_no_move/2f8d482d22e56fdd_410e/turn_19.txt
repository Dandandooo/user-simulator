Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 1 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: First task? <<RequestForInstruction>>
COMMANDER: We need to cook a slice of potato. <<Instruction>>
DRIVER: <observe>
COMMANDER: There is a potato in the pot on the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: There is a knife on the second shelf of the brown shelves <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: what should i do for today <<RequestForInstruction>>
COMMANDER: serve a slice of tomato in a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: tomato is on the chair under the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: what can I do? <<RequestForInstruction>>
COMMANDER: Hi first we need the lettuce on the kitchen table <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: We will need to slice it with the knife there <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: whaty should I do to the lettuce <<RequestOtherInfo>>
COMMANDER response:
Instruction

Example :
Goal: Put all SportsEquipment on any Bed.
COMMANDER: <observe>
DRIVER: what should i do <<RequestForInstruction>>
COMMANDER: Put all sports equipment on any bed. It is beside the bed on the floor by the basket. <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup TennisRacket>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER response:
Acknowledge

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: I have the robot commands. Do you also? <<OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: Hello? <<Greetings/Salutations>>
COMMANDER: boil the potato by cooking it in water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: in shelve down the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Serve 1 slice(s) of Lettuce on a Plate.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: Please slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what can I do today? <<RequestForInstruction>>
COMMANDER: slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: There is a knife by coffee pot. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: and in fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: cut lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: Now place 1 slice on plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: Hello? <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: Please put lettuce on clean plate. There is a plate to be cleaned by the sink <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER response: