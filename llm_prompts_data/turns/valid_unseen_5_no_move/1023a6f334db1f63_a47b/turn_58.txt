Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: lets start with makng coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER response:
OBSERVE

Example :
Goal: Make a sandwich.
COMMANDER: how can i help? <<RequestForInstruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER: we need to mmake a sandwich please <<Instruction>>
DRIVER: <observe>
COMMANDER: there is bread <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: below the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: please give in detail <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: how many slices? <<RequestOtherInfo>>
COMMANDER: please get the bread <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hi. What is my first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: lettuce needs to be sliced <<Instruction>>
DRIVER: <observe>
COMMANDER: 2 slices <<Instruction>>
DRIVER: <observe>
COMMANDER: lettuce bear toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
Instruction

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: clean the plate on the counter <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SoapBottle>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: we need to make a salad <<Instruction>>
DRIVER: <observe>
COMMANDER: lets cut some lettuce first <<Instruction>>
DRIVER: <observe>
COMMANDER: lettuce is by the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hell0 <<Greetings/Salutations>>
COMMANDER: Prepare breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what is my task <<RequestForInstruction>>
COMMANDER: clean a mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: mug in the trash <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: place in coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: slice bread next <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: 2 slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: anything else <<RequestMore>>
COMMANDER: place everything on countertop <<Instruction>>
DRIVER: <observe>
COMMANDER: including coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: one more thing slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: one slice on the plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is tomato plz <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: sorry about the tomato <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: great job <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER response: