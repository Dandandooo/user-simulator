Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Newspaper on one Furniture.
COMMANDER: <observe>
DRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can you put the newspaper on the couch <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where's the newspaper? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: it's on the white shelf next to the couch <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: anything else? <<RequestMore>>
COMMANDER: oh sorry no can you bring that paper over to the black table instead <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Cloth in any Bathtub.
COMMANDER: <observe>
DRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: place the cloth into the bathtub <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cloth>
COMMANDER: <observe>
DRIVER: <putdown Bathtub>
COMMANDER: <observe>
DRIVER: <pickup Cloth>
COMMANDER: <observe>
DRIVER: Place inside bathtub? <<Instruction>>
COMMANDER response:
Affirm

Example :
Goal: Clean all the Mugs.
COMMANDER: <observe>
DRIVER: what can i do today <<RequestForInstruction>>
COMMANDER: clean all mugs <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: How may i help? <<RequestForInstruction>>
COMMANDER: I would like you to water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: the plant is in the draw next to the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: tomato on the wall rack <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: knife in the cabinet on the left above the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: grab the tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Cook 3 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: Hello. What should I do? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: First find the potato and cut it with a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. Where is the knife? <<Acknowledge>>
COMMANDER: Looks like it's in the sink <<RequestForObjectLocationAndOtherDetails>>
DRIVER: <observe>
COMMANDER: the potato is <<MiscOther>>
DRIVER: <observe>
COMMANDER: and knife <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: You need 3 slices of potato cooked <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: There is a plate by the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup CreditCard>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: Put 3 slices of potato on and cook in microwave <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: You might need to look up (U) <<Instruction>>
DRIVER: <observe>
COMMANDER: I didn't realize that when I was driver <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: It says it's too full or too small. <<NotifyFailure>>
COMMANDER: Is there something inside that needs to come out? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Nothing becomes available to pick up in the microwave, so I think it's just too small. I'll cook them on the stove? <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: Try that <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup CreditCard>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <putdown StoveBurner>
COMMANDER: <observe>
DRIVER: Does the pan need to be cleaned first? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup DishSponge>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Spatula>
COMMANDER: It doesn't say <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER response: