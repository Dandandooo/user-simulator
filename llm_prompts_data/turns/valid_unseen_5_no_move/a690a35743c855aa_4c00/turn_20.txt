Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: We have alot of steps <<InformationOther>>
DRIVER: <observe>
COMMANDER: To prepare breakfast. <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. <<Acknowledge>>
COMMANDER: We need to make coffee in a clean mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: No problem. <<Acknowledge>>
COMMANDER: The mug is on a stool next to the table. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hello, what is my task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: hello what can i do today <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: anyone there <<Confirm>>
COMMANDER: make a salad. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what are the steps <<RequestMore>>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: using the lettuce, the lettuce needs to be sliced <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER response:
Instruction

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what shall i do today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: there? <<Confirm>>
COMMANDER: clean dirty plate <<Instruction>>
DRIVER: <observe>
COMMANDER: plate is beside wash basin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what are we doing today <<RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is the task today? <<RequestForInstruction>>
COMMANDER: make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: the bread need to be sliced using a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: I need the knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: and also the bread needs to be toasted <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: knife please <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: the knife is below the microwoven cupbord <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: what cupboard? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: sorry above the cupboard <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: above the microoven cupboard <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: yeah open it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: middle cupboard <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response: