Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: i'd like breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: first i need coffee <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
COMMANDER: cook 2 slice potato <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Water the plant.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: our goal today is to water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what should i do? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: if you go to the sink do you see a cup or a bowl or anything <<Instruction>>
DRIVER: <observe>
COMMANDER: ooh behind the statue <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all RemoteControl on one Sofa.
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER: place 2 remotes onto single chair sofa <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all PepperShaker in any Cabinet.
COMMANDER: <observe>
DRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Good day.  How may I assist? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: Make a salad <<Instruction>>
DRIVER: <observe>
COMMANDER: First <<Instruction>>
DRIVER: <observe>
COMMANDER: Slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: There's one in the cabnet on top of the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: Lettuce is sliced.  Next step? <<Acknowledge,RequestForInstruction>>
COMMANDER: Next, tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: Next you clean the plate that's on the chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Tomato is sliced.  Next? <<Acknowledge,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: Read my previous message! <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: Place two slices of tomato and a lice of lettuce on the plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER response: