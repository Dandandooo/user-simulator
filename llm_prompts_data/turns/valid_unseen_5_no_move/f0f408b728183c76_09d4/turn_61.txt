Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Water the plant.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: please water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: You need to water the plant. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pour HousePlant>
COMMANDER: <observe>
DRIVER: Anything else? <<RequestMore>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
FeedbackPositive

Example :
Goal: Put all RemoteControl on any ArmChair.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: first put the remote control on the armchair <<Instruction>>
DRIVER: <observe>
COMMANDER: please check the remotecontrol in the box <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: just check on top of that dining table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: What do you need today? <<RequestForInstruction>>
COMMANDER: please make me toast on a clean plate! <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: of course! <<Acknowledge>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all AlarmClock on any Bed.
COMMANDER: could you do me a favour and put both my alarm clocks on my bed please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I'll get straight to it <<Acknowledge>>
COMMANDER: theres one on the green chair in front of you <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a salad.
COMMANDER: Hello. We need to make a salad <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: You will need a knife. It is showing that the knife is in the fridge. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what do I need to slice? <<RequestForInstruction>>
COMMANDER: Hello! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: Lettuce, Tomato, and Potato. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: First get the knife. <<Instruction>>
DRIVER: <observe>
COMMANDER: Great! <<Acknowledge>>
DRIVER: <observe>
COMMANDER: It says the lettuce is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: sliced it <<Acknowledge>>
COMMANDER: Now we need to slice a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: It is showing the tomato in the trash bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: To your right. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: We now need to slice a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: It is showing the potato in the drawer to the left of the oven <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: I believe it is the middle drawer <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: Now it is showing a different potato in the trash with the tomato <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: sliced it <<Acknowledge>>
COMMANDER: Two slices of potato will need to be cooked. <<Instruction>>
DRIVER: <observe>
COMMANDER: Good work <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: You are done cutting. <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: next? <<RequestMore>>
COMMANDER: You need to cook two slices of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Pan>
COMMANDER: One more piece of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: You are very efficient! <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Pan>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: Now everything needs to go on a clean plate. <<Instruction>>
DRIVER: <observe>
COMMANDER: The plate says it is already cleaned. <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: It says there is a plate in the cabinet to the left of the microwave. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: Potatoes, Lettuce, and Tomato need to go on the plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: Good work <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: Now the lettuce. <<Instruction>>
DRIVER: <observe>
COMMANDER response: