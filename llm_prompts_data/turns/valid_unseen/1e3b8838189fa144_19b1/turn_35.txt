Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.
COMMANDER: make toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: knife in fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
Deny

Example :
Goal: Serve 3 slice(s) of Lettuce on a Plate.
COMMANDER: <observe>
DRIVER: what should i do? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: I need 3 slices of lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is lettuce? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: lettuce is on the table at the end of the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.
COMMANDER: Hello there! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what shall i do ? <<RequestForInstruction>>
COMMANDER: today we're going to boil a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hello what can I do? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: prepare coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Newspaper on one SideTable.
COMMANDER: <observe>
DRIVER: hi how can i helpl today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: I need the newspapers on the same sidetable <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, i see a newspaper on teh couch! <<Acknowledge>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Watch in one Box.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: i need my watch put in a box <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where is it? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup TissueBox>
COMMANDER: the watch is behind the small black desk table on the white shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: where is the box? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: in the drawer below and to the right of the laptop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: there is already a watch in there <<InformationOther>>
COMMANDER: <observe>
DRIVER: cant fit both it seems <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: <observe>
DRIVER: <pickup TissueBox>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: <observe>
DRIVER: wait <<MiscOther>>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER: <observe>
DRIVER: <putdown Box>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: that it? <<RequestMore>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: there's another watch on the black desk table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: to right of lamp <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response: