Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hello. <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What am I doing today? <<RequestForInstruction>>
COMMANDER: prepare coffee in a clean mug <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: Where can I find the mug, please? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: I want a salad, one sliced lettuce and two tomato slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok where's the lettuce? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: please slice the lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: knife is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you <<Acknowledge>>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Ladle in one Drawer.
COMMANDER: <observe>
DRIVER: whats first? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: put all laddle in one drawer <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: laddle? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: what thats? <<RequestForInstruction>>
COMMANDER: one ladle is right to microven <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: english word? <<MiscOther>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: like spoon <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Ladle>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: any drawer <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: yes that one <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: another ladlle in microven <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <pickup Ladle>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: close it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: ?? <<MiscOther>>
COMMANDER: put 2 laddle in drawer bottom of toaster <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response: