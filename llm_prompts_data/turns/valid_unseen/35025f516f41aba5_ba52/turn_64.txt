Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: Today you will make  a salad <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Prepare breakfast.
COMMANDER: Good day! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Today we are going to prepare breakfast. <<Instruction>>
DRIVER: <observe>
COMMANDER: First prepare coffee in a clean mug. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: the mug is on the table next tot he fridge. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: By the spatula. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: Make a slice of tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: What should I do today <<RequestForInstruction>>
COMMANDER: today we will be washing plates. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: check the cupboard to the right of the dishwasher <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: like the cupboard near the white appliance. there's an egg and kettle on the counter over there too <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: to the right of the appliance <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Put all RemoteControl on any Sofa.
COMMANDER: <observe>
DRIVER: Hi, how can I help today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: i need you to put my 3 remotes onto the sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: on it! <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hi how can i help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: i want some breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: sure thing <<Acknowledge>>
COMMANDER: you can start with some coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: is there a mug? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: yeah it's by the coffeemaker <<Affirm,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: coffee is done i think <<Acknowledge>>
COMMANDER: great, now i'd like a toasted tomato sandwich <<FeedbackPositive,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the bread? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: cabinet above the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: to the right <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: is there a plate? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: yeah in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response: