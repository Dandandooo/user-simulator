Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: I would like you to make breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: first you should make coffee in a clean coffee mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER: Hi. We're making a salad today. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch on any SideTable.
COMMANDER: <observe>
DRIVER: what is my task <<RequestForInstruction>>
COMMANDER: put all watches on any side table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown SideTable>
COMMANDER: <observe>
DRIVER: where are the rest <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what task today <<RequestForInstruction>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Hello. <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what to do <<RequestForInstruction>>
COMMANDER: Today you will boil a potato a potato and water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the potato <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: You can find a potato on the counter to the left of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: what next <<RequestMore>>
COMMANDER: The potato needs to go into a pan of water and boiled on the stove. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: It looks like there is already a pen on the stove I'm not sure if there's a potato in it or what but you can check it out <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: If it is a potato it should just be a matter of turning the stove on and off again. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle on StoveKnob>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: Guess you have to empty the pan from all the other stuff first. LOL <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: You should probably take it to the sink empty the water remove all the items from the pan refill the pan and then try boiling the potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response: