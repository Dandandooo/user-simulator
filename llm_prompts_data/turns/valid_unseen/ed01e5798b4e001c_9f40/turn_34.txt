Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: whats first <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: the plant needs to be watered <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: go near to sink <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Watch on one Furniture.
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER: ☐ The Watch needs to be put onto a single Furniture
☐ The Watch needs to be put onto a single Furniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: The first watch is on the couch next to the laptop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: make 2 slices of tomtoes please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: where can i find a knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Pillow on any Sofa.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: Place the pillow on the sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: It is a pink/red pillow <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: where is the pillow? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: Pick it up. <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: hi, what should i do today <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: ? <<MiscOther>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: slice a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: knife please? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Fork in one Drawer.
COMMANDER: grab the fork <<Instruction>>
DRIVER: <observe>
COMMANDER: on the counter at the end <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Alright <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: put in a single drawer <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: any drawer <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: that opens <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: place in the drawer <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: its the drawer under the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: and you grab the wrong fork <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: you have to follow my lead <<InformationOther>>
DRIVER: <observe>
COMMANDER: 'grab the fork at the end of the counter <<Instruction>>
DRIVER: <observe>
COMMANDER: next to the spoon <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: Done <<Acknowledge>>
COMMANDER: next fork by the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: do the smae and we done <<Instruction>>
DRIVER: <observe>
COMMANDER response: