Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Spatula in any Cabinet.
COMMANDER: <observe>
DRIVER: how can i help? <<RequestForInstruction>>
COMMANDER: Hi, today I'd like to gather all my spatula's in a single cabinet <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: The first can be found in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Pillow on any ArmChair.
COMMANDER: <observe>
DRIVER: How can I help? <<RequestForInstruction>>
COMMANDER: hi, please put all pillows on any arm chair <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: there are three pillows <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Plate in any Cabinet.
COMMANDER: How <<Confirm>>
DRIVER: <observe>
COMMANDER: Find all plates and put them in the cabinet <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is my task today? <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: rinse the mug on the coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: then fill the mug with coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Pillow on any Sofa.
COMMANDER: <observe>
DRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hello please put pillow on sofa <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: what is next? <<RequestForInstruction>>
COMMANDER: pillow o desk <<Instruction>>
DRIVER: <observe>
COMMANDER: on <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: What tasks do I today? <<RequestForInstruction>>
COMMANDER: grab the mug from the coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: take it to the sink <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: clear the sink first <<Instruction>>
DRIVER: <observe>
COMMANDER: then place and run water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have grabbed the mug from the coffee maker. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup DishSponge>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Spoon>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: I have cleared the sink. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: I have placed the mug in the sink. <<Acknowledge>>
COMMANDER: run water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: I have tuerned the tap on. What next? <<Acknowledge,RequestForInstruction>>
COMMANDER: turn off then remove the mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: turned* <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: take back to the coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have removed the mug. <<Acknowledge>>
COMMANDER: make sure its empty <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: But the mug still has water <<NotifyFailure>>
COMMANDER: dump the water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: go back to the coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: place then start it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have poured the water. Now going to the coffee maker. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: start <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have placed the mug on the coffee maker <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: I have started it. <<Instruction>>
COMMANDER: go find a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What next? <<RequestForInstruction>>
COMMANDER: in the drawer under the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. going to find knife. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: the right side cabinet <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: grab that <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: you had it right <<Instruction>>
DRIVER: <observe>
COMMANDER response: