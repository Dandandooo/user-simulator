Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a plate of toast.

COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: Good day! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER response:
Instruction

Example :
Goal: Put all RemoteControl on any Chairs.
COMMANDER: We need to put all remotes omto a chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Can you find me remote? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: Sure <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: Remotecontrol is on chair <<InformationOnObjectDetails>>
COMMANDER response:
Instruction

Example :
Goal: Prepare breakfast.

COMMANDER response:
OBSERVE

Example :
Goal: Put all Fruit in any Fridge.
COMMANDER: <observe>
DRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: i left my fruit out, could you put them in the fridge for me <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Bottle in one Cabinet.
COMMANDER: <observe>
DRIVER: Hello. How may I help <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Could you please place all the bottles in a single cabinet for me <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: there is a bottle to the left of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup SoapBottle>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: and another to the right of the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Bottle>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Bottle>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: Where is another bottle please? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: There is another bottle below the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: The coffee maker is in the corner of the room <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Bottle>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: Is there a large cabinet that can fit all three? <<RequestOtherInfo>>
COMMANDER: Try placing it in a cabinet next to that one <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: Hmm I think they all need to be in the same cabinet <<InformationOther>>
DRIVER: <observe>
COMMANDER: I will have a look for larger ones <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: Below the coffee machine might be a big enough space <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: if you try and clear out other items <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response: