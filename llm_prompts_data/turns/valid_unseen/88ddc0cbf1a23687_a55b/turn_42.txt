Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 1 slice(s) of Potato and serve in a Bowl.

COMMANDER response:
OBSERVE

Example :
Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER: slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
Instruction

Example :
Goal: Cook 2 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: cook me two slices of potato and serve it on a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure thing <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 5 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can you cook 5 slices of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: the potato is on the shefl <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: shelf* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all RemoteControl on one Tables.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: 2 remotes <<Instruction>>
DRIVER: <observe>
COMMANDER: put in a single table <<Instruction>>
DRIVER: <observe>
COMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: 2 in cream sofa <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: on tne long sofa? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: yes <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: 2 remotes <<Instruction>>
DRIVER: <observe>
COMMANDER: 1 in grey sofa <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: 2 in cream long sofa back side of the laptop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: put 2 in one brown table left side <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: time runs out <<InformationOther>>
DRIVER: <observe>
COMMANDER: do it quick <<Instruction>>
DRIVER: <observe>
COMMANDER: only 30 sec left <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ive put 1 <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where do I put the 2nd 1 <<AlternateQuestions>>
COMMANDER: on that table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: left small table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: dark brown table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: pick 2nd remote backside ofthe laptop in cream long sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: put it on small table left side <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: yes <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown SideTable>
COMMANDER: put the 2 remotes on the same table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response: