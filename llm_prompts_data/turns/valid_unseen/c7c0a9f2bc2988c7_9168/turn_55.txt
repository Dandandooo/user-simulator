Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Hi. Today we are making breakfast. First make coffee. The mug is next to the coffee maker <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: what next <<RequestForInstruction>>
COMMANDER: there is a tomato under the coffee pot. Please slice it <<InformationOnObjectDetails,Instruction>>
DRIVER: <observe>
COMMANDER: coffee maker, not pot <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response:
OBSERVE

Example :
Goal: Put all TissueBox on one Dresser.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: tissue box in the table drawee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <pickup KeyChain>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: another table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
Instruction

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: slice the lettuce twice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: where is lettuce? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: is on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare breakfast.
COMMANDER: Today we will prepare breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: first clean the mug so we can make coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: the mug is next to the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Rinse it then make coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: what do i do <<RequestForInstruction>>
COMMANDER: Lets start with slicing the bread <<Instruction>>
DRIVER: <observe>
COMMANDER: we need to make a toast <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: how may i help? <<RequestForInstruction>>
COMMANDER: Please cook 2 slices of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: of course <<Acknowledge>>
COMMANDER: You should be able to find the potato on the right cabinet under the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: The knife is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: The pan is on the table and will have to be cleaned <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Pan>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Pan>
COMMANDER: <observe>
DRIVER: 2 slices cooked, do you want them on a plate? <<Acknowledge,Confirm>>
COMMANDER: It doesn't seem like you cooked them <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: please try again <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Pan>
COMMANDER: Is there a potato in the sink or under it? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: i took the potato out from under the sink <<Acknowledge>>
COMMANDER: Strange <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: Was the pan cleaned? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Egg>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Egg>
COMMANDER: Okay! It worked now <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: It just updated. Thank you <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Apple>
COMMANDER: Let's put the slices in a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: The bowl is next to the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: awesome, sure thing <<Acknowledge>>
COMMANDER: <observe>
DRIVER: thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER response: