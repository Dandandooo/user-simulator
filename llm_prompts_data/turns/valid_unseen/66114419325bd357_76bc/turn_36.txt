Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.

COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
Instruction

Example :
Goal: Prepare breakfast.

COMMANDER response:
Instruction

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: hi what shall i do today <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: make a 1 slice tomate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is tomato <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what's the task <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: are you there <<MiscOther>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: prepare coffee in a clean mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the mug <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Hi. Today we are making breakfast. First make coffee. The mug is next to the coffee maker <<Greetings/Salutations,Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: what next <<RequestForInstruction>>
COMMANDER: there is a tomato under the coffee pot. Please slice it <<InformationOnObjectDetails,Instruction>>
DRIVER: <observe>
COMMANDER: coffee maker, not pot <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: Please slice it. There is a knife in the fridge <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: There should be one in the refrigerator <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: There's another one in the sink if you don't see it there <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where can i find another <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: there's one in the sink. Sorry, did you not get my last message? <<InformationOnObjectDetails,InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup PaperTowelRoll>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: next, cut some lettuce. It's in the refrigerator. <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response: