Imagine you are an embodied agent in a simulated world. Your purpose is to instruct a robot to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the robot based on turn history with the robot. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all AlarmClock on any Bed.

COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what can I do today? <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: lets clean a plate in water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 1 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: Hell0 <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What is my task please? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all DishSponge in any Sink.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: Please put the 2 sponges into the sink. You can begin with the one in the microwave <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Put all RemoteControl on one Sofa.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: The task? <<RequestForInstruction>>
COMMANDER: The RemoteControl needs to be put onto a single Sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: but all remote controls on one sofa <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where are the remotes? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Statue>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all RemoteControl on one Furniture.
COMMANDER: <observe>
DRIVER: what should i do? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: put all remote controls on one furniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: where is remote? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: remote is in dust bin beside the sofa <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: is that dust bin? <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: nothing there? <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: ok its showing remote for me <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: its a glitch <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: iam finishing it <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: go tit <<Acknowledge>>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: ok <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: another? <<RequestMore>>
COMMANDER: done <<Acknowledge>>
DRIVER: <observe>
COMMANDER: finish <<Acknowledge>>
DRIVER: <observe>
COMMANDER response: