Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a salad.
DRIVER: Hello! What shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hi! <<Greetings/Salutations>>
DRIVER: <move>
COMMANDER: today we'll be making a salad. <<Instruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all Newspaper on one ArmChair.
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
COMMANDER: Please place the newspapers on the same arm chair <<Instruction>>
DRIVER: <move>
COMMANDER: otherwise known as recliner <<Instruction>>
DRIVER: <pickup Newspaper>
COMMANDER response:
OBSERVE

Example :
Goal: Put all RemoteControl on one Chairs.
COMMANDER: Hi <<Greetings/Salutations>>
DRIVER: First task? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a plate of toast.
DRIVER: how can i help? <<RequestForInstruction>>
DRIVER: <move>
DRIVER: <toggle off Faucet>
COMMANDER: makea plate of toast please <<Instruction>>
DRIVER: <move>
DRIVER: sure <<Acknowledge>>
COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.

COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: what shall we do today <<RequestForInstruction>>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: ur commader what shall we do tody <<RequestForInstruction>>
DRIVER: no <<Deny>>
DRIVER: I'm the driver <<MiscOther>>
DRIVER: may be a glitch <<OtherInterfaceComment>>
COMMANDER: sorry we shall prepare a coffe in clean mug <<Instruction>>
COMMANDER: go find the mug <<Instruction>>
COMMANDER: and rinse it <<Instruction>>
COMMANDER response: