Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 2 slice(s) of Tomato in a Bowl.
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: Hello <<Greetings/Salutations>>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Fork in any Sink.
DRIVER: how may i help? <<RequestForInstruction>>
COMMANDER: So we need to put all the forks in the sinks <<Instruction>>
DRIVER: <toggle off Faucet>
DRIVER: <pickup Lettuce>
DRIVER: <putdown CounterTop>
DRIVER: <pickup SaltShaker>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Knife>
DRIVER: <putdown CounterTop>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
DRIVER: How can I help? <<RequestForInstruction>>
COMMANDER: Can you please cook 2 slices of potato? <<Instruction>>
DRIVER: sure <<Acknowledge>>
COMMANDER: thre's a potato in the sink <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: please make coffee with the mug next to the sink <<Instruction>>
DRIVER: <move>
DRIVER: <pickup Mug>
DRIVER: <putdown CoffeeMachine>
COMMANDER response:
FeedbackPositive

Example :
Goal: Water the plant.
DRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: water the plant please <<Instruction>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Clean all the Plates.
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: wash 2 dirty plates <<Instruction>>
DRIVER: what should i do today' <<RequestForInstruction>>
COMMANDER: one is on white round table <<InformationOnObjectDetails>>
COMMANDER: the another one is on same table <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup Plate>
DRIVER: <move>
DRIVER: <putdown CounterTop>
COMMANDER response: