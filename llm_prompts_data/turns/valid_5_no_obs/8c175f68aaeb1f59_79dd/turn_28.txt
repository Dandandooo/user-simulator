Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all AlarmClock on any Furniture.
COMMANDER: HI! <<Greetings/Salutations>>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Water the plant.
DRIVER: what can i help with? <<RequestForInstruction>>
COMMANDER: water my plant please! <<Instruction>>
DRIVER: <move>
DRIVER: <pickup Mug>
DRIVER: sure thing <<Acknowledge>>
DRIVER: i found a mug on the table with water in it <<Acknowledge>>
DRIVER: <pour HousePlant>
COMMANDER: Go for it! <<Instruction>>
DRIVER: done <<Acknowledge>>
COMMANDER response:
FeedbackPositive

Example :
Goal: Clean all the Cloths.
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: please clean the cloth <<Instruction>>
DRIVER: Okay <<Acknowledge>>
DRIVER: <move>
DRIVER: <pickup SprayBottle>
DRIVER: <putdown Bathtub>
COMMANDER: above the toilet <<InformationOnObjectDetails>>
DRIVER: Where is the cloth? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Clean all the Bowls.
DRIVER: first task? <<RequestForInstruction>>
COMMANDER: clean the bowl <<Instruction>>
DRIVER: <move>
COMMANDER: bowl is in lower cabinet of the sink <<InformationOnObjectDetails>>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: hey whats first? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Today we are making a slad <<Instruction>>
COMMANDER: Salad* <<Instruction>>
DRIVER: where is the components? <<RequestForObjectLocationAndOtherDetails>>
DRIVER: <move>
COMMANDER: First, slice the lettuce. We need two slices <<Instruction>>
DRIVER: <move>
DRIVER: where <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Cook 1 slice(s) of Potato and serve on a Plate.
DRIVER: What I can I do for you? <<RequestForInstruction>>
COMMANDER: Hi. Please cook a slice of potato and serve on a plate. <<Greetings/Salutations,Instruction>>
DRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>
DRIVER: <move>
DRIVER: <pickup Knife>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Potato>
DRIVER: <putdown CounterTop>
COMMANDER: In the fridge <<InformationOnObjectDetails>>
DRIVER: <pickup Knife>
DRIVER: <slice Potato>
DRIVER: <putdown CounterTop>
DRIVER: <move>
DRIVER: <open Fridge>
DRIVER: <pickup Egg>
DRIVER: This is an egg <<Acknowledge>>
DRIVER: <putdown Fridge>
DRIVER: <pickup Plate>
DRIVER: <move>
COMMANDER: It isnt showing me. You will have to look around <<NotifyFailure,Instruction>>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Lettuce>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Plate>
COMMANDER: Oh there is one left of the microwave <<InformationOnObjectDetails>>
DRIVER: <putdown CounterTop>
DRIVER: ok <<Acknowledge>>
DRIVER: <move>
COMMANDER response: