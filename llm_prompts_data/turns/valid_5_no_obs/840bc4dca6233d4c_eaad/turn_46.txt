Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: Clean the mug and prepare coffee <<Instruction>>
COMMANDER: mug is inside the fridge. <<InformationOnObjectDetails>>
DRIVER: ok <<Acknowledge>>
DRIVER: <move>
DRIVER: <open Fridge>
DRIVER: <pickup Mug>
DRIVER: <close Fridge>
DRIVER: <move>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
DRIVER: hi <<Greetings/Salutations>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all Apple in one Cabinet.
DRIVER: hi, what should i do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
COMMANDER: you need to put all apples in one cabinet <<Instruction>>
DRIVER: ok <<Acknowledge>>
DRIVER: where can i find apples? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: one is on the dinning table <<InformationOnObjectDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all AlarmClock on any Bed.

COMMANDER response:
Greetings/Salutations

Example :
Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
DRIVER: Hi <<Greetings/Salutations>>
DRIVER: What do we do today? <<RequestForInstruction>>
COMMANDER: make 2 pieces of potato <<Instruction>>
COMMANDER: potato is in the sink <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER: knife is the fridge <<InformationOnObjectDetails>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a plate of toast.
COMMANDER: make a plate of toast <<Instruction>>
DRIVER: what is my task today <<RequestForInstruction>>
DRIVER: where is bread and knife <<RequestForObjectLocationAndOtherDetails>>
DRIVER: <move>
DRIVER: <open Cabinet>
COMMANDER: bread in in the fridge <<InformationOnObjectDetails>>
DRIVER: <close Cabinet>
DRIVER: <move>
DRIVER: <open Fridge>
COMMANDER: knife is in the fridge too <<InformationOnObjectDetails>>
DRIVER: <pickup Bread>
DRIVER: <move>
DRIVER: <putdown CounterTop>
DRIVER: <move>
DRIVER: <pickup Knife>
DRIVER: <move>
DRIVER: <close Fridge>
DRIVER: <move>
DRIVER: <slice Bread>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Bread>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Bread>
DRIVER: <move>
DRIVER: <putdown Toaster>
COMMANDER: clean the dirty plate on the dining table <<Instruction>>
DRIVER: <move>
DRIVER: <toggle off Toaster>
DRIVER: <pickup Bread>
DRIVER: <putdown CounterTop>
DRIVER: <move>
DRIVER: 1 piece or what <<RequestOtherInfo>>
COMMANDER: yes just 1 piece <<Instruction>>
DRIVER: where is the plate <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: the olate is on the dining table <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER: near the door <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup Plate>
DRIVER: <move>
DRIVER: <putdown CounterTop>
DRIVER: <pickup PaperTowelRoll>
DRIVER: <putdown Sink>
DRIVER: <pickup Spoon>
DRIVER: <putdown Sink>
DRIVER: <pickup Fork>
COMMANDER response: