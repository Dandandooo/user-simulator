Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Spatula in one Cabinet.

COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Plates.
DRIVER: what do i do? <<RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Prepare coffee in a clean mug.
DRIVER: hi <<Greetings/Salutations>>
DRIVER: what can i do <<RequestForInstruction>>
DRIVER: <move>
COMMANDER: grab mug and place in coffee maker <<Instruction>>
COMMANDER: thats it <<Instruction>>
DRIVER: ok where is the mug <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: nug is on the chair <<InformationOnObjectDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a plate of toast.
DRIVER: hi <<Greetings/Salutations>>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER: First, slice the bread <<Instruction>>
DRIVER: <move>
DRIVER: <pickup Knife>
COMMANDER: Knife is next to the sink <<InformationOnObjectDetails>>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
DRIVER: How can I help? <<RequestForInstruction>>
COMMANDER: Let's water the plant <<Instruction>>
DRIVER: Sure <<Acknowledge>>
DRIVER: <move>
DRIVER: <pickup Bowl>
DRIVER: <move>
DRIVER: <pour HousePlant>
DRIVER: Hows that? <<RequestMore>>
COMMANDER response:
FeedbackPositive

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all SaltShaker in one Cabinet.
DRIVER: what do I need to do? <<RequestForInstruction>>
COMMANDER: the saltshaker needs to be put into a single cabinet <<Instruction>>
DRIVER: <move>
DRIVER: <pickup PepperShaker>
DRIVER: Is any cabinet fine? <<RequestOtherInfo>>
DRIVER: <move>
COMMANDER: i think so <<InformationOther>>
DRIVER: <putdown CounterTop>
DRIVER: <open Drawer>
DRIVER: <pickup PepperShaker>
DRIVER: <putdown Drawer>
DRIVER: <close Drawer>
DRIVER: anything else? <<RequestForInstruction>>
COMMANDER: was that a drawer you put it in? <<Confirm>>
COMMANDER: try a cabinet and not a drawer please <<InformationOnObjectDetails>>
DRIVER: yes <<Affirm>>
DRIVER: ok <<Acknowledge>>
DRIVER: <open Drawer>
DRIVER: <pickup PepperShaker>
DRIVER: <close Drawer>
DRIVER: <move>
DRIVER: <open Cabinet>
DRIVER: <putdown Cabinet>
DRIVER: <close Cabinet>
DRIVER: all set? <<Confirm>>
COMMANDER: no, says it needs a single cabinet <<InformationOther>>
COMMANDER: maybe because that one has two doors? <<InformationOther>>
DRIVER: ok, I'll try the others <<Acknowledge>>
DRIVER: <open Cabinet>
COMMANDER response: