Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all SportsEquipment on any Bed.
COMMANDER: <observe>
DRIVER: Hi! What am I   doing today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Put all SportsEquipment on any Bed <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup BaseballBat>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: What is your bidding? <<RequestForInstruction>>
COMMANDER: can you please make coffee in a clean mug? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: of course <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: It looks clean. Shall I wash it to make sure? <<Acknowledge,RequestOtherInfo>>
COMMANDER: i don't think you need to <<Deny>>
DRIVER: <observe>
COMMANDER response:
Affirm

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: i'd like my plant watered <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER response:
OBSERVE

Example :
Goal: Put all PepperShaker in any Cabinet.
COMMANDER: <observe>
DRIVER: how can help <<RequestForInstruction>>
COMMANDER: I need you to put the pepper shaker in the cabinet <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where can I find it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: You can find the pepper shaker on the shelf next to the kitchen counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Water the plant.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: our goal today is to water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what should i do? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: if you go to the sink do you see a cup or a bowl or anything <<Instruction>>
DRIVER: <observe>
COMMANDER: ooh behind the statue <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: on the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: there's a cup there <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: if you put that cup in the sink it will fill up with water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: i do not see anything <<NotifyFailure>>
COMMANDER: look to the left of the stove it's a green cup <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: a bowl should work too <<Instruction>>
DRIVER: <observe>
COMMANDER: the plant is directly in front of you on the opposite side of the counter to the left <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: one sec i got a bloody nose <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pour HousePlant>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: ok great thank you so much <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER response: