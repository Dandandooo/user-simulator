Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: what do you need me to do? <<RequestForInstruction>>
COMMANDER: water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: just need to get water into a container and pour onto plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: We need to make a salad <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what is my task? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: what is first? <<RequestForInstruction>>
COMMANDER: Slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: <putdown Chair>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER response:
Instruction

Example :
Goal: Water the plant.
COMMANDER: the plant needs to be watered <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what should i do for today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: where is the plate? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: use any cup  to water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: the plant is on the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okok <<Acknowledge>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: hi clean all plates <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what task today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: where are they? <<InformationOnObjectDetails>>
COMMANDER: the plate is next to the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hello, how can I help you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: Can I help you with a task? <<RequestForInstruction>>
COMMANDER: can you please make a plate of toast, and 2 slices of cooked potato, and 1 slice of apple on a plate? :) <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Pencil on any Furniture.
COMMANDER: <observe>
DRIVER: First task please? <<RequestForInstruction>>
COMMANDER: put all pencils on any furniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: what furniture? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: any furniture? <<RequestForInstruction>>
COMMANDER: the pensil is in the grey bin by the desk <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: any furniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: glitch <<OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: cant grab the pencil <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: its not even green <<OtherInterfaceComment>>
COMMANDER: the penmove to the side <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: grey <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pencil>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown Desk>
COMMANDER response: