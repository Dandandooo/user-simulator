Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 3 slice(s) of Potato and serve in a Bowl.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: cook 3 slices of potatos and serve in the bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: the potato is in the shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: the knife is in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <putdown Microwave>
COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: Hello. How are we beginning? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hi there <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: We are going to boil a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the potato located? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: The potato is infront of you ontop of the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have it. <<Acknowledge>>
COMMANDER: Great <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What do we do today? <<RequestForInstruction>>
COMMANDER: make 2 pieces of potato <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Watch on any Furniture.
COMMANDER: <observe>
DRIVER: how may i help? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: Put the watch in the small white box on the sofa or table <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: what should I do? <<RequestForInstruction>>
COMMANDER: Hello, please make a salad. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: There is a knife on the table. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Newspaper on one Sofa.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: put the newspaper on the sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: there is 3 <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: there is one on the wall shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the newspaper <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: over the black stand <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: top shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: another on on the shelf next to that shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: middle shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: last one in dresser drawer <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: under the lamp <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: pass it <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: dresser with lamp on it <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: thats a desk <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: right drawer <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER response: