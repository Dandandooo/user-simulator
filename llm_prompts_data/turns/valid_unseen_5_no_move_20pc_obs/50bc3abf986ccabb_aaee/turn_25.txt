Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: hello, how can i help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Please serve one slice of tomato on a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: there's a tomoato in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: the knife is next to the coffee machine <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: hi, what can i do for you today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: I need you to water my plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER response:
Instruction

Example :
Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER: slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: then clean a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: How can I help? <<RequestForInstruction>>
COMMANDER: please prepare a coffee in a clean mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Pans.
COMMANDER: <observe>
DRIVER: Hi, what are we doing? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: rinse dirty pans with water <<Instruction>>
DRIVER: <observe>
COMMANDER: first pa is on thestove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: pan* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: pan <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: please slice the lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: knife is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: now slice the tomato in the bin <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: OK <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: Tomato sliced. What's next? <<Acknowledge,RequestForInstruction>>
COMMANDER: now get the plate in the bottom most drawer beside the stove <<Instruction>>
DRIVER: <observe>
COMMANDER: put one slice of each <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: OK <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: No plate <<NotifyFailure>>
COMMANDER: the system is crazy <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: now it is showing in the fridge <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER response: