Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hi. What can i do for you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: slice bread first <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: Hi. Please serve 2 slices of tomato on a plate. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is tomato please <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: There is one in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what can I do today? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: cook 1 slice of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Mugs.
COMMANDER: <observe>
DRIVER: Hi, how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can you clean a mug for me <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: there is one on the countertop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: you got it, thank you <<Acknowledge,FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER response:
FeedbackPositive

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is my task? <<RequestForInstruction>>
COMMANDER: prepare coffee in a clean mug <<Instruction>>
DRIVER: <observe>
COMMANDER: mug is inside the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: 2 slices of bread toast <<Instruction>>
DRIVER: <observe>
COMMANDER: bread is in the dustbin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: knife is beside the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: 1 tomato slice <<Instruction>>
DRIVER: <observe>
COMMANDER: tomato is in the drawer left to the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: sure? <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: another tomato is in the cabinet above the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: 2 toasts and 1 slice tomato onto a plate please <<Instruction>>
DRIVER: <observe>
COMMANDER: plate is inside the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER response: