Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 5 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is my task? <<RequestForInstruction>>
COMMANDER: Slice the potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Mugs.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: The major task is clean all the mugs <<Instruction>>
DRIVER: <observe>
COMMANDER: The mug is in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: to your right <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER response:
Instruction

Example :
Goal: Serve 3 slice(s) of Lettuce on a Plate.
COMMANDER: How can I help <<RequestForInstruction>>
DRIVER: <observe>
COMMANDER: Whoops <<MiscOther>>
DRIVER: <observe>
COMMANDER: Today could you slice a lettuce in 3 pieces for me <<Instruction>>
DRIVER: <observe>
COMMANDER: Then place it on a clean plate <<Instruction>>
DRIVER: <observe>
COMMANDER: There should be a knife in the cupboard above the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: hello, task plz <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: We need to water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: hi how can i help <<RequestForInstruction>>
COMMANDER: please boil a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: where can i find a pot to fill with water <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: how may i serve you? <<RequestForInstruction>>
COMMANDER: make coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is a mug please? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: mug in the coffeemaker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup WineBottle>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: empty then place back in coffeemaker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: make a sandwich next <<Instruction>>
DRIVER: <observe>
COMMANDER: slice bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the knife? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: look under the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: the bread is sliced <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: toast 2 slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response: