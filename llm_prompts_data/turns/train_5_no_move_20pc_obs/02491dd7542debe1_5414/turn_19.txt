Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: could you please make me a plate of toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hi what are my directions <<Greetings/Salutations,RequestForObjectLocationAndOtherDetails>>
COMMANDER: Please slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: lettuce is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Cup in one Cabinet.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: first, we need to find the cup <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Watch in one Box.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: we need to locate watches <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Pillow on any Sofa.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what can I do today? <<RequestForInstruction>>
COMMANDER: Hello. We are finding pillows and putting them on a sofa. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: there is one on a table in the corner <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: what can i do today <<RequestForInstruction>>
COMMANDER: make toast <<Instruction>>
DRIVER: <observe>
COMMANDER: slice bread on the counter <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: then toast after you slice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: 1 slice only <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: a plate is in the top cabinet next to the wall <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: next to the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: top cabinet <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response: