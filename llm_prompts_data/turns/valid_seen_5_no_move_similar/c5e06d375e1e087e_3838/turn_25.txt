Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Watch on one Tables.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: put all Watch on one Tables <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the watch? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER response:
OBSERVE

Example :
Goal: Put all RemoteControl on one SideTable.
COMMANDER: <observe>
DRIVER: what can we do today <<RequestForInstruction>>
COMMANDER: Please place the remote on a single side table. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the remote please <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: The remote in located in the lower right cabinet of the dresser <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown SideTable>
COMMANDER: <observe>
DRIVER: done next? <<Acknowledge>>
COMMANDER response:
FeedbackPositive

Example :
Goal: Put all Watch on any Furniture.
COMMANDER: <observe>
DRIVER: how may i help? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch on one SideTable.
COMMANDER: <observe>
DRIVER: Hi what should I do today <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: Hey <<Greetings/Salutations>>
COMMANDER: today we need to put all watches  on side table <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Newspaper on one SideTable.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: i need my newspapers put on the side table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where are they? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: on the couch <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: <observe>
DRIVER: <putdown SideTable>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: there's another one on the shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown SideTable>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: please take the bread out of the fridge and slice it with the knife in the sink <<Instruction>>
DRIVER: <observe>
COMMANDER: the two slices will then need to be toasted <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: whilst they are toasting please take the tomato from the stool and slice it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response: