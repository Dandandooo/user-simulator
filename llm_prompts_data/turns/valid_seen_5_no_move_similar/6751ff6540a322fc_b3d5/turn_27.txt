Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all RemoteControl on one ArmChair.
COMMANDER: <observe>
DRIVER: How can I help? <<RequestForInstruction>>
COMMANDER: please can you put the remotes, 2 of them on the single armchair, please <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: one is in teh bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Newspaper on one Furniture.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: first task? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all RemoteControl on one Sofa.
COMMANDER: <observe>
DRIVER: hi, how can i help you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch on any Furniture.
COMMANDER: <observe>
DRIVER: hi what is the task today <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: all watches <<Instruction>>
DRIVER: <observe>
COMMANDER: in one place <<Instruction>>
DRIVER: <observe>
COMMANDER: on a piece of furnitture please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: can you help me find watches <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Pillow on any Chairs.
COMMANDER: <observe>
DRIVER: What am i doing today <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: get the pillows and put them on the chair <<Instruction>>
DRIVER: <observe>
COMMANDER: two pillows are on the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: the last one is on the furniture under the tv <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: hello, what is my task today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello! We are going to prepare breakfast. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: First, a cup of coffee please <<Instruction>>
DRIVER: <observe>
COMMANDER: tHE MUG IS IN THE TRASHCAN BEHIND YOU <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: coffee mug <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: Great. Everything needs to be placed on the dining table when completed. <<FeedbackPositive,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: one coffee <<RequestOtherInfo>>
COMMANDER: Yes please <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: did it complete? <<Confirm>>
COMMANDER: Yup! <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: next plz <<RequestMore>>
COMMANDER: Next place make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: kNIFE IS IN THE FRIDGE <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: Ugh... so sorry about the CAPS <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: Bread needs to be toasted <<Instruction>>
DRIVER: <observe>
COMMANDER response: