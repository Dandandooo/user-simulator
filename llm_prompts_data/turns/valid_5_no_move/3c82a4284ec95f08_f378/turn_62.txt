Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: how can i help? <<RequestForInstruction>>
COMMANDER: can you please make coffee? <<Instruction>>
DRIVER: <observe>
COMMANDER: a mug is in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: of course <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: task? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all SmallHandheldObjects on one Furniture.

COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all AlarmClock on any Bed.
COMMANDER: <observe>
DRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello...We need to take the alam clcoks and place on the bed <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER: <observe>
DRIVER: I   have placed 1 alarm clock on the bed. Are there more? <<Acknowledge,RequestMore>>
COMMANDER: Take the alarm clock that was already on the bead and move it to a different spot <<InformationOnObjectDetails,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 1 slice(s) of Lettuce on a Plate.
COMMANDER: <observe>
DRIVER: How can i help <<RequestForInstruction>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What can I do? <<RequestForInstruction>>
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: First we need a tomato sliced <<Instruction>>
DRIVER: <observe>
COMMANDER: The tomato is in the upper cabinet to the right of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: and knife <<InformationOnObjectDetails>>
COMMANDER: The knife is in the 2nd drawer down to the left of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: there <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: The knife is in the drawers to the left of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: 2nd one odwn <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Turn around <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: GO all the way left <<Instruction>>
DRIVER: <observe>
COMMANDER: to the stove then look at the drawers there. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: there <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: next drawer <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: No knife...One sec <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: I'm looking for one. System keeps showing same drawer <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: There is a butter knife on the counter in front of the salt shaker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: let me open each drawer <<Acknowledge>>
COMMANDER: Turn right <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: come to the end of the knook <<Instruction>>
DRIVER: <observe>
COMMANDER: nook <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: should I turn right? <<Confirm>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: The knife is on the breakfast nook in front of the salt shaker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: Do you see it. it kind of blends into the countertop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: yup <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: Now lets slice the tomato and put a slice in the bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: The bowl is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: The tomato is on the counter to the right of the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: left <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: let me get the bowl <<Acknowledge>>
COMMANDER: k <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: You'll nee d empty and wash that <<Instruction>>
DRIVER: <observe>
COMMANDER: Clear objects in sink first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response: