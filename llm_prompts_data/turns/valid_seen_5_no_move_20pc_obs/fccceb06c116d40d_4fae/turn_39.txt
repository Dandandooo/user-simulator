Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is task <<RequestForInstruction>>
COMMANDER: pls make coffee with the mug int he microwave <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Candle on any Tables.
COMMANDER: <observe>
DRIVER: what should i do <<RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: Put the candle on a table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is candle <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: check on the couch <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Candle>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CoffeeTable>
COMMANDER response:
FeedbackPositive

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: what can i do for you? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a sandwich.
COMMANDER: Hello. <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: We are making a sandwich. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what can i do for you today <<RequestForInstruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 1 slice(s) of Lettuce on a Plate.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER response:
Greetings/Salutations

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Serve 2 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: hello how can I help today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can i please have two slices of tomato in a clean bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, do you know where the bowl is? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: in the fridge i believe <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: it should already be clean <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: how about the knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: the drawer in front of the tea kettle? <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Bowl>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER response: