Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]



Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Cook 4 slice(s) of Potato and serve in a Bowl.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: we need to get a potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: look in the pot beside the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Apple>
COMMANDER: sorry <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: I think this is an apple <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Inside the pot with water? <<RequestOtherInfo>>
COMMANDER: it is on the other side of the stove. near the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: I have it <<Acknowledge>>
COMMANDER: we need 4 slices. please pick up the knife and slice the potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Apple>
COMMANDER: <observe>
DRIVER: <putdown Stool>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: pick up the pan that is on the left side of the stove near the wall <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: place the pan on the front right burner <<Instruction>>
DRIVER: <observe>
COMMANDER: then put a slice of potato in the pan <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: try putting the potato in the pot on the back left burner <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Im having a hard time placing the pan <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: I think i told you wrong. It should probably be put in the pot of water. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: <observe>
DRIVER: 4 slices? <<MiscOther>>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: yes please <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: It may only take on slice at a time. <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: When you take the slices out of the pot, they should go in a bowl. <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Pot>
COMMANDER: <observe>
DRIVER: placed <<Acknowledge>>
COMMANDER: <observe>
DRIVER: what next? <<RequestMore>>
COMMANDER: <observe>
DRIVER: to boil? <<RequestOtherInfo>>
COMMANDER: yes. Turn on the burner <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle on StoveKnob>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: boiled <<Acknowledge>>
COMMANDER: Now place all 4 slices in a clean bowl. <<Instruction>>
DRIVER: <observe>
COMMANDER response: