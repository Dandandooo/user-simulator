Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]



Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: making toast today <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the toast? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: go to te bottom drawer on the bottom left side of the oven <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: the bread is in the frig <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: knife in the drawer next to the oven on the bottom left side <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: actually there is a knife in the frig <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: use that one' <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: slice the bread after you grab the knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: grab a slice and toast it <<Instruction>>
DRIVER: <observe>
COMMANDER: 2 slices total <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: grab a plate first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: by the oven their is a dirty plate <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the toaster <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: with a cup on top <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: grab it an clean it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay I have deen the plate <<Acknowledge>>
COMMANDER: to your left is the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: you pass it <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: okay I have seen the toaster <<InformationOther>>
COMMANDER: place the bread down and grab the plate first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: because you need the plate to put the bread on <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: grab the plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay noted <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: empty sink first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: and turn off water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: on it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: place plate on counter and grab toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: turn on toaster first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: 1 at a time <<Instruction>>
DRIVER: <observe>
COMMANDER: turn on the toaster <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: place toast on plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: then place next bread in toaster <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: place toast on plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: grab lettuce on the counter <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: slice lettuce and place on same plate as toast <<Instruction>>
DRIVER: <observe>
COMMANDER response: