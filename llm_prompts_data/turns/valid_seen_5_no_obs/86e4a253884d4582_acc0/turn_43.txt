Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Clean all the Tablewares.
DRIVER: how can i help today? <<RequestForInstruction>>
DRIVER: <pickup Tomato>
DRIVER: <putdown CounterTop>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Candle on one Tables.
DRIVER: what should I do? <<RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Clean all the Plates.
DRIVER: how may i help you? <<RequestForInstruction>>
COMMANDER: Hi, I have a neat task for you today. I'd like all my plates cleaned please <<Greetings/Salutations,Instruction>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Clean all the Drinkwares.
DRIVER: my task <<RequestForInstruction>>
COMMANDER: clean the coffee mug <<Instruction>>
COMMANDER: it is inside the coffee maker <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup Mug>
DRIVER: <pour Sink>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: make a sale <<Instruction>>
COMMANDER: salad <<Instruction>>
COMMANDER: slice lettuce first <<Instruction>>
DRIVER: ok <<Acknowledge>>
COMMANDER: lettuce by the toaster <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare coffee in a clean mug.
DRIVER: hi <<Greetings/Salutations>>
DRIVER: what is my task? <<RequestForInstruction>>
COMMANDER: wash the mug <<Instruction>>
COMMANDER: mug is in the sink <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup Mug>
DRIVER: <pour Sink>
COMMANDER: put coffee in the mug <<Instruction>>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Mug>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Mug>
DRIVER: <putdown CoffeeMachine>
DRIVER: <toggle off CoffeeMachine>
DRIVER: done <<Acknowledge>>
COMMANDER: not yet <<Instruction>>
DRIVER: <toggle off Faucet>
COMMANDER: take the mug in the sink <<Instruction>>
DRIVER: <pickup Mug>
DRIVER: <pour Sink>
DRIVER: <putdown Sink>
DRIVER: <toggle on Faucet>
DRIVER: <pickup Mug>
DRIVER: <pour Sink>
DRIVER: <putdown CounterTop>
COMMANDER: put coffee on it <<Instruction>>
DRIVER: <pickup Mug>
DRIVER: <putdown CounterTop>
DRIVER: <pickup Mug>
DRIVER: <putdown CoffeeMachine>
DRIVER: done <<Acknowledge>>
COMMANDER: and put coffee in it <<Instruction>>
DRIVER: done <<Acknowledge>>
COMMANDER: take the mug in the corner. on the righthand of the sink. <<Instruction>>
COMMANDER: next to the lettuce <<InformationOnObjectDetails>>
DRIVER: <pickup Mug>
DRIVER: <putdown CounterTop>
COMMANDER: and wash it <<Instruction>>
DRIVER: <pickup Mug>
COMMANDER: put coffe <<Instruction>>
DRIVER: this one is washed <<Acknowledge>>
COMMANDER: put coffee <<Instruction>>
COMMANDER: put coffee in it <<Instruction>>
COMMANDER response: