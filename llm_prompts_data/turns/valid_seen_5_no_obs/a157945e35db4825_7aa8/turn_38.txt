Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Candle on one CoffeeTable.
COMMANDER: Hello. <<Greetings/Salutations>>
DRIVER: how can i help you today? <<RequestForInstruction>>
DRIVER: <move>
DRIVER: <pickup RemoteControl>
DRIVER: <move>
COMMANDER: Today, you will need to put all the candles (2) on a single coffee table. <<Instruction>>
DRIVER: ok <<Acknowledge>>
DRIVER: <putdown ArmChair>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
DRIVER: Hi what are my directions? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Prepare coffee in a clean mug.

COMMANDER response:
Instruction

Example :
Goal: Water the plant.
DRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>
DRIVER: <move>
COMMANDER: can you water the plant <<Instruction>>
DRIVER: <move>
DRIVER: ok <<Acknowledge>>
DRIVER: <move>
DRIVER: <pickup Cup>
DRIVER: <pour HousePlant>
DRIVER: <putdown DiningTable>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 1 slice(s) of Potato and serve in a Bowl.
DRIVER: what is my task today <<RequestForInstruction>>
COMMANDER: slice potato <<Instruction>>
COMMANDER: potato inpot on counter <<InformationOnObjectDetails>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: I need you to help make a sandwhich <<Instruction>>
COMMANDER: first lets slice the bread <<Instruction>>
DRIVER: Whats my first task? <<RequestForInstruction>>
COMMANDER: for it <<MiscOther>>
DRIVER: <move>
DRIVER: <pickup Bread>
DRIVER: <putdown CounterTop>
DRIVER: <move>
COMMANDER: the bread should be above the fridge <<InformationOnObjectDetails>>
COMMANDER: in the left cabinet <<InformationOnObjectDetails>>
DRIVER: <pickup Knife>
COMMANDER: when you have the bread <<InformationOther>>
DRIVER: <putdown CounterTop>
COMMANDER: there is a knife by the sink <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <open Cabinet>
DRIVER: <close Cabinet>
COMMANDER: above the fridge <<InformationOnObjectDetails>>
COMMANDER: in the left cabinet <<InformationOnObjectDetails>>
COMMANDER: there also looks to be bread by the microwave <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER: if you cant reach the cabinet above the fridge <<InformationOnObjectDetails>>
DRIVER: <open Cabinet>
DRIVER: <move>
COMMANDER: then go to the microwave <<Instruction>>
DRIVER: <move>
COMMANDER: Can you reach the bread above the fridge? <<Instruction>>
DRIVER: to high up <<NotifyFailure>>
COMMANDER: go the microwave <<Instruction>>
DRIVER: what about the bread on the counter <<Confirm>>
COMMANDER: there is bread there as well <<InformationOnObjectDetails>>
COMMANDER: turn left <<Instruction>>
DRIVER: ! <<MiscOther>>
DRIVER: <move>
COMMANDER: the microwave <<InformationOnObjectDetails>>
DRIVER: <pickup Knife>
DRIVER: <move>
COMMANDER: to the left of the microwave is bread as  well <<InformationOnObjectDetails>>
COMMANDER response: