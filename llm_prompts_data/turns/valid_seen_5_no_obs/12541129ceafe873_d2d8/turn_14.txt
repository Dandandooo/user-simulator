Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Boil Potato.
DRIVER: how can i help today? <<RequestForInstruction>>
COMMANDER: can you boil a potato? <<Instruction>>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
DRIVER: what do you need? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch on one Sofa.
DRIVER: what is my task today <<RequestForInstruction>>
COMMANDER: we need to collect watches <<Instruction>>
DRIVER: <move>
COMMANDER response:
Instruction

Example :
Goal: Make a plate of toast.
DRIVER: hi, what is task <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: make a plate of toast <<Instruction>>
DRIVER: <move>
COMMANDER: bread in the sink <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup Plate>
DRIVER: <move>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: hi, today we will be  watering the plant <<Greetings/Salutations,Instruction>>
DRIVER: awesome <<Acknowledge>>
DRIVER: <move>
DRIVER: <pickup Bowl>
DRIVER: <move>
DRIVER: <pour HousePlant>
COMMANDER response:
FeedbackPositive

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all AlarmClock on any Desk.
DRIVER: What are we doing today <<RequestForInstruction>>
COMMANDER: you need to put an alarm clock onto a desk <<Instruction>>
DRIVER: <move>
DRIVER: <pickup AlarmClock>
DRIVER: <move>
DRIVER: <putdown Desk>
COMMANDER: there is another alarm clock on the bed that needs to go onto the desk <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <pickup AlarmClock>
DRIVER: <move>
COMMANDER: the third alarm clock is on the desk chair and also needs to go onto the desk <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <putdown Desk>
DRIVER: <move>
COMMANDER response: