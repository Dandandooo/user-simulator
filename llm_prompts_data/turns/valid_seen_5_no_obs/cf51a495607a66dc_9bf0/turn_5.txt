Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Water the plant.
DRIVER: hi how can I help? <<Greetings/Salutations,RequestForInstruction>>
DRIVER: <move>
COMMANDER: can you water the plant <<Instruction>>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 3 slice(s) of Potato and serve on a Plate.
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: today we need to find the potato <<Instruction>>
DRIVER: what shall i do today <<RequestForInstruction>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
DRIVER: hi <<Greetings/Salutations>>
DRIVER: whats the task? <<RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all Spatula in any Sink.
COMMANDER: can you put the spatula in the sink <<Instruction>>
COMMANDER: the spatula is currently in the fridge <<InformationOnObjectDetails>>
DRIVER: <move>
DRIVER: <open Fridge>
DRIVER: <move>
DRIVER: <pickup Spatula>
DRIVER: <move>
DRIVER: I'm going to clear the sink <<Acknowledge>>
COMMANDER: you may need to empty out the sink first <<Instruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
DRIVER: hello <<Greetings/Salutations>>
DRIVER: what is the task? <<RequestForInstruction>>
COMMANDER: Prepare coffee <<Instruction>>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: Hello. <<Greetings/Salutations>>
DRIVER: Good day.  How may I help you? <<Greetings/Salutations>>
COMMANDER: You will be preparing breakfast today. <<Instruction>>
DRIVER: Okay.  What is my first task <<Acknowledge,RequestForInstruction>>
COMMANDER: First, you will need to make a cup of coffee in a clean mug. <<Instruction>>
COMMANDER response: