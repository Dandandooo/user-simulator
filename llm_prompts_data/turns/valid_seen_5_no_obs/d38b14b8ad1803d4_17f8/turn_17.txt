Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for you by telling
it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when you should
be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you should
just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
DRIVER: what do i do <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Clean all the Plates.
DRIVER: What should  I do today? <<RequestForInstruction>>
DRIVER: <move>
COMMANDER: clean all the plates <<Instruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
DRIVER: how can i help? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Water the plant.
DRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a plate of toast.
COMMANDER: 1 slice toast <<Instruction>>
COMMANDER: bread is in fridge <<InformationOnObjectDetails>>
COMMANDER: knife is in the cabinet above coffee maker <<InformationOnObjectDetails>>
DRIVER: ok <<Acknowledge>>
DRIVER: <move>
DRIVER: <pickup Fork>
DRIVER: <putdown CounterTop>
DRIVER: <move>
DRIVER: <open Cabinet>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all SaltShaker in one Cabinet.
DRIVER: how can I help <<RequestForInstruction>>
COMMANDER: Hello. All of the salt shakers need to be places into one cabinet <<Greetings/Salutations,Instruction>>
DRIVER: <pickup SaltShaker>
DRIVER: <move>
COMMANDER: the first one is next to the stove <<InformationOnObjectDetails>>
DRIVER: <open Cabinet>
DRIVER: <move>
DRIVER: <putdown Cabinet>
DRIVER: <pickup SaltShaker>
DRIVER: <putdown Cabinet>
DRIVER: <move>
DRIVER: <pickup PepperShaker>
DRIVER: <putdown Cabinet>
DRIVER: I have found an dplaced 3 salt shakers in a cabinet <<Acknowledge>>
COMMANDER: the last one is in the snk <<InformationOnObjectDetails>>
COMMANDER: sink <<InformationOnObjectDetails>>
DRIVER: <move>
COMMANDER response: