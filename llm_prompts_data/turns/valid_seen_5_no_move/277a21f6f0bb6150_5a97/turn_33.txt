Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hi. <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What am I doing today, please? <<RequestForInstruction>>
COMMANDER: First, slice the lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. Where can I find the lettuce? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: what do i do' <<RequestForInstruction>>
COMMANDER: slice bred <<Instruction>>
DRIVER: <observe>
COMMANDER: bread <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Prepare coffee in a clean mug.

COMMANDER response:
Instruction

Example :
Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: Hello. <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What am I supposed to do? <<RequestForInstruction>>
COMMANDER: Today, you are serving 1 slice of tomato in a clean bowl. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay, where is the tomato? <<Acknowledge,RequestForInstruction>>
COMMANDER: You can find the tomato in the cabinet above the coffee maker. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Tablewares.
COMMANDER: <observe>
DRIVER: hello, what shall I  do? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: clean all plates <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: First task? <<RequestForInstruction>>
COMMANDER: ANUGGDG0JJ4PK <<MiscOther>>
DRIVER: <observe>
COMMANDER: Make 2 sandwich toast <<Instruction>>
DRIVER: <observe>
COMMANDER: I mean 2 slice of toast <<Instruction>>
DRIVER: <observe>
COMMANDER: Slice the bread and toast it in toaster <<Instruction>>
DRIVER: <observe>
COMMANDER: knife is on the shelf above microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: i can see all that stuff' <<Affirm>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: Slice the bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the bread <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: you keep repeating yourself <<MiscOther>>
COMMANDER: in the shelf ;eft of  the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: <observe>
DRIVER: you dont know <<Confirm>>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: Well u know better then <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: i saw the bread on the top shelf on left of microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: 2 slices to be toasted <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER response: