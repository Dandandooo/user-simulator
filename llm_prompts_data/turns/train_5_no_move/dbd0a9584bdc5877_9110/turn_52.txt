Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: we need to make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: lets slice some bread <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: Hello,you need to make a sandwich <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: yOU NEED TO TOAST 2 PCS OF BREAD <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: There is a knife in the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
MiscOther

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: what can i help with? <<RequestForInstruction>>
COMMANDER: I would like some coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where is the coffee mug? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare breakfast.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: HI! <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What  can I do for you? <<RequestForInstruction>>
COMMANDER: today we need make coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Sure thing! Where is the mug please? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: mug is in the sink. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: We need to prepare breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Wat's first? <<RequestForInstruction>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hi, What is the task in hand <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: First there are two mugs of coffee to be made, but one is dirty and has to be rinsed with water first <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: one mug is in the cabinet above the fridge on the right hand side <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: If I'm reading this right, it's the dirty one <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: good thing the robot has long arms <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: cant grab that cup <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: does moving back help so it's in line of sight? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: yay!!! Now rinse it with water and fill both with coffee <<FeedbackPositive,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: once both have coffee in them, we've finished the first part <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: now the next one. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: do you need me to find the clean mug? <<Confirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: is it done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: perfect!  put both of those on the dining table <<FeedbackPositive,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER response: