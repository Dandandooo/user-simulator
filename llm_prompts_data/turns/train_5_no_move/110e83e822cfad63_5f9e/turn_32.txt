Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: What do I need to do? <<RequestForInstruction>>
COMMANDER: You need to prepare coffee in a clean mug <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Clean all the Cups.
COMMANDER: <observe>
DRIVER: Hi! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: rinse the green cup on the counter <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: other one <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: how can I help today? <<RequestForInstruction>>
COMMANDER: i'd like the plant watered <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: found a cup to fill with water <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER response:
FeedbackPositive

Example :
Goal: Boil Potato.
COMMANDER: Could you please boil a potato for me <<Instruction>>
DRIVER: <observe>
COMMANDER: There should be one in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: and there is a pot on the stove already, you may need to fill it with water <<InformationOnObjectDetails,Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all PepperShaker in any Cabinet.
COMMANDER: <observe>
DRIVER: how can help <<RequestForInstruction>>
COMMANDER: I need you to put the pepper shaker in the cabinet <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where can I find it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: You can find the pepper shaker on the shelf next to the kitchen counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: I want it in the cabinet under the sink <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: is this done? <<Confirm>>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: Thank you. Now I need you to do the same with the second pepper shaker <<FeedbackPositive,Instruction>>
DRIVER: <observe>
COMMANDER: You can find it in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: Can you put this one in a different cabinet? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Ah Ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: It's the cabinet next to the shelf you took the first shaker from <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response: