Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a salad.
COMMANDER: we need to first slice a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: tomato is by the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: next slice the potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: next cook a slice of the potato <<Instruction>>
DRIVER: <observe>
COMMANDER: on the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
InformationOther

Example :
Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
COMMANDER: can you see this emssage? <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: yes <<Affirm>>
COMMANDER: <observe>
DRIVER: what should I do? <<RequestForInstruction>>
COMMANDER: cook 2 slices of potato and serve in a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Pans.
COMMANDER: <observe>
DRIVER: Hi, what are we doing? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: rinse dirty pans with water <<Instruction>>
DRIVER: <observe>
COMMANDER: first pa is on thestove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: pan* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <toggle off StoveKnob>
COMMANDER: <observe>
DRIVER: <pickup Pot>
COMMANDER: pan <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: make potato slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: sorry tomato slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: where is tomato and knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 2 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: hi, how can i help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: i want two cooked potato slices in a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where can i find a potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: found one on the counter <<InformationOnObjectDetails>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: whats first <<RequestForInstruction>>
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: We are making a slice of toast. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup WineBottle>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: whats next <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: The bread is on the countgertop. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Countertop* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ?? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: whats next <<RequestForInstruction>>
COMMANDER: Now go toast the slice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: The toaster is to the left of the sink. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: how many? <<RequestOtherInfo>>
COMMANDER: We need two slices of toast so toast the second one. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: Now take a knife from the fridge <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: Find the lettuce on the left of the coffee-making machine and cut it. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response: