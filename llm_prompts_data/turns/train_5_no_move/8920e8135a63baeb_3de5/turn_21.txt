Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: We need to make coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: Grab the coffee mug in front of you <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok <<Acknowledge>>
COMMANDER: Head to the coffee machine <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: Teh coffee machine is on the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER response:
OBSERVE

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: boil potato by cooking in water <<Instruction>>
DRIVER: <observe>
COMMANDER: potato is in the cupboard above the coffee machine <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch on any Sofa.
COMMANDER: first task <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what should i do? <<RequestForInstruction>>
COMMANDER: Put watch on sofa <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: 2 more watches <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Watch>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Boil Potato.

COMMANDER response:
OBSERVE

Example :
Goal: Put all Newspaper in one Box.
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: whats the task? <<RequestForInstruction>>
COMMANDER: Please place the newspapers in the same box. Begin with the one on the chair sightly under the box. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the chair? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: The Chair is next to the couch <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Do you need further assistance? <<Confirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: yeees <<Affirm>>
COMMANDER: <observe>
DRIVER: i am new to this <<OtherInterfaceComment>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all SaltShaker in one Cabinet.
COMMANDER: <observe>
DRIVER: what can i do today <<RequestForInstruction>>
COMMANDER: hi please place the salt shakers in one cabinet <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: where is the other <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: theres one behind the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: and another in the right cabinet under sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: done next? <<Acknowledge,RequestForInstruction>>
COMMANDER: did you put them in a cabinet <<Confirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: yes 4 of them <<Affirm>>
COMMANDER response: