Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all TissueBox on one Dresser.
COMMANDER: <observe>
DRIVER: what can i do today <<RequestForInstruction>>
COMMANDER: put tissue box on dresser <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the tissue nox please <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: make salad please <<Instruction>>
DRIVER: <observe>
COMMANDER: slice lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: in the black bin next to the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: whats first? <<RequestForInstruction>>
COMMANDER: lets find the tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: its on your search <<OtherInterfaceComment>>
COMMANDER: its inside the drawer beneath the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Spatula>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: theres also one on the counter' <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: knife not tomato <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: how can i help <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: lets make salad <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: slice lettuce using the knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: lettuce is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 3 slice(s) of Potato and serve in a Bowl.
COMMANDER: <observe>
DRIVER: hi, what can i do for you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can I have three cooked potato slices in a bowl <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where can i find a potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: next to the coffeemaker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: got it <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: where is the knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hello! What is my task today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: today we need to make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: first lets slice some bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. <<Acknowledge>>
COMMANDER: the bread is in the green bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: next to the counter <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: there is also bread on the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: the knife is on the stool <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER response: