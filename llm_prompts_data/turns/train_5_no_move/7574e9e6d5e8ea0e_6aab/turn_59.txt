Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Pillow on any Chairs.
COMMANDER: <observe>
DRIVER: hellow what can I do for you <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: place 2 pillows onto single seating sofa chair <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.

COMMANDER response:
OBSERVE

Example :
Goal: Put all Fork in any Sink.
COMMANDER: Can you please place any forks in the sink <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Pillow on any Sofa.
COMMANDER: <observe>
DRIVER: Hi. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hello please put pillow on sofa <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: what is next? <<RequestForInstruction>>
COMMANDER: pillow o desk <<Instruction>>
DRIVER: <observe>
COMMANDER: on <<Instruction>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Clean all the Cups.
COMMANDER: <observe>
DRIVER: hi what can I do? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: clean the cup please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: what do you need help with today? <<RequestForInstruction>>
COMMANDER: serve 1 slice of tomato on a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay, where is a tomato? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: look to the elft of the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: ;eft* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: left* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: where is a plate? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: check the cabinetry <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: maybe in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: or in the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: I cant take the plate out of the microwave <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: will look for another plate <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: my next guess would be dishwasher <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <pickup SoapBottle>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: found a plate <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: ok now just need to slice tomoto <<Instruction>>
DRIVER: <observe>
COMMANDER: tomato* <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER response: