Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a plate of toast.

COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hi, What is the task in hand <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all Watch on one Tables.
COMMANDER: <observe>
DRIVER: hey <<Greetings/Salutations>>
COMMANDER response:
Instruction

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.

COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: what do i do <<RequestForInstruction>>
COMMANDER: Hello.  Please make a cup of coffee. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: cup?? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: Mug is in the sink. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a salad.
COMMANDER: make a slice of lettuce using a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Hello. How may I assist you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: Sure. Lettuce location? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: the knife is inside the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: lettuce is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: Lettuce sliced. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Next? <<RequestMore>>
COMMANDER: then cook a slice of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: the potato is in the pan on the cooker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle on StoveKnob>
COMMANDER: <observe>
DRIVER: <slice Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Pan>
COMMANDER: <observe>
DRIVER: <putdown StoveBurner>
COMMANDER: <observe>
DRIVER: Potato sliced and cooked <<Acknowledge>>
COMMANDER: then place all salad components on a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Sure. Plate location? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: the salad is on the right side drawer near the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: Thank You. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: No plate found. <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: the plates are on the left side of the cooker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER response: