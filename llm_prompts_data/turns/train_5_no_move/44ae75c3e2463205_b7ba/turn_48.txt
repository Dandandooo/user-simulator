Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.
COMMANDER: make sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what should I do today? <<RequestForInstruction>>
COMMANDER: slice 2 pieces of bread <<Instruction>>
DRIVER: <observe>
COMMANDER: then toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Apple in any Fridge.
COMMANDER: <observe>
DRIVER: What can I do today? <<RequestForInstruction>>
COMMANDER: Could you please help me placing all the apples in the fridge <<Instruction>>
DRIVER: <observe>
COMMANDER: there should be one in the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: hi what can i get you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hello I need a salad made with two slices of tomato and a slice of cooked potato <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure, where can i find the knife? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER: next the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: next to* <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: and where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all RemoteControl on one Tables.
COMMANDER: <observe>
DRIVER: Hi! What can I do for you today? <<RequestForInstruction>>
COMMANDER: Put all remote controls on one table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: does it state which table; coffee or side? There's already one on the coffee table, which is why I ask. <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: Take the one on the shelf to the right of the television <<Instruction>>
DRIVER: <observe>
COMMANDER: And place it where the other one is <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: how ocan i help you? <<RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all SmallHandheldObjects on any Chairs.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: How can I help you? <<RequestForInstruction>>
COMMANDER: find small handheld objects <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: OK <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Where should I look first? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: cabinet next to red vase <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: above blue object <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: open cabinet <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: get object <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: There is a remote inside the cabinet <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: yes <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: put it on any chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have the remote <<Acknowledge>>
COMMANDER: <observe>
DRIVER: What would you like me to do with it? <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: The remote is now on the chair <<InformationOnObjectDetails>>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: get another one from table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: I have the remote from the coffee table <<Acknowledge>>
COMMANDER: put it on any chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: The remote is on the chair <<InformationOnObjectDetails>>
COMMANDER: <observe>
DRIVER: What should I do next? <<RequestForInstruction>>
COMMANDER: another object from table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: The dining table? <<RequestOtherInfo>>
COMMANDER: yes <<Affirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Which object should I pick up from the dining table? <<RequestOtherInfo>>
COMMANDER: try the statue <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Statue>
COMMANDER: put it on a chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have 1 of the statues from  the table. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: 1 statue is now on the chair <<Acknowledge>>
COMMANDER: must have not been the right object <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What should I do next? <<RequestMore>>
COMMANDER: <observe>
DRIVER: There is 1 more statue on the table <<InformationOnObjectDetails>>
COMMANDER: <observe>
DRIVER: Should I move that 1 too? <<RequestOtherInfo>>
COMMANDER: try the littlest object <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: There is also a card, keys, plate, and newspaper on the table <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup KeyChain>
COMMANDER: <observe>
DRIVER: I have the keys from the table <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER response: