Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Newspaper on one SideTable.
COMMANDER: <observe>
DRIVER: What should we do today <<RequestForInstruction>>
COMMANDER: place the newspapers onto a single table <<Instruction>>
DRIVER: <observe>
COMMANDER: there is one on the couch <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER: grab the mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: you are the commander. <<MiscOther>>
COMMANDER: in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What is the first task <<RequestForInstruction>>
COMMANDER: slice tomato using the knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the tomato <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: please can you cut one slice of lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: which is on the counter at the corner <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: knife is on the round table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: what work can i do for you? <<RequestForInstruction>>
COMMANDER: cook a slice of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: where can i find a knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all SmallHandheldObjects on one Sofa.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: Hello! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: You need to place 8 small handheld objects onto one sofa. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: There is a remote control on the bottom shelf next to a red vase that is one <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: Great job. :) <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup KeyChain>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: 6 more items please :) <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: There is something on the small black table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: behind the laptop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup CreditCard>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: There is something in the trashbin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup CreditCard>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup CreditCard>
COMMANDER: You are doing great :) <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: 2 more items <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: How many more? <<RequestOtherInfo>>
COMMANDER: There are items inside the box on the floor. You need 2 more items <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Box>
COMMANDER: <observe>
DRIVER: <putdown Floor>
COMMANDER: <observe>
DRIVER: <pickup Box>
COMMANDER: <observe>
DRIVER: <putdown Shelf>
COMMANDER: <observe>
DRIVER: <pickup Box>
COMMANDER response: