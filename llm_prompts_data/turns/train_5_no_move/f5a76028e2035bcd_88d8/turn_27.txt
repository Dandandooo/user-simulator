Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what shall i do today? <<RequestForInstruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: what shall i do? <<RequestForInstruction>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Put all Cloth in any Bathtub.
COMMANDER: Hey, today we're gathering all the cloths and putting them into the bathtub <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok, what clothes am i gathering? <<Acknowledge,RequestOtherInfo>>
COMMANDER: The first is already in the bath, pick it up and put it back down <<InformationOnObjectDetails,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cloth>
COMMANDER: <observe>
DRIVER: <putdown Bathtub>
COMMANDER: The second is on the countertop next to the bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cloth>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: Hi. <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What am I doing today, please? <<RequestForInstruction>>
COMMANDER: First, slice the lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. Where can I find the lettuce? <<Acknowledge,RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: what do i do <<RequestForInstruction>>
COMMANDER: Hello.  Please make a cup of coffee. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: cup?? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all RemoteControl on one Furniture.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: put all remote control on one furniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where are they <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: first on is on the green chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: pick the remotecontrol <<Instruction>>
DRIVER: <observe>
COMMANDER: leave the newspaper <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: try putting the newspaer on the coffee tablle <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: assemble all remotes in one firniture <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: next <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: one more <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is it <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: left to the green chair there is a white side table  with a lampa shade <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: <observe>
DRIVER: what can i do for you? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: good job <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: I will finish <<Acknowledge>>
DRIVER: <observe>
COMMANDER response: