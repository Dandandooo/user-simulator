Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 3 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: slice a tomato thrice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Can you help me find tomato and knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: inside the cabinet above the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: the knife is inside the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Cannot reach <<NotifyFailure>>
COMMANDER: use the up option <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER response:
OBSERVE

Example :
Goal: Put all TissueBox on one CoffeeTable.
COMMANDER: <observe>
DRIVER: What do I do first? <<RequestForInstruction>>
COMMANDER: Grab a tissue box and put it onto a single coffee table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup TissueBox>
COMMANDER: <observe>
DRIVER: <putdown CoffeeTable>
COMMANDER: <observe>
DRIVER: Next? <<RequestForInstruction>>
COMMANDER: There's another tissue box in the trash can by the sliding door on the far right. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Ah. The recycle bin. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup TissueBox>
COMMANDER response:
Instruction

Example :
Goal: Put all PepperShaker in any Cabinet.
COMMANDER: <observe>
DRIVER: whats first? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a sandwich.

COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: what can we do today <<RequestForInstruction>>
COMMANDER: First, slice the bread <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: Please provide directions <<RequestForInstruction>>
COMMANDER: Hio..We need to make a sandwich. First we need to slice the bread to get 2 slices. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: The bread is on the table in front of you <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: Next toast the bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: Task complete <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: awesome <<Acknowledge>>
COMMANDER: <observe>
DRIVER: thanks go ahead and finish <<OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: wait? all tasks or just one <<OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: We need to get all componets on the plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Just bread or something else? <<Confirm>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: The bread and the tomato. My side shows you already sliced the tomato <<Instruction,InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: A little morwe to the right <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: toast, tomato, toast done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: I see toast on the plate but not the tomato..@ slices on toast and 2 slices of tomato need to placed on the plate. <<InformationOther,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: 1 more slice of tomato on the plate and we should be done <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: did tasks complete? If not click on the ones not completed it might show you something more specific <<OtherInterfaceComment>>
COMMANDER: The system is not showing as complete...Did you toast both pieces of bread. It is flashing the slice of bread closest to you and then flashing the counter with the toaster <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: They both show toasted <<Acknowledge>>
COMMANDER: <observe>
DRIVER: I can toast abother <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER response: