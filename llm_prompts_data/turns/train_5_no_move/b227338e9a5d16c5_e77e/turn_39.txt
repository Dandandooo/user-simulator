Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all Newspaper on one CoffeeTable.
COMMANDER: <observe>
DRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: Hello. What is my task? <<Greetings/Salutations,RequestForInstruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: You tell me the task. <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: I am the robot <<MiscOther>>
COMMANDER: Please shut down the computer that's on the table. <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare breakfast.
COMMANDER: Hello, please make a cup of coffee <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hey <<Greetings/Salutations>>
COMMANDER: mug to left of stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER response:
Instruction

Example :
Goal: Serve 3 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: slice a tomato thrice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Can you help me find tomato and knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Boil Potato.

COMMANDER response:
Greetings/Salutations

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: how can I help? <<RequestForInstruction>>
COMMANDER: please make a salad <<Instruction>>
DRIVER: <observe>
COMMANDER: i would like lettuce tomato and 2 slices of potato with it <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where do I find the thing I need? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: the lettuce should be in the black bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: the tomato is in the cabinet below the coffee machine <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: and the potato is on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: my task today <<RequestForInstruction>>
COMMANDER: Make a plate of toast. make a slice of toast. the bread needs to be sliced using a knife. The bread needs to be toasted. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: wher is the bread <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: the bread is on the counter next to the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: where is the knife <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: check the drawers <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: which drawer <<AlternateQuestions>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: Is that a knife on the counter? check any drawer for the knife. my information tells me that there may be a knife in the fridge. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: You still have the water running and the fire on the stove on. <<InformationOther>>
DRIVER: <observe>
COMMANDER: Check all the drawers for a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: check the counter for the knife, next to the sink with the running water <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER response: