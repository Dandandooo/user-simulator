Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare breakfast.
COMMANDER: Good day! <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Today we are going to prepare breakfast. <<Instruction>>
DRIVER: <observe>
COMMANDER: First prepare coffee in a clean mug. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: the mug is on the table next tot he fridge. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: please put one slice tomato on a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the tamoto <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: on brown kitchen shelf <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: how can I help <<RequestForInstruction>>
COMMANDER: Can you please make coffee? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER: there's a mug in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.

COMMANDER response:
OBSERVE

Example :
Goal: Put all Potato in any Cabinet.
COMMANDER: Hi, can you put potato into cabinet? <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Cook 2 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: Hello, what shall I   be doing today? <<RequestForInstruction>>
COMMANDER: Please cook 2 slices of potato and serve on a plate. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. <<Acknowledge>>
COMMANDER: The potato is behind the sink. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: There is a knife in the fridge. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER response: