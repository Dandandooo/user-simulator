Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Clean all the Plates.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: clean ll plates <<Instruction>>
DRIVER: <observe>
COMMANDER: clean all plates <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <pickup SoapBottle>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 5 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: what do you need me to do? <<RequestForInstruction>>
COMMANDER: I would like you to cook five slices of potato and serve them on a plate please/ <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where's the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: In a drawer underneath the stove on the left <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Hello, what is my task ? <<Greetings/Salutations>>
COMMANDER response:
Instruction

Example :
Goal: Put all CreditCard on any Bed.
COMMANDER: <observe>
DRIVER: Hello what is my task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: put creditcards on bed <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: thank you <<Acknowledge>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: Hello. We are going to serve a slice of cooked potato on a plate. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: There is a potato in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all RemoteControl on one Chairs.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what is my first task <<RequestForInstruction>>
COMMANDER: Hello! Please place 3 remote controls onto one chair <<Instruction>>
DRIVER: <observe>
COMMANDER: There is a remote onthe shelf under the tv <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay i will get it <<Acknowledge>>
COMMANDER: The tv is to your left <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: Great job <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: thank you <<Acknowledge>>
COMMANDER: <observe>
DRIVER: next task? <<RequestForInstruction>>
COMMANDER: You need to place the remote onto a cahir <<Instruction>>
DRIVER: <observe>
COMMANDER: ^chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: Good. <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: thank you <<Acknowledge>>
COMMANDER: Now please retrieve 2 more remotes and place on the same chair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: There is a remote on the dining table inthe other room <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Sofa>
COMMANDER: <observe>
DRIVER: <pickup Statue>
COMMANDER: <observe>
DRIVER: <putdown CoffeeTable>
COMMANDER: <observe>
DRIVER: <pickup RemoteControl>
COMMANDER: Great. :) <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: thanks <<Acknowledge>>
COMMANDER response: