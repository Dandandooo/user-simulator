Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: slice 2 slices of bread <<Instruction>>
DRIVER: <observe>
COMMANDER: go inside the fridge <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: pick up bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: I have bread. <<Acknowledge>>
COMMANDER: slice two slices and toast <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Cloths.
COMMANDER: rinse the cloth close to the sink <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: turn around <<Instruction>>
DRIVER: <observe>
COMMANDER: just rinse it with water <<Instruction>>
DRIVER: <observe>
COMMANDER: cloth is near the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: are you there? <<Confirm>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: the  towel or? <<AlternateQuestions>>
COMMANDER: no <<Deny>>
DRIVER: <observe>
COMMANDER: it is not there <<InformationOther>>
DRIVER: <observe>
COMMANDER: it is at the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 3 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: HI! What can I do for you? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER response:
Instruction

Example :
Goal: Boil Potato.
COMMANDER: <observe>
DRIVER: Hello. What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: <observe>
DRIVER: I have the robot commands. Do you also? <<OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: Hello? <<Greetings/Salutations>>
COMMANDER: boil the potato by cooking it in water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: in shelve down the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Put all RemoteControl on any Tables.
COMMANDER: <observe>
DRIVER: Hello what is my task <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: Let's put all remotes on the tables <<Instruction>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hello. <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: What am I doing today? <<RequestForInstruction>>
COMMANDER: prepare coffee in a clean mug <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Where can I find the mug, please? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: check on the counter chairs <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SoapBottle>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: okay. done. <<Acknowledge>>
COMMANDER: Now slice bread using knife from the fridge <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: done. <<Acknowledge>>
COMMANDER: now toast 2 slices each <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: DOne. <<Acknowledge>>
COMMANDER: great <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: now slice a lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Where can I find the lettuce <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: open the cabinet on the right above the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the microwave? lol? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: where the toasted bread slice is <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: next to the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: open the black cabinet <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: from my end I actually see the microwave lol. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: good <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: now slice a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Okay. DOne finally. I couldn't find the microwave becasue it did not show until you wanted to open something. <<Acknowledge,OtherInterfaceComment>>
COMMANDER: <observe>
DRIVER: okay. <<Acknowledge>>
COMMANDER: okay <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: put all components on a clean plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Egg>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: okay done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: place the plate with the components on the counter <<Instruction>>
DRIVER: <observe>
COMMANDER: you had already done a good jib <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER response: