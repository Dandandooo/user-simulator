Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Put all SmallHandheldObjects on one Tables.
COMMANDER: <observe>
DRIVER: what can I do for you? <<RequestForInstruction>>
COMMANDER: put all smallhandheld objects in one table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: what object? <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <pickup Laptop>
COMMANDER: objects which are in cubboard <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Cloths.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: Hello! You need to clean all the cloths <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: There is a green cloths on the bench <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Cloth>
COMMANDER response:
FeedbackPositive

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: What shall I do today? <<RequestForInstruction>>
COMMANDER: We need to make a slice of toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Can you help me find bread? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: potato needs to be sliced <<Instruction>>
DRIVER: <observe>
COMMANDER: potato is in fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: knife is beside sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 3 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: slice potao <<Instruction>>
DRIVER: <observe>
COMMANDER: potato on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: knife in the drawer under the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: we need 3 slices cooked <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Clean all the Mugs.
COMMANDER: clean all mugs <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: How many? <<RequestOtherInfo>>
COMMANDER: there is one next to the tomatoe on the centre isle <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: That was the one I washed <<Acknowledge>>
COMMANDER: it is still idicating the same <<InformationOther>>
DRIVER: <observe>
COMMANDER: indicating <<InformationOther>>
DRIVER: <observe>
COMMANDER: there is no other <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: how many am I supposed to wash <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response: