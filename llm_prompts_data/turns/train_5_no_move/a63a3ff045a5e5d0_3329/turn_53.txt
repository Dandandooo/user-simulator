Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 1 slice(s) of Tomato in a Bowl.
COMMANDER: slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: tomato in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
COMMANDER: knife in the cabinet under the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: what can I help you with? <<RequestForInstruction>>
COMMANDER: coffee please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: yes sir <<Acknowledge>>
COMMANDER: <observe>
DRIVER: where is the mug? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all PepperShaker in any Cabinet.
COMMANDER: <observe>
DRIVER: hi how can i help <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: hello <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: make a salad <<Instruction>>
DRIVER: <observe>
COMMANDER: slice tomatoes first <<Instruction>>
DRIVER: <observe>
COMMANDER: on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: knife on the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: tomato on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: slice <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: <observe>
DRIVER: What should I do today? <<RequestForInstruction>>
COMMANDER: Hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: Slice the lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hello, what shall I   do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: Hello. We need to make coffee. <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: The mug is in the sink and it is dirty <<InformationOnObjectDetails,InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. I   shall wash it. <<Acknowledge,Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup CellPhone>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle off CoffeeMachine>
COMMANDER: <observe>
DRIVER: <toggle on CoffeeMachine>
COMMANDER: <observe>
DRIVER: Done <<Acknowledge>>
COMMANDER: We need to make a salad. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok. <<Acknowledge>>
COMMANDER: First cut lettuce <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: it's in something above the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: the knife is on the island countertop <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: <observe>
DRIVER: <slice Lettuce>
COMMANDER: next we need a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I   have sliced the lettuce <<Acknowledge>>
COMMANDER: It looks like it's in the trashcan? <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: There is one in front of me now. I   will slice it. <<Acknowledge>>
COMMANDER: ok <<Acknowledge>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: The tomato has been sliced <<Acknowledge>>
COMMANDER: We need to cook a slice of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Ok. <<Acknowledge>>
COMMANDER: <observe>
DRIVER: Where is the potato? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: It's somewhere to the left of the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: I think in a drawer underneath it <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: is there one above the coffee maker? <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: Yes. I   have found the potato. <<Acknowledge>>
COMMANDER response: