Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 1 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: Hello <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what's the task <<RequestForInstruction>>
COMMANDER: please cook one slice of potato <<Instruction>>
DRIVER: <observe>
COMMANDER: potato is in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: Hi, first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hello friend <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: lets water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Vase>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: Hey can you make a coffee for me please <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER response:
FeedbackPositive

Example :
Goal: Put all Newspaper on one CoffeeTable.
COMMANDER: <observe>
DRIVER: What can I help you with? <<RequestForInstruction>>
COMMANDER: Hi, can you please put Newspaper on the Coffee Table <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: the news paper is on the table with the lamp <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER response:
OBSERVE

Example :
Goal: Put all Spoon in one Drawer.
COMMANDER: <observe>
DRIVER: what would you like me to do? <<RequestForInstruction>>
COMMANDER: find spoon on book shelf next to teapot <<Instruction,InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Spoon>
COMMANDER: <observe>
DRIVER: Got the spoon. <<Acknowledge>>
COMMANDER: put spoon in any drawer <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <putdown Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER response:
FeedbackPositive

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Prepare breakfast.
COMMANDER: <observe>
DRIVER: Hello! I am here! <<Greetings/Salutations>>
COMMANDER: hey <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What is my first task? <<RequestForInstruction>>
COMMANDER: prepare a breakfast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What is first? <<RequestForInstruction>>
COMMANDER: get the cofffee mug <<Instruction>>
DRIVER: <observe>
COMMANDER: it at the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: I have the mug <<Acknowledge>>
COMMANDER: clean the mug in sink <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: shut off water first <<Instruction>>
DRIVER: <observe>
COMMANDER: and empty sink before cleaning mug <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: How do I shut off the water? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: you learn that in the pilot <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Got it! <<Acknowledge>>
COMMANDER: empty mug first <<Instruction>>
DRIVER: <observe>
COMMANDER: them turn on water <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: Water is on <<Acknowledge>>
COMMANDER: take coffee mug back to coffee maker <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Mug>
COMMANDER: <observe>
DRIVER: <pour Sink>
COMMANDER: dump first <<Instruction>>
DRIVER: <observe>
COMMANDER: turn maker on <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CoffeeMachine>
COMMANDER: place and turn on <<Instruction>>
DRIVER: <observe>
COMMANDER: now make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: What is the first step with the sandwich? <<RequestForInstruction>>
COMMANDER: go grab a plate next to the fridge with a appe on it <<Instruction>>
DRIVER: <observe>
COMMANDER: or tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: I have the plate <<Acknowledge>>
COMMANDER: place on counter <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: Got it! <<Acknowledge>>
COMMANDER: empty space on counter' <<Instruction>>
DRIVER: <observe>
COMMANDER: grab bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Where is the bread? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: in the cabinet under the coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: take to counter <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: I have the bread <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: grab a knife <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: It is on the counter <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: back up so i can see <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: Where is the knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: <observe>
DRIVER: Found it! <<Acknowledge>>
COMMANDER: in th e cabinet next to the lettuce <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: the bottom one <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <slice Bread>
COMMANDER: <observe>
DRIVER: Bread is sliced <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: it need to be toasted now <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: 2 slices <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup ButterKnife>
COMMANDER: toast the bread <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: It will not let me put it in there <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: you need to grab the bread first <<Instruction>>
DRIVER: <observe>
COMMANDER: not the half loaf the slice <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: you got a half loaf in your hand <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: Just one piece? <<Confirm>>
COMMANDER: lol <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: 2 sices <<Instruction>>
DRIVER: <observe>
COMMANDER: *slices <<Instruction>>
DRIVER: <observe>
COMMANDER: place on plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: *Toaster is full* lol <<NotifyFailure>>
COMMANDER: both slices after toasted <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: you have to remove before placing another toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: one at a time <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Toaster>
COMMANDER: <observe>
DRIVER: <toggle on Toaster>
COMMANDER: <observe>
DRIVER: <toggle off Toaster>
COMMANDER: place toast on plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Bread>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: Toast is done <<Acknowledge>>
COMMANDER: and place lettuce on same plate' <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER response: