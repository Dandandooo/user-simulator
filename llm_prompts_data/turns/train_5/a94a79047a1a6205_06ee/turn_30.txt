Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Clean all the Pots.
COMMANDER: <observe>
DRIVER: what's first? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: hello please clean 3 pots <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Task? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Put all Watch in one Box.
COMMANDER: <observe>
DRIVER: What do I do? <<RequestForInstruction>>
COMMANDER: put all watch in one box <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: Where are they? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: it is indicating the box <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Box>
COMMANDER: <observe>
DRIVER: <putdown Chair>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Make a salad.
COMMANDER: make sald today...first slice tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: *salad <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: ok what's first <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: tomato is the black bin <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: knife is on the chair <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Serve 3 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: what shall i do today? <<RequestForInstruction>>
COMMANDER: Today, you'll be serving 3 slices of tomato in a bowl. <<Instruction>>
DRIVER: <observe>
COMMANDER: First, we want to make sure you have a clean bowl. <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: knife? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: <observe>
DRIVER: where is it? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: Check the fridge for the knife. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER response:
OBSERVE

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: how can I help <<RequestForInstruction>>
COMMANDER: We're going to make a sandwich <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup SprayBottle>
COMMANDER: The bread is on the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: knife <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all AlarmClock on any Bed.
COMMANDER: hey i have 4 alarm clock that i need you to put on my bed please <<Greetings/Salutations,Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: on it! <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Desk>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup TeddyBear>
COMMANDER: <observe>
DRIVER: <putdown Floor>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Bowl>
COMMANDER: <observe>
DRIVER: <putdown Floor>
COMMANDER: <observe>
DRIVER: <pickup Pillow>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: not letting me put the cushion down <<NotifyFailure>>
COMMANDER: <observe>
DRIVER: will keep trying <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup AlarmClock>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Bed>
COMMANDER response: