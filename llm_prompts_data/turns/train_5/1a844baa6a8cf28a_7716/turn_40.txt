Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 2 slice(s) of Tomato in a Bowl.
COMMANDER: <observe>
DRIVER: hi what shall i do today <<RequestForInstruction>>
COMMANDER: Hi how are you? <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: You have to cut two slices of tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where can i find tomatoes <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: I see one tomato on the round table. <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: what do i do <<RequestForInstruction>>
COMMANDER: bread is left side of stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: 1 slice bread toast <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: How may I help you today? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: bread is in the cabinet above coffee maker <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Lettuce on any DiningTable.
COMMANDER: <observe>
DRIVER: how can i help? <<RequestForInstruction>>
COMMANDER: could you please take the lettuce and put it onto the dining table <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Mugs.
COMMANDER: <observe>
DRIVER: Hello. What is my first task? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: clean all mugs <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: How many mugs are there? <<RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Fridge>
COMMANDER: <observe>
DRIVER: <close Fridge>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER response:
InformationOnObjectDetails

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Condiments in one Cabinet.
COMMANDER: <observe>
DRIVER: how can I help <<RequestForInstruction>>
COMMANDER: please place all of the condiments in a single cabinet <<Instruction>>
DRIVER: <observe>
COMMANDER: There is already one in the top right cabinet to the stove <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: sorry <<Acknowledge>>
DRIVER: <observe>
COMMANDER: the one above the toaster <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: there is one on the stove near the pan <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: you can place it with the other one <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: are there any more? <<RequestMore>>
COMMANDER: there is one in the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: and one on the chair near the table <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <close Microwave>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup PepperShaker>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
COMMANDER: <observe>
DRIVER: Ive placed them in the cabinet <<Acknowledge>>
COMMANDER: the last one is in an obverhead cabinet <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: it is above the counter behind you <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: Let me work out which one it is <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: Noproblem, I will have a look too <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response: