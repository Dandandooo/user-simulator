Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: h <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: i <<Greetings/Salutations>>
COMMANDER: we need to prepare coffee <<Instruction>>
DRIVER: <observe>
COMMANDER: in a clean mug <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: My task? <<RequestForInstruction>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: there is a dirty mug <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: where is the mug please <<RequestForObjectLocationAndOtherDetails>>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Put all Spatula in one Drawer.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: Hello, please place 2 spatulas and place them in to the same drawer. <<Instruction>>
DRIVER: <observe>
COMMANDER: There is one in the cabinet under the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: okay i will check <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: The other is inside the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER response:
OBSERVE

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: what do you need? <<RequestForInstruction>>
COMMANDER: please water the plant <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <pickup Cup>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pour HousePlant>
COMMANDER: <observe>
DRIVER: all set? <<Acknowledge>>
COMMANDER response:
FeedbackPositive

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER response:
Greetings/Salutations

Example :
Goal: Water the plant.
COMMANDER: <observe>
DRIVER: how can I help today? <<RequestForInstruction>>
COMMANDER: i'd like the plant watered <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: sure <<Acknowledge>>
COMMANDER response:
OBSERVE

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Serve 1 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: what shall I do today? <<RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: please slice a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: the knife is in the sink <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER: <observe>
DRIVER: <slice Tomato>
COMMANDER: <observe>
DRIVER: next? <<RequestForInstruction>>
COMMANDER: lets clean a plate <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <toggle off Microwave>
COMMANDER: <observe>
DRIVER: <open Microwave>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Lettuce>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup SaltShaker>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Fork>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: next? <<RequestForInstruction>>
COMMANDER: it didn't register the plate <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: can you please place back in sink and turn sink on? <<Instruction>>
DRIVER: <observe>
COMMANDER: I'm sorry <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Sink>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
COMMANDER: <observe>
DRIVER: <pickup Plate>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
COMMANDER: <observe>
DRIVER: <pickup Tomato>
COMMANDER: <observe>
DRIVER: <putdown Plate>
COMMANDER: <observe>
DRIVER: next? <<RequestForInstruction>>
COMMANDER: I think there is a glitch in this one <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: the plate is clean but says the plate is still dirty <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: we might have to just report it <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: anyother plate available? <<RequestForObjectLocationAndOtherDetails>>
COMMANDER: let me check <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: or just press progress check twice <<OtherInterfaceComment>>
COMMANDER: there might be another plate in the microwave <<InformationOnObjectDetails>>
DRIVER: <observe>
COMMANDER: now it's done <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: yay <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER: thank you for being amazing <<FeedbackPositive>>
DRIVER: <observe>
COMMANDER response: