Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Serve 2 slice(s) of Tomato on a Plate.
COMMANDER: <observe>
DRIVER: What can I do for you today? <<RequestForInstruction>>
COMMANDER: First, slice a tomato <<Instruction>>
DRIVER: <observe>
COMMANDER response:
OBSERVE

Example :
Goal: Cook 5 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hey how can I help? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: can you serve 5 cooked potato slices on a clean plate? <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <pickup Potato>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown CounterTop>
COMMANDER: <observe>
DRIVER: <pickup Knife>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: Hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what's the task? <<RequestForInstruction>>
COMMANDER response:
Instruction

Example :
Goal: Make a sandwich.
COMMANDER: <observe>
DRIVER: Hello, what shall I   be doing today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER response:
OBSERVE

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: what should i do today? <<RequestForInstruction>>
COMMANDER response:
Instruction

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Newspaper on one ArmChair.
COMMANDER: <observe>
DRIVER: Hello! What should I do today? <<Greetings/Salutations,RequestForInstruction>>
COMMANDER: hi <<Greetings/Salutations>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: Hi there. <<Greetings/Salutations>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: Put all newpapers on one armchair <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: One newspaper down. How many are there to get? <<Acknowledge,RequestOtherInfo>>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: another one <<Instruction>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <open Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <close Drawer>
COMMANDER: <observe>
DRIVER: <open Cabinet>
COMMANDER: <observe>
DRIVER: <pickup Newspaper>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown ArmChair>
COMMANDER: <observe>
DRIVER: Done. Anything else? <<Acknowledge,RequestMore>>
COMMANDER: <observe>
DRIVER: <close Cabinet>
COMMANDER: just that <<Instruction>>
DRIVER: <observe>
COMMANDER: but it ai'nt turning ticked <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: aint <<MiscOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Hmm. Maybe there's another newspaper? <<RequestOtherInfo>>
COMMANDER: i think theres a bug or something <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: <pickup CellPhone>
COMMANDER: <observe>
DRIVER: <move>
COMMANDER: <observe>
DRIVER: <putdown Dresser>
COMMANDER: i dont think so as the tick boxes are two <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: rather two similar sentences <<OtherInterfaceComment>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: And no other tasks are shown? <<RequestOtherInfo>>
COMMANDER: yes <<Affirm>>
DRIVER: <observe>
COMMANDER: no other tasks shoen <<InformationOther>>
DRIVER: <observe>
COMMANDER: shown <<InformationOther>>
DRIVER: <observe>
COMMANDER: <observe>
DRIVER: Does it say you can finish? <<OtherInterfaceComment>>
COMMANDER response: