Imagine you, the COMMANDER, are an embodied agent in a simulated world. Your purpose is to instruct a robot, named DRIVER, to do tasks for
you by telling it what to do and interrupting it to give further instruction when necessary. Your job here is to predict when
you should be giving instructions to the DRIVER based on turn history with the DRIVER. If there is nothing to do or say, you
should just observe.

Dialogue histories may also include dialogue actions to further clarify the dialogue. A single
utterance may have one or more dialogue acts (most have only one). The possible dialogue acts are:

[
 'Acknowledge the other's utterance', # Category: Generic. Example: "perfect." Mostly follower
 'Affirm',      # Category: Generic. Example: "yes." Mostly commander
 'AlternateQuestions', # Category: Object/Location. Example: "yellow or blue mug?" Mostly follower
 'Confirm', # Category: Generic. Example: "Should I clean the cup?" Mostly follower
 'Deny',    # Category: Generic. Example: "no." Mostly commander
 'FeedbackNegative', # Category: feedback. Example: "that is not correct." Almost entirely commander
 'FeedbackPositive', # Category: feedback. Example: "great job." Almost entirely commander
 'Greetings/Salutations', # Category: Generic. Example: "hello." Even commander/follower
 'InformationOnObjectDetails', # Category: Object/Location. Example: "knife is behind the sink." Almost entirely commander
 'InformationOther', # Category: Generic. Example: "Mug is already clean." Mostly commander
 'Instruction', # Category: Instruction. Example: "fill the mug with coffee." Almost entirely commander
 'MiscOther', # Category: Generic. Example: "ta-da." Even commander/follower
 'NotifyFailure', # Category: Interface. Example. "not able to do that." Almost entirely follower
 'OtherInterfaceComment', # Category: Interface. Example: "which button opens drawer?" Even commander/follower
 'RequestForInstruction', # Category: Instruction. Example: "what should I do today?" Almost entirely follower
 'RequestForObjectLocationAndOtherDetails', # Category: Object/Location. Example: "where is the mug?" Almost entirely follower
 'RequestMore', # Category: Instruction. Example: "Is there anything else to do?" Almost entirely follower
 'RequestOtherInfo' # Category: Instruction. Example: "how many slices of tomato?" Almost entirely follower
]

Example :
Goal: Cook 3 slice(s) of Potato and serve on a Plate.
COMMANDER: <observe>
DRIVER: hello <<Greetings/Salutations>>
<time 33.911534547805786>
COMMANDER: today we need to find the potato <<Instruction>>
DRIVER: <observe>
<time 44.61880660057068>
COMMANDER: <observe>
DRIVER: what shall i do today <<RequestForInstruction>>
<time 59.50771450996399>
COMMANDER: please look in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 90.40277457237244>
COMMANDER: the knife should be in the sink to do a slice of the potato <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 116.34811043739319>
COMMANDER: <observe>
DRIVER: <open Fridge>
<time 129.26507878303528>
COMMANDER: <observe>
DRIVER: <pickup Potato>
<time 171.5482952594757>
COMMANDER: <observe>
DRIVER: <putdown DiningTable>
<time 189.05891251564026>
COMMANDER: we need 3 potato slices please <<Instruction>>
DRIVER: <observe>
<time 197.08963823318481>
COMMANDER response:
OBSERVE

Example :
Goal: Make a plate of toast.
COMMANDER: <observe>
DRIVER: hi <<Greetings/Salutations>>
<time 32.442055463790894>
COMMANDER: <observe>
DRIVER: what can I do? <<RequestForInstruction>>
<time 35.149418354034424>
COMMANDER response:
InformationOnObjectDetails

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: <observe>
DRIVER: hello how can I help? <<Greetings/Salutations,RequestForInstruction>>
<time 15.010859727859497>
COMMANDER response:
Instruction

Example :
Goal: Prepare coffee in a clean mug.
COMMANDER: clean mug from brown side shelf and prepare coffee <<Instruction>>
DRIVER: <observe>
<time 50.28387260437012>
COMMANDER: <observe>
DRIVER: ok <<Acknowledge>>
<time 58.71951770782471>
COMMANDER: <observe>
DRIVER: <pickup Mug>
<time 79.27132797241211>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
<time 107.5679874420166>
COMMANDER: <observe>
DRIVER: <putdown Sink>
<time 110.49402284622192>
COMMANDER: <observe>
DRIVER: <toggle on Faucet>
<time 113.0690770149231>
COMMANDER: <observe>
DRIVER: <toggle off Faucet>
<time 116.7618796825409>
COMMANDER: <observe>
DRIVER: <pickup Mug>
<time 119.84709310531616>
COMMANDER: <observe>
DRIVER: <pour Sink>
<time 123.40047454833984>
COMMANDER response:
OBSERVE

Example :
Goal: Clean all the Pots.

COMMANDER response:
Greetings/Salutations

Your job is to respond to a given dialogue/action history with only one Dialogue act or OBSERVE.
Either return the dialogue act, or return the OBSERVE action. Return only one word/phrase.


Goal: Put all Drinkware in one Cabinet.
COMMANDER: <observe>
DRIVER: how can i help <<RequestForInstruction>>
<time 43.33427691459656>
COMMANDER: Can you put all the drinkware in the cabinet <<Instruction>>
DRIVER: <observe>
<time 65.49980068206787>
COMMANDER: first on is on the chair by the table <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 81.50585293769836>
COMMANDER: <observe>
DRIVER: <pickup Mug>
<time 96.66768741607666>
COMMANDER: <observe>
DRIVER: <pour Sink>
<time 108.4971570968628>
COMMANDER: <observe>
DRIVER: <open Cabinet>
<time 118.1496365070343>
COMMANDER: <observe>
DRIVER: <open Cabinet>
<time 122.88661360740662>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
<time 132.61385130882263>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
<time 139.43587946891785>
COMMANDER: another one is in the fridge <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 141.65289211273193>
COMMANDER: <observe>
DRIVER: <close Cabinet>
<time 142.193927526474>
COMMANDER: <observe>
DRIVER: <close Cabinet>
<time 149.41238236427307>
COMMANDER: <observe>
DRIVER: <open Fridge>
<time 155.04291200637817>
COMMANDER: add all of them in one cabinet <<Instruction>>
DRIVER: <observe>
<time 162.47023463249207>
COMMANDER: <observe>
DRIVER: <pickup Cup>
<time 163.39059281349182>
COMMANDER: <observe>
DRIVER: <pour Sink>
<time 173.93327379226685>
COMMANDER: <observe>
DRIVER: <open Cabinet>
<time 179.74192786216736>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
<time 183.03251385688782>
COMMANDER: <observe>
DRIVER: done <<Acknowledge>>
<time 186.44470238685608>
COMMANDER: <observe>
DRIVER: ok I will move the other now <<Acknowledge>>
<time 201.07458186149597>
COMMANDER: <observe>
DRIVER: <open Cabinet>
<time 207.2114052772522>
COMMANDER: <observe>
DRIVER: <pickup Mug>
<time 209.86773347854614>
COMMANDER: <observe>
DRIVER: <close Cabinet>
<time 212.88303637504578>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
<time 218.94330954551697>
COMMANDER: the other one is next to the cooker <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 223.36499905586243>
COMMANDER: <observe>
DRIVER: <pickup Mug>
<time 229.28555417060852>
COMMANDER: <observe>
DRIVER: <pour Sink>
<time 238.88265943527222>
COMMANDER: <observe>
DRIVER: <putdown Cabinet>
<time 245.23052144050598>
COMMANDER: <observe>
DRIVER: are there any more? <<RequestForObjectLocationAndOtherDetails>>
<time 250.89024376869202>
COMMANDER: there is one in the cabinet where the toaster is <<InformationOnObjectDetails>>
DRIVER: <observe>
<time 269.41733169555664>
COMMANDER: <observe>
DRIVER: <open Cabinet>
<time 294.8283863067627>
COMMANDER: <observe>
DRIVER: <pickup Cup>
<time 298.58762431144714>
COMMANDER response: